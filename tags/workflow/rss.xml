<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>AZ</title>
        <link>andrewzah.com</link>
        <description>Sometimes relevant thoughts by Andrew</description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="andrewzah.com/tags/workflow/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Sat, 21 Dec 2019 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>Building a Home Server with FreeNAS</title>
                <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/building-home-server-freenas/</link>
                <guid>andrewzah.com/posts/building-home-server-freenas/</guid>
                <description>&lt;p&gt;A few months ago I got gripped with server fever. I&#x27;d had a raspberry pi for a while, but I could never find a meaningful use for it. I&#x27;d tried running plex, etc, but the pi3 would choke after a bit and sputter out.&lt;&#x2F;p&gt;
&lt;p&gt;One day I decided enough was enough: it was time to build a more beefy server. (and I found a compelling use for the pi!)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;freenas-info.png&quot; data-lity data-lity-desc=&quot;FreeNAS server information&quot; alt=&quot;FreeNAS server information&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;freenas-info.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Current FreeNAS server information &lt;&#x2F;p&gt;
&lt;h3 id=&quot;my-goals&quot;&gt;My Goals&lt;&#x2F;h3&gt;
&lt;p&gt;I had a few goals I wanted to achieve:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;be relatively future-proof&lt;&#x2F;li&gt;
&lt;li&gt;host a plex server&lt;&#x2F;li&gt;
&lt;li&gt;be able to spin up multiple VMs for various reasons like testing ansible scripts&lt;&#x2F;li&gt;
&lt;li&gt;potentially host games for me and my brother&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;If all you want to do is host Plex&#x2F;jellyfish, a raspberry pi should suffice. As long as your media isn&#x27;t hvec x265. Before I built this server I had two 2tb drives plugged into my raspberry pi, and other content was fine for the most part.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-requirements&quot;&gt;The Requirements&lt;&#x2F;h3&gt;
&lt;p&gt;I don&#x27;t have space in my home for a rack for a server, due to both the size and noise. That immediately eliminated a lot of build paths that I saw.&lt;&#x2F;p&gt;
&lt;p&gt;The ideal spot for the server was my living room, so I needed a relatively low profile server- and a &lt;em&gt;quiet&lt;&#x2F;em&gt; one.&lt;&#x2F;p&gt;
&lt;p&gt;The remaining requirements were:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;at least 8 hard drive bays&lt;&#x2F;li&gt;
&lt;li&gt;a relatively modern&#x2F;beefy cpu&lt;&#x2F;li&gt;
&lt;li&gt;low(er) power consumption&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I felt like 8 drives (+1 or 2 ssds) was enough for future expansion, even with RAID-10 taken into account.
I went with a mirrored structure so I could replace drives without heavy rebuild times, and so I could easily expand the pool if necessary.
I started with 6 drives, so I have a zpool with 3 vdevs of 2 drives each.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;part-list&quot;&gt;Part List&lt;&#x2F;h3&gt;
&lt;p&gt;What I thought was going to be a relatively simple task turned into a huge amount of research...
I spent most of my time on &lt;a href=&quot;https:&#x2F;&#x2F;www.ixsystems.com&#x2F;community&#x2F;&quot;&gt;iXsystems&#x27; community forum&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;homelab&#x2F;&quot;&gt;&#x2F;r&#x2F;homelab&lt;&#x2F;a&gt; on reddit. The people on iXsystems&#x27; forum were very helpful and detailed. However, most of the information for iXsystems is based around used intel boards. Much less material is available if you&#x27;re like me and are interested in newer AMD cpus.&lt;&#x2F;p&gt;
&lt;p&gt;So how did I narrow it down? I did what I always do: make a spreadsheet. There are simply way too many options presented to figure what cpu&#x2F;mobo to choose without spreadsheet analysis. Without further ado:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;case: &lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;spreadsheets&#x2F;d&#x2F;1pThQQLHIcB_LO6-PmypGOSeaErY_ip6FY2lmbkS0DYc&#x2F;Fractal%20Design%20Node%20804%20Black%20Window%20Aluminum&#x2F;Steel%20MATX&quot;&gt;Fractal Node 804 Micro Atx Case&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;boot ssd (nvme): &lt;a href=&quot;https:&#x2F;&#x2F;www.newegg.com&#x2F;western-digital-black-nvme-250gb&#x2F;p&#x2F;N82E16820250097&quot;&gt;WD Black NVMe M.2 2280 250Gb PCI-Express 3.0 x4 SSD WDS250G2X0C&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;ssd: &lt;a href=&quot;https:&#x2F;&#x2F;www.newegg.com&#x2F;apc-bx1500m-5-x-nema-5-15r-5-x-nema-5-15r&#x2F;p&#x2F;N82E16842301561?Description=APC%20BX1500M%20Back-UPS%20Pro%201500VA%2f900W&amp;amp;cm_re=APC_BX1500M_Back-UPS_Pro_1500VA%2f900W-_-42-301-561-_-Product&quot;&gt;SAMSUNG 860 EVO Series 2.5&amp;quot; 500GB MZ-76E500B&#x2F;AM&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;intake fans x4: &lt;a href=&quot;https:&#x2F;&#x2F;smile.amazon.com&#x2F;dp&#x2F;B00650P2ZC&#x2F;?tag=ozlp-20&quot;&gt;Noctua NF-F12 WPM 120mm&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;exhaust fans x2: &lt;a href=&quot;https:&#x2F;&#x2F;smile.amazon.com&#x2F;dp&#x2F;B00CP6QLY6&#x2F;?tag=ozlp-20&quot;&gt;Noctua NF-A14 PWM 140mm&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;cpu cooler: &lt;a href=&quot;https:&#x2F;&#x2F;smile.amazon.com&#x2F;Noctua-NH-L12S-Low-Profile-Cooler-Quiet&#x2F;dp&#x2F;B075SF5QQ8&#x2F;ref=sr_1_2?keywords=NH-L12S&amp;amp;qid=1565553407&amp;amp;s=gateway&amp;amp;sr=8-2&quot;&gt;Noctua NH-L12S 70mm Low-Profile CPU Cooler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;ups&#x2F;apc: &lt;a href=&quot;andrewzah.com&#x2F;posts&#x2F;building-home-server-freenas&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.newegg.com&#x2F;apc-bx1500m-5-x-nema-5-15r-5-x-nema-5-15r&#x2F;p&#x2F;N82E16842301561?Description=APC%20BX1500M%20Back-UPS%20Pro%201500VA%2f900W&amp;amp;cm_re=APC_BX1500M_Back-UPS_Pro_1500VA%2f900W-&lt;em&gt;-42-301-561-&lt;&#x2F;em&gt;-Product&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;psu: &lt;a href=&quot;https:&#x2F;&#x2F;www.newegg.com&#x2F;seasonic-focus-plus-650-gold-ssr-650fx-650w&#x2F;p&#x2F;N82E16817151186&quot;&gt;Seasonic FOCUS Plus Series SSR-650FX 650W&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The total comes out to around $632. I don&#x27;t know why anyone would build a server without getting some sort of UPS&#x2F;APC as well.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;ul&gt;
&lt;li&gt;cpu: &lt;a href=&quot;https:&#x2F;&#x2F;www.newegg.com&#x2F;amd-ryzen-5-3600&#x2F;p&#x2F;N82E16819113569?Description=5%203600%20amd&amp;amp;cm_re=5_3600_amd-_-19-113-569-_-Product&quot;&gt;AMD Ryzen 5 3600 - 3.6Ghz&#x2F;4.2Ghz 6-core&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;mobo: &lt;a href=&quot;https:&#x2F;&#x2F;www.newegg.com&#x2F;p&#x2F;N82E16813157887?Description=asrock%20x570m%20&amp;amp;cm_re=asrock_x570m-_-13-157-887-_-Product&quot;&gt;ASRock X570M Pro4 AM4 MicroAtx&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;ram x3: &lt;a href=&quot;https:&#x2F;&#x2F;smile.amazon.com&#x2F;Crucial-DDR4-21300-Server-Memory-CT16G4WFD8266&#x2F;dp&#x2F;B078N7HC6L&quot;&gt;Crucial 16GB DDR4-2666 ECC UDIMM CT16G4WFD8266&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The total was $676 for these parts, with $291 for the memory alone. DDR4 ram with ecc isn&#x27;t cheap. For comparison, a Xeon E5-2650 V2 goes for around $70 on ebay, with significantly cheaper DDR3 ram.&lt;&#x2F;p&gt;
&lt;div class=&quot;note note-Note&quot;&gt;
  &lt;h4&gt;Note&lt;&#x2F;h4&gt;
  &lt;span&gt;I&amp;#x27;ve used the ryzen setup for 3+ months now with no issues.&lt;&#x2F;span&gt;
&lt;&#x2F;div&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;So I was already at $1,300, &lt;em&gt;before&lt;&#x2F;em&gt; purchasing hard drives. I bought 6 Western Digital Red 4TB drives initially, @ $100. Later on I got 2 more drives, and another stick of ram.&lt;&#x2F;p&gt;
&lt;p&gt;Altogether, it was $1300 for the parts + $800 for the drives, or ~$2100 in total.&lt;&#x2F;p&gt;
&lt;p&gt;I didn&#x27;t go with a used intel board because of the higher power usage and less powerful specs. This made my build much more expensive, but also more future proof.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;&#x2F;h3&gt;
&lt;p&gt;I adapted my jail setup and structure from &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;mow4cash&#x2F;e2fd4991bd2b787ca407a355d134b0ff&quot;&gt;this gist&lt;&#x2F;a&gt;, and installed rancheros via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;redshift-s&#x2F;rancheros-docker-media&quot;&gt;this guide&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I currently have 20 &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;FreeBSD_jail&quot;&gt;jails&lt;&#x2F;a&gt; running, and 5 docker containers running in &lt;a href=&quot;https:&#x2F;&#x2F;rancher.com&#x2F;rancher-os&#x2F;&quot;&gt;RancherOS&lt;&#x2F;a&gt; (which &lt;a href=&quot;https:&#x2F;&#x2F;www.ixsystems.com&#x2F;documentation&#x2F;freenas&#x2F;11.2-U7&#x2F;virtualmachines.html&quot;&gt;runs in a VM&lt;&#x2F;a&gt; with 2 cpus and 4GB memory).&lt;&#x2F;p&gt;
&lt;p&gt;Why jails over docker? Convenience, I guess. It&#x27;s far easier for me to muck around in iocage jails than it is to inspect and debug docker containers. Unfortunately this does mean if I lose my server, I&#x27;d have to recreate all those jails... but setting them up in the first place was pretty easy once I learned how &lt;a href=&quot;https:&#x2F;&#x2F;www.freebsd.org&#x2F;cgi&#x2F;man.cgi?query=rc.d&amp;amp;sektion=8&amp;amp;n=1&quot;&gt;rc.d&lt;&#x2F;a&gt; worked.&lt;&#x2F;p&gt;
&lt;p&gt;Services that I run:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;backblaze
  -&amp;gt; data backup
bazarr
  -&amp;gt; grabs subtitles in multiple languages, hooks into radarr&#x2F;sonarr
caddy
  -&amp;gt; reverse proxy to some of these services
calendar
  -&amp;gt; radicale
kitana
  -&amp;gt; ui for plex plugins
mailbackup
  -&amp;gt; offlineimap + cron
node_exporter
  -&amp;gt; feeds into prometheus on the raspberry pi
paperless
  -&amp;gt; digital document store
plex
  -&amp;gt; media catalogue + streaming
radarr
  -&amp;gt; monitors local shows for for bazarr subtitle grabbing
sonarr
  -&amp;gt; monitors local movies for for bazarr subtitle grabbing
syncthing
  -&amp;gt; seamlessly sync files between computers
thelounge
  -&amp;gt; modern irc client. I used to use znc+weechat, but I got
     tired of weechat&amp;#39;s ux. thelounge is simple and pretty.
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;postgres
mysql
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Several services use databases, so I elected to set aside jails for them.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;mc_main
mc_creative
mc_survival
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also run 3 instances of minecraft via &lt;a href=&quot;https:&#x2F;&#x2F;papermc.io&#x2F;&quot;&gt;PaperMC&lt;&#x2F;a&gt;, a high performance fork of &lt;a href=&quot;https:&#x2F;&#x2F;www.spigotmc.org&#x2F;&quot;&gt;Spigot&lt;&#x2F;a&gt;. The main jail runs &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PaperMC&#x2F;Waterfall&quot;&gt;Waterfall&lt;&#x2F;a&gt;
(a fork of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SpigotMC&#x2F;BungeeCord&quot;&gt;bungeecord&lt;&#x2F;a&gt;) along with a hub instance.
Waterfall acts as a proxy and lets one access multiple servers within a network.&lt;&#x2F;p&gt;
&lt;p&gt;My docker services:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;andrewzah&#x2F;gollum
  -&amp;gt; a wiki with changes automatically git pushed
  -&amp;gt; a fork of gollum with user logins
insekticid&#x2F;docker-piwiki (matomo)
  -&amp;gt; self-hosted analytics (tracking andrewzah.com)
  -&amp;gt; respects requests to not track user
radhifadlillah&#x2F;shiori
  -&amp;gt; self-hosted website backup, similar to archive.web
huginn&#x2F;huginn
  -&amp;gt; self-hosted, more powerful version of IFTTT
cwspear&#x2F;docker-local-persist-volume-plugin
  -&amp;gt; allows local volume mounts in portainer&#x2F;rancheros
portainer&#x2F;portainer
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;freenas-memory.png&quot; data-lity data-lity-desc=&quot;FreeNAS memory graph&quot; alt=&quot;FreeNAS memory graph&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;freenas-memory.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Current FreeNAS memory graph &lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-use-for-the-raspberry-pi&quot;&gt;A Use for the Raspberry Pi&lt;&#x2F;h3&gt;
&lt;p&gt;Once I built the server, I had no use for my raspberry pi3 and 4. Until I learned about &lt;a href=&quot;https:&#x2F;&#x2F;prometheus.io&#x2F;&quot;&gt;prometheus&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;&quot;&gt;grafana&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Having metrics and a dashboard is awesome, but if my server crashes, I no longer have access to the metrics... So they have to be run somewhere else! This is where the raspberry pi comes in- it just sits on my local network ingesting traffic.&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately, node_exporter doesn&#x27;t seem to export hdd temperature values, which is pretty important. I&#x27;ll probably have to write a simple script to pull those values and host another metrics target for prometheus.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;grafana-node-exporter.png&quot; data-lity data-lity-desc=&quot;Grafana with node_exporter metrics from FreeNAS&quot; alt=&quot;Grafana with node_exporter metrics from FreeNAS&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;grafana-node-exporter.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Grafana with node_exporter metrics from FreeNAS &lt;&#x2F;p&gt;
&lt;h4 id=&quot;why-freenas&quot;&gt;Why FreeNAS?&lt;&#x2F;h4&gt;
&lt;p&gt;FreeNAS has extensive documentation. and *BSDs are nice. ZFS and RAID are nice. Free Software is nice. &lt;&#x2F;p&gt;
&lt;p&gt;If I didn&#x27;t use docker so heavily I would likely use FreeBSD or OpenBSD for my personal computers as well instead of Debian.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Overall the process of building a server was pretty fun, but I&#x27;m glad I&#x27;m done with that for the foreseeable future. I didn&#x27;t self-host that much when I began, but once I started adding services I started thinking about everything I could self host.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>My setup for remote programming on OSX in 2019</title>
                <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/my-setup-remote-programming-osx-2019/</link>
                <guid>andrewzah.com/posts/my-setup-remote-programming-osx-2019/</guid>
                <description>&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;wework-gangnam.jpg&quot; data-lity data-lity-desc=&quot;Working remotely at WeWork in Gangnam Seoul&quot; alt=&quot;Working remotely at WeWork in Gangnam Seoul&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;wework-gangnam.jpg&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Working remotely at WeWork, 강남, 서울 (Gangnam, Seoul) &lt;&#x2F;p&gt;
&lt;p&gt;Hi! My name is Andrew, and I work remotely as a software developer. I&#x27;ve worked while traveling across America with spotty or no internet connection. I&#x27;ve worked in countries like South Korea and Japan. I like traveling, and this is how I stay productive.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;development-machine&quot;&gt;Development Machine&lt;&#x2F;h2&gt;
&lt;p&gt;Before we begin, why apple and osx?&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;battery life&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;battery life&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;li&gt;weight&lt;&#x2F;li&gt;
&lt;li&gt;unix-like environment&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;and to an extent, some proprietary or osx-only apps: photoshop, premiere, affinity designer, and sketch.&lt;&#x2F;p&gt;
&lt;p&gt;Before you scoff, I used freebsd and arch on my home pc as daily drivers. I used a modded thinkpad t430 for a few months as well.&lt;a id=&quot;footnote-cite-0&quot; href=&quot;#footnote-0&quot;&gt;(0)&lt;&#x2F;a&gt; I put in an i7-3632QM (quadcore) chip, a quieter heatsink, 2x8gb memory, a t420 old-style keyboard, and a 9 cell battery.&lt;&#x2F;p&gt;
&lt;p&gt;It was sweet... before I started lugging it around.&lt;&#x2F;p&gt;
&lt;p&gt;Weight-wise it was slightly heavier than my 15&amp;quot; macbook (~4.5lbs?), and the battery life made it unusable. I was getting 4-5 hours, max, and occasionally it would just die earlier than expected. (Forcing me to go reset the system time in BIOS).&lt;&#x2F;p&gt;
&lt;p&gt;I was always worried about my power source. I &lt;a href=&quot;&#x2F;posts&#x2F;living-out-of-two-backpacks-a-six-month-retrospective&#x2F;&quot;&gt;have lived out of two backpacks&lt;&#x2F;a&gt; and worked remotely while traveling, so I can&#x27;t rely on always being next to an outlet.  My 2015 13&amp;quot; macbook pro&#x27;s battery is still good to the point that I can get 6-7 hours out of it while working with Rust&#x2F;C#. It&#x27;s more like 8-9 if I&#x27;m only doing light writing, etc. &lt;&#x2F;p&gt;
&lt;p&gt;I know someone&#x27;s going to respond with &amp;quot;but oh, you should&#x27;ve just used power++ with x, y, z configurations!&amp;quot;. I &lt;em&gt;did&lt;&#x2F;em&gt; experiment with different settings with power++ and other alternative tools–nothing seemed to help. Call me a grumpy old man but I want to work and get things done... not fiddle about with battery tuning settings and the like.&lt;&#x2F;p&gt;
&lt;p&gt;Eventually I&#x27;ll need to replace this mac. All post-2015 macbooks have been undesirable to me so I&#x27;ll probably go with a dell xps 13&amp;quot;, or maybe a System76 Galago. I just want a durable machine with an excellent battery that&#x27;ll work years later and won&#x27;t have me configuring things constantly. Is that too much to ask?&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;At home I do have an x201 and x220 thinkpad however. They&#x27;re great for testing different operating systems, etc. I just don&#x27;t like traveling with them. The x201 is quite small so hopefully it&#x27;ll become my main writing machine.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;configuring-osx-tools&quot;&gt;Configuring OSX &amp;amp; Tools&lt;&#x2F;h2&gt;
&lt;p&gt;The first thing I always do is install xcode-tools, iTerm2, brew, and zsh. Then I clone the osx branch of my &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;dotfiles&#x2F;tree&quot;&gt;dotfiles repo&lt;&#x2F;a&gt; and symlink the files where they need to be. I should automate this part with a script, but making that script would take me far more more time than just doing it manually. Not worth it, for now at least.&lt;&#x2F;p&gt;
&lt;p&gt;You can use &lt;code&gt;brew leaves&lt;&#x2F;code&gt; to see installed items and &lt;code&gt;brew cask list&lt;&#x2F;code&gt; for cask items. I &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;dotfiles&#x2F;tree&#x2F;osx&#x2F;brew-leaves&quot;&gt;stored&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;dotfiles&#x2F;tree&#x2F;osx&#x2F;cask-list&quot;&gt;mine&lt;&#x2F;a&gt; when I originally started abstracting out my dotfiles.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;poor-man-s-window-tiling&quot;&gt;poor man&#x27;s window tiling&lt;&#x2F;h3&gt;
&lt;p&gt;After using i3 I can&#x27;t go back to non-tiling window managers. I long for the day that i3 works natively on osx. Sigh.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve somewhat replicated it with &lt;a href=&quot;https:&#x2F;&#x2F;koekeishiya.github.io&#x2F;chunkwm&#x2F;&quot;&gt;chunkwm&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koekeishiya&#x2F;skhd&quot;&gt;skhd&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tekezo&#x2F;Karabiner&quot;&gt;karabiner&lt;&#x2F;a&gt;. Chunkwm is a tiling window manager, but it doesn&#x27;t handle keyboard input. That&#x27;s where skhd comes in. I copy&#x2F;pasted to my &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;dotfiles&#x2F;tree&#x2F;osx&#x2F;.khdrc&quot;&gt;khdrc&lt;&#x2F;a&gt; but to be honest I don&#x27;t use most of these hotkeys still.&lt;&#x2F;p&gt;
&lt;p&gt;Then, I use karabiner to make my right command key into a hyper key– it presses shift, command, control, and option.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;cons&quot;&gt;cons&lt;&#x2F;h4&gt;
&lt;p&gt;Some applications have minimum window sizes. So if I have too many windows in one workspace, they will just overlap. Spotify and KakaoTalk are example offenders.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;overlap.png&quot; data-lity data-lity-desc=&quot;An example image showing how Kakaotalk does not layout correctly when I have a terminal kakaotalk and two chat windows open&quot; alt=&quot;An example image showing how Kakaotalk does not layout correctly when I have a terminal kakaotalk and two chat windows open&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;overlap.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Notice the overlaps in bottom left and bottom middle. &lt;&#x2F;p&gt;
&lt;h3 id=&quot;poor-man-s-workspaces&quot;&gt;poor man&#x27;s workspaces&lt;&#x2F;h3&gt;
&lt;p&gt;I use 10 Spaces. I added shortcuts to quickly focus them: hyper + 1-5, w-y.&lt;&#x2F;p&gt;
&lt;p&gt;I disable &amp;quot;Automatically rearrange Spaces based on most recent use&amp;quot;, in Settings -&amp;gt; Mission Control. This has got to be one of the worst defaults ever made.&lt;&#x2F;p&gt;
&lt;p&gt;My workspaces generally follow this order:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;terminal (currently iterm2)&lt;&#x2F;li&gt;
&lt;li&gt;browser (firefox)&lt;&#x2F;li&gt;
&lt;li&gt;misc &#x2F; Rider &#x2F; Safari&lt;&#x2F;li&gt;
&lt;li&gt;misc&lt;&#x2F;li&gt;
&lt;li&gt;misc&lt;&#x2F;li&gt;
&lt;li&gt;[w] misc &#x2F; desktop &#x2F; vlc &#x2F; signal&lt;&#x2F;li&gt;
&lt;li&gt;[e] misc &#x2F; discord&lt;&#x2F;li&gt;
&lt;li&gt;[r] kakaotalk, messages app&lt;&#x2F;li&gt;
&lt;li&gt;[t] anki&lt;&#x2F;li&gt;
&lt;li&gt;[y] thunderbird&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Something about the Catalina update broke &lt;code&gt;hyper + q&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;apps&quot;&gt;apps&lt;&#x2F;h3&gt;
&lt;p&gt;I almost always have iterm2, firefox, kakaotalk, anki, and thunderbird running.&lt;&#x2F;p&gt;
&lt;p&gt;Misc tools I generally use:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;DB Browser for SQLite&lt;&#x2F;li&gt;
&lt;li&gt;Insomnia (REST api testing)&lt;&#x2F;li&gt;
&lt;li&gt;Azure Data Studio (ms-sql querying)&lt;&#x2F;li&gt;
&lt;li&gt;Datagrip (reading stored procedures &#x2F; db schemas)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Task bar apps:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Harvest (time tracking)&lt;&#x2F;li&gt;
&lt;li&gt;Duet (use my ipad as an extra display)*&lt;&#x2F;li&gt;
&lt;li&gt;Caffeine (prevent my computer from sleeping)&lt;&#x2F;li&gt;
&lt;li&gt;SnapScan client (for my &lt;a href=&quot;https:&#x2F;&#x2F;www.fujitsu.com&#x2F;global&#x2F;products&#x2F;computing&#x2F;peripheral&#x2F;scanners&#x2F;scansnap&#x2F;ix500&#x2F;&quot;&gt;Fujitsu ix500 scanner&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And non programming-related ones:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Discord (messaging, language study, rss)&lt;&#x2F;li&gt;
&lt;li&gt;KakaoTalk (messaging)&lt;&#x2F;li&gt;
&lt;li&gt;Line (messaging)&lt;&#x2F;li&gt;
&lt;li&gt;Signal (messaging)&lt;&#x2F;li&gt;
&lt;li&gt;Anki (flash card study)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;code-editor&quot;&gt;code editor&lt;&#x2F;h3&gt;
&lt;p&gt;For non-C# code, I use neovim, vim, or vi, in that order. I don&#x27;t really care what you use. I like (neo)vim, so I use that. I just become disappointed when people reflexively dismiss it (or Emacs) because they have any learning curve, like at all. There&#x27;s a &lt;em&gt;reason&lt;&#x2F;em&gt; why vim has one, and it&#x27;s not because Bram Moolenaar is particularly masochistic. In particular, modal editing and buffers&lt;a id=&quot;refer-0&quot; href=&quot;#reference-0&quot;&gt;(0)&lt;&#x2F;a&gt; are why I enjoy vim.&lt;&#x2F;p&gt;
&lt;p&gt;Even if you don&#x27;t use vim, I urge you to read the manuals of the software that you do use. Small tidbits of knowledge add up over time, especially with common repetitive actions.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s also good to know a little &lt;code&gt;vi&lt;&#x2F;code&gt; when you mess up your FreeBSD installation and have to dip into an emergency shell. Will &lt;code&gt;nano&lt;&#x2F;code&gt; be accessible then?&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Modern Vim&lt;&#x2F;em&gt; by Drew Neil is a fantastic read. I read parts of it here and there to glean ways I can improve my vim usage. Every vim user should read &lt;em&gt;Oil and vinegar - split windows and the project drawer&lt;&#x2F;em&gt; &lt;a href=&quot;http:&#x2F;&#x2F;vimcasts.org&#x2F;blog&#x2F;2013&#x2F;01&#x2F;oil-and-vinegar-split-windows-and-project-drawer&#x2F;&quot;&gt;from vimcasts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;You can see my &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;dotfiles&#x2F;tree&#x2F;osx&#x2F;config&#x2F;nvim&#x2F;init.vim&quot;&gt;neovim configuration here&lt;&#x2F;a&gt; here, although I need to prune it a bit. The biggest changes I&#x27;ve made are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;mapping jj to escape from insert mode, or otherwise using ctrl-[ otherwise to avoid repetitive strain from hitting escape&lt;&#x2F;li&gt;
&lt;li&gt;using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf.vim&quot;&gt;fzf&lt;&#x2F;a&gt; + &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf&quot;&gt;fzf.vim&lt;&#x2F;a&gt; to fuzzy search through my files.&lt;&#x2F;li&gt;
&lt;li&gt;using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;w0rp&#x2F;ale&quot;&gt;ale&lt;&#x2F;a&gt; to asynchronously lint and fix files (but only on file save. I hate over-eager tools that complain when I&#x27;m halfway through writing code)&lt;&#x2F;li&gt;
&lt;li&gt;using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;vim-plug&quot;&gt;plug&lt;&#x2F;a&gt; to manage plugins and lazily-load them&lt;&#x2F;li&gt;
&lt;li&gt;disabling vim&#x27;s annoying swapfile system.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Oh, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;morhetz&#x2F;gruvbox&quot;&gt;gruvbox&lt;&#x2F;a&gt;, possibly one of the best color schemes ever made. Every once in a while I experiment with a different scheme but I inevitably get drawn back to the king. If someone made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;arcticicestudio&#x2F;nord&quot;&gt;Nord&lt;&#x2F;a&gt; but with green as the main color instead of blue, I might use that.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;nvim.png&quot; data-lity data-lity-desc=&quot;Screenshot of neovim with four buffers open and using monaco font&quot; alt=&quot;Screenshot of neovim with four buffers open and using monaco font&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;nvim.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; neovim with four *buffers* open – and monaco font &lt;&#x2F;p&gt;
&lt;h4 id=&quot;cons-1&quot;&gt;cons&lt;&#x2F;h4&gt;
&lt;p&gt;Vim&#x27;s autocompletion... exists I guess. A while ago I looked into it but it seemed not worth the hassle to set up. Anyway, ctrl-p in &lt;code&gt;insert&lt;&#x2F;code&gt; mode brings up suggestions from open buffers. Good thing &lt;code&gt;p&lt;&#x2F;code&gt; is right next to &lt;code&gt;[&lt;&#x2F;code&gt;, which takes you out of &lt;code&gt;insert&lt;&#x2F;code&gt; mode. &#x2F;s&lt;&#x2F;p&gt;
&lt;p&gt;As an aside, did you know that &lt;code&gt;vim&lt;&#x2F;code&gt; displays &lt;code&gt;Type :quit&amp;lt;Enter&amp;gt; to exit Vim&lt;&#x2F;code&gt; if you hit ctrl-c, and that it&#x27;s done so for a long time? Is your joke very outdated and unoriginal? Yes, yes it is.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;code-editor-for-c&quot;&gt;code editor (for C#)&lt;&#x2F;h3&gt;
&lt;p&gt;I use &lt;a href=&quot;https:&#x2F;&#x2F;www.jetbrains.com&#x2F;rider&#x2F;&quot;&gt;IntelliJ Rider&lt;&#x2F;a&gt; on both osx and arch. I think the value is worth it. It&#x27;s definitely nowhere near as snappy as vim but doing C# without autocompletions would eb... rough. The build profiles and test runners are pretty nice. Modifying environment variables and profile configurations is tedious.&lt;&#x2F;p&gt;
&lt;p&gt;The Intellij plugin ecosystem is great- you can easily install plugins in any of their editors, to my knowledge. There&#x27;s even an official &lt;a href=&quot;https:&#x2F;&#x2F;intellij-rust.github.io&#x2F;&quot;&gt;rust plugin&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;However, cmd-4 is the shortcut to close tabs..?! The default controls are interesting, to put it one way.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;workflow&quot;&gt;Workflow&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;tasks&quot;&gt;tasks&lt;&#x2F;h3&gt;
&lt;p&gt;Everything starts and ends with meetings and slack. I work on different projects for clients and my team has a daily 5-30min call at 9am (10pm in Korea).&lt;&#x2F;p&gt;
&lt;p&gt;In Slack and our meetings we&#x27;ll discuss what needs to be done. I or others will make bullet points of the most pertinent stuff that needs to be done. No agile or anything, &lt;a href=&quot;https:&#x2F;&#x2F;steve-yegge.blogspot.com&#x2F;2006&#x2F;09&#x2F;good-agile-bad-agile_27.html&quot;&gt;thank god&lt;&#x2F;a&gt;. We previously used a few different ticket tracking systems and I&#x27;ve found that they all suck. &lt;a href=&quot;https:&#x2F;&#x2F;www.jetbrains.com&#x2F;youtrack&#x2F;&quot;&gt;YouTrack&lt;&#x2F;a&gt; sucks, but it was better than the proprietary abomination one of our clients made us use. The only good system I&#x27;ve found is:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;make a list (or queue, if you prefer it that way) of things&lt;&#x2F;li&gt;
&lt;li&gt;roughly ballpark estimates, with the understanding that estimating things is notoriously difficult&lt;&#x2F;li&gt;
&lt;li&gt;accurately prioritize those things (if everything is #1&#x2F;urgent, nothing is)&lt;&#x2F;li&gt;
&lt;li&gt;work on those things&lt;&#x2F;li&gt;
&lt;li&gt;discuss progress and blockers in daily call and&#x2F;or slack&lt;&#x2F;li&gt;
&lt;li&gt;repeat&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;That&#x27;s it.&lt;&#x2F;p&gt;
&lt;p&gt;On top of this, issues in github&#x2F;gitlab&#x2F;etc are also pretty good if you come up with good labels. Right now I&#x27;m experimenting with Github&#x27;s Projects and semi-automated issues on our newest project.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Being 13 hours ahead does pose issues occasionally, but I solved this by going to sleep a bit later (about 1am or so). Having different things to work on is also important– if I&#x27;m ever blocked on something, such as waiting for a teammate to wake up and answer a question, I can just work on something else in the meantime. This async style of work won&#x27;t work if you always need rapid communication with your team.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;logging-my-thoughts&quot;&gt;logging my thoughts&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;notational.net&#x2F;&quot;&gt;Notational Velocity&lt;&#x2F;a&gt; application changed my life. At its core, the idea is deceivingly simple.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTIONAL VELOCITY is an application that &lt;strong&gt;stores and retrieves notes&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It is an attempt to loosen the mental blockages to recording information and to scrape away the tartar of convention that handicaps its retrieval.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You store text in notes. There is only one search box–if a file doesn&#x27;t exist for your search string, one will automatically be created.&lt;&#x2F;p&gt;
&lt;p&gt;I began to use it for just about everything, since any and all information I had written down could now be easily searched through and found.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;seldom-used vim tidbits&lt;&#x2F;li&gt;
&lt;li&gt;miscellaneous knowledge about real languages (I study Korean)&lt;&#x2F;li&gt;
&lt;li&gt;random snippets for programming languages (how do I open a file in ruby again?)&lt;&#x2F;li&gt;
&lt;li&gt;tentative to-do lists&lt;&#x2F;li&gt;
&lt;li&gt;niche, detailed information like serial numbers and specs for equipment that I bought&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It was glorious. Except... it was, and still is, mac only. At home I use *nix systems or windows, so using it became tedious and I eventually stopped.&lt;&#x2F;p&gt;
&lt;p&gt;As I was writing this article, I discovered &lt;a href=&quot;https:&#x2F;&#x2F;brettterpstra.com&#x2F;projects&#x2F;nvalt&#x2F;&quot;&gt;nVALT&lt;&#x2F;a&gt;–Brett Terpstra&#x27;s fork. It has more functionality like markdown support and a better interface. No vim keybindings though, which made it unpleasant for me to use. Terpstra is working on &lt;a href=&quot;https:&#x2F;&#x2F;brettterpstra.com&#x2F;2019&#x2F;04&#x2F;10&#x2F;codename-nvultra&#x2F;&quot;&gt;nvUltra&lt;&#x2F;a&gt; currently which may fix this.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;alok&amp;#x2F;notational-fzf-vim&amp;#x2F;master&amp;#x2F;screenshots&amp;#x2F;usage.gif&quot; data-lity data-lity-desc=&quot;A gif showcasing how notational fzf vim works.&quot; alt=&quot;A gif showcasing how notational fzf vim works.&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;alok&amp;#x2F;notational-fzf-vim&amp;#x2F;master&amp;#x2F;screenshots&amp;#x2F;usage.gif&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Taken from https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;Alok&amp;#x2F;notational-fzf-vim &lt;&#x2F;p&gt;
&lt;p&gt;After I started writing this article, Alex Singh released &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alok&#x2F;notational-fzf-vim&quot;&gt;notational-fzf-vim&lt;&#x2F;a&gt;, which is basically notational velocity but in vim! As the name implies, fulltext searching is powered by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf.vim&quot;&gt;fzf&lt;&#x2F;a&gt;, which in turn uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;ripgrep&quot;&gt;ripgrep&lt;&#x2F;a&gt; by default. Both are excellent tools I use daily.&lt;&#x2F;p&gt;
&lt;p&gt;The preview window is amazing..!&lt;&#x2F;p&gt;
&lt;p&gt;In order to use it, you need to specify at least one directory for the plugin to search. This will be the primary directory where new notes will be saved, but you can search multiple directories.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&amp;quot; notational fzf vim
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;g:nv_search_paths =
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;~&#x2F;Desktop&#x2F;Sync&#x2F;thoughts&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;~&#x2F;Desktop&#x2F;Sync&#x2F;thoughts&#x2F;korean&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and some example files that I&#x27;ve written to this week:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;packing-list.md
self-publishing.md
useful-shell-scripts.md
vim.md
watches.md
youtube-videos.md
korean&#x2F;colloquial-or-slang.md
korean&#x2F;color-names.md
korean&#x2F;clothes-verbs.md
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;This is my personal setup. I find it fascinaing to look at other people&#x27;s workflows and see how they handle things. Usually I can take away a thing or two and improve my own workflow. Feel free to make suggestions.&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>
