<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Andrew Zah</title>
        <link>andrewzah.com</link>
        <description>Sometimes relevant thoughts by Andrew</description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="andrewzah.com/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Tue, 28 May 2019 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>Friends</title>
                <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/friends/</link>
                <guid>andrewzah.com/friends/</guid>
                <description>&lt;h2 id=&quot;friendly-sites&quot;&gt;Friendly sites&lt;&#x2f;h2&gt;
&lt;p&gt;Links to sites operated by friends, colleagues, and acquaintances that write about interesting things. &lt;&#x2f;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2f;&#x2f;cdaniels.net&quot;&gt;Charles Daniels&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;honeymouse&#x2f;&quot;&gt;honeymouse&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
</description>
            </item>
        
            <item>
                <title>Web Assembly: What is it? Does it do things? Let&#x27;s find out!</title>
                <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/talks/web-assembly-rust-seoul/</link>
                <guid>andrewzah.com/talks/web-assembly-rust-seoul/</guid>
                <description>&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% !TEX program = XeLaTeX
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\documentclass&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[aspectratio=169]{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;beamer&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\mode&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;presentation&amp;gt;

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;tikz&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;pgfpages&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;} &lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% notes
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;graphicx&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;} &lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% for syntax highlighting definitions
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;fontspec&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;} &lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% for custom firacode setup
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;listings&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;} &lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% for formatting codeblocks
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[T1]{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;fontenc&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\usetheme&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{AnnArbor}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\usecolortheme&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{spruce}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\usecolortheme&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{rose}

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\setbeamertemplate&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{navigation symbols}{}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\setbeamertemplate&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{enumerate items}[default]
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\setbeamercolor&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{item projected}{bg=green!40!black,fg=white}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\setbeamercolor&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{section in toc}{fg=black}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%\setbeameroption{show notes on second screen}


%% code syntax highlighting
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lightgray}{rgb}{.9,.9,.9}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{darkgray}{rgb}{.4,.4,.4}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{purple}{rgb}{0.65, 0.12, 0.82}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-red}{RGB}{204,36,29}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-yellow}{RGB}{215,153,33}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-aqua}{RGB}{104,157,106}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-green}{RGB}{69,133,136}

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\lstdefinelanguage&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{JavaScript}{
  keywords={break, case, then, catch, continue, debugger, default, delete, do, else, false, finally, for, function, if, in, instanceof, new, null, return, switch, this, throw, true, try, typeof, var, void, while, with},
  morecomment=[l]{&#x2f;&#x2f;},
  morecomment=[s]{&#x2f;*}{*&#x2f;},
  morestring=[b]&amp;#39;,
  morestring=[b]&amp;quot;,
  ndkeywords={class, export, boolean, throw, implements, import, this},
  keywordstyle=&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-green}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  ndkeywordstyle=&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{darkgray}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  identifierstyle=&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{black}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  stringstyle=&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{darkgray}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  frame=none,
  sensitive=true
}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\lstdefinelanguage&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Rust}{
  keywordstyle=&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-yellow}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  keywordstyle=[1]{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-aqua}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;},
  keywordstyle=[2]{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-yellow}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;},
  keywordstyle=[3]{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-red}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;},
  morestring=[b]&amp;quot;,
  morestring=[b]&amp;#39;,
  stringstyle=&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gray}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  otherkeywords = {&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\&amp;amp;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;Display, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\&amp;amp;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;str, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\#&lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;\[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;wasm&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;bindgen&lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;\]&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;},
  morekeywords=[1]{derive, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\#&lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;\[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;wasm&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;bindgen&lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;\]&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, wasm&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;bindgen, js&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;namespace, console},
  morekeywords=[2]{Serialize, KoreanInteger, Deserialize, String, i128, i32, char, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\&amp;amp;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;str, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\&amp;amp;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;Display},
  morekeywords=[3]{use, pub, fn, extern, struct, self, impl},
  frame=none,
  sensitive=true
}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\lstdefinelanguage&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{WASM}{
  keywords=[1]{module, type, func, table, memory, export, param, result},
  keywordstyle=&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-green}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  frame=none,
  sensitive=true
}

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\lstset&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;  basicstyle  = &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\fontfamily&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{pcr}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\fontsize&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{10pt}{12pt}&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\selectfont&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  numberstyle = &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\small&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  numbersep   = 10pt,
  frame=none,
}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%% behavior modifications

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\newenvironment&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\itemize\addtolength&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\itemsep&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}{10pt}}{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\enditemize&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\AtBeginSection&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[]
{
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;Journey&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\tableofcontents&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[currentsection]
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%% metadata

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\title&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[WASM!]{Web Assembly: What does it do? Does it do things? Let&amp;#39;s find out!}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\author&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[]{Andrew Zah &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&amp;lt;zah@andrewzah.com&amp;gt;}}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\institute&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[Rust Meetup Seoul]{Rust Meetup Seoul}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\date&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{May 28, 2019}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%% preamble over

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{document}
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\maketitle

\section*&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Journey}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\tableofcontents
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%%%%%%%%%%%%%%%%%%%

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\section&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{What is WASM?}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;Web Assembly&amp;#39;s Definition&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{from webassembly.org (emphasis mine)}
    WebAssembly (abbreviated Wasm) is a &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{binary instruction format} for a &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{stack-based virtual machine}. Wasm is designed as a &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{portable target} for compilation of high-level languages like C&#x2f;C++&#x2f;Rust, enabling &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{deployment on the web} for client and server applications.
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;What WASM is not&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM is not a programming language, though you can write by hand
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; WASM isn&amp;#39;t standalone: it needs a host
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; WASM is not intended to replace javascript
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;what is it actually, though?&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM&amp;#39;s format isn&amp;#39;t coupled to any OS or architecture
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; Very similar to Java&amp;#39;s bytecode or C&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\#&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;#39;s CLR
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; Name and definition is a misnomer
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; It can run &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{anywhere} you can build a &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{host}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;WASM&amp;#39;s specification&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM is &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{stack-based}, not register-based
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; WASM 1.0 only has 4 primitives
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; `i32`, `i64`, `f32`, `f64` 
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; No arrays
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;5-&amp;gt; no &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{jmp} instruction
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\note&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[item]{Forth and retro are just about the only somewhat-mainline language that are stack-based.}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\note&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[item]{RPL also exists but&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ldots&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;memory&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.5&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
      &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM has no &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{new::()} operator or &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{heap}
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; There are no objects or or garbage collection
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; Instead, WASM has &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{linear memory}
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; this causes a need for linearization and bitmasking, etc
      &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.5&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
      &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{center}
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\uncover&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; {
          &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{tikzpicture}
            &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\draw&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; [gray] (0,0) rectangle (4,1) node[pos=.5] {unused};
            &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\draw&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; [teal] (0,1) rectangle (4,2) node[pos=.5] {var3 [80&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ldots&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;119]};
            &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\draw&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; [gray] (0,2) rectangle (4,3) node[pos=.5] {var2 [40&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ldots&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;79]};
            &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\draw&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; [teal] (0,3) rectangle (4,4) node[pos=.5] {var1 [0&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ldots&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;39]};
          &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{tikzpicture}
        }
      &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{center}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;anyone can be a WASM host!&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{alertblock}{The Host needs to:}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{enumerate}
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Load and validate the WASM binary (the file, not the logic)
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; Expose Exports
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; Satisfy Imports
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; Interpret &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\&amp;amp;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Execute Modules
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;5-&amp;gt; Isolate Modules
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{enumerate}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{alertblock}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;infinity and beyond?&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WebAssembly modules are hotswappable
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; PLCs (Programmable Logic Controllers) could adhere to a well-known contract
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; This would let us program for hardware controllers in &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{any language}!
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasmi} is an rust open-source wasm interpreter
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{serverless-wasm} does indeed exist
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;security&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM binaries can always be converted back to plaintext
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; Do not put secrets in WASM modules
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Message handoffs} are not always secure!
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; Accordingly, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{sign} and &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{encrypt} modules!
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;add example: rust side&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.rs}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=rust]
#[no_mangle]
pub extern &amp;quot;C&amp;quot; fn add_one(x: i32) -&amp;gt; i32 {
    x + 1
}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;add example: generated WASM&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.wasm}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=wasm]
(module
  (type $t0 (func (param i32) (result i32)))
  (func $add_one
      (export &amp;quot;add_one&amp;quot;) (type $t0) (param $p0 i32) (result i32)
    get_local $p0
    i32.const 1
    i32.add)
  (table $T0 1 1 anyfunc)
  (memory $memory (export &amp;quot;memory&amp;quot;) 17))
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;summary&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM is simply a instruction format that&amp;#39;s portable
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM can run anywhere so long as a host exists
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Just because you can write WASM doesn&amp;#39;t mean you should
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%%%%%%%%%%%%%%%%%%%

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\section&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Applications of WASM in Rust}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;wasm-bindgen&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; CLI tool to generate bindings for the wasm code to work
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; can be run manually but &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-pack} simplifies things
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{automates} linearization, strings, complex types bindings
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;configuring cargo&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{Cargo.toml}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
[lib]
crate-type = [&amp;quot;cdylib&amp;quot;]

[build]
target = &amp;quot;wasm32-unknown-unknown&amp;quot;

[dependencies]
wasm-bindgen = &amp;quot;0.2.45&amp;quot;

[dependencies.rand]
features = [&amp;quot;wasm-bindgen&amp;quot;]
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;rust wasm:  functions&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.rs}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=rust]
use wasm_bindgen::prelude::*;
#[wasm_bindgen]
extern &amp;quot;C&amp;quot; {
    #[wasm_bindgen(js_namespace = console)]
    fn log(s: &amp;amp;str);
    #[wasm_bindgen(method, structural, js_namespace = ROT)]
    fn draw(this: &amp;amp;Display, x: i32, y: i32, ch: &amp;amp;str);
}

#[wasm_bindgen]
pub fn greet(name: &amp;amp;str) {
    log(&amp;amp;format!(&amp;quot;Hello, {}!&amp;quot;, name));
}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;js\_sys and web\_sys provide bindings&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.rs}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=rust]
use wasm_bindgen::prelude::*;
use wasm_bindgen::JsValue;
use web_sys::console::log_1;

#[wasm_bindgen]
pub fn hi() {
  log_1(JsValue::from_str(&amp;quot;hi&amp;quot;));
}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;rust wasm: structs and impls&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.rs}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=rust]
#[wasm_bindgen]
pub struct Counter { count: i32, }

#[wasm_bindgen]
impl Counter {
  pub fn get(&amp;amp;self) -&amp;gt; char {
    log(format!(&amp;quot;Count: {}&amp;quot;, self.count));
    self.count
  }
}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}


&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;wasm-pack&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;1-&amp;gt; higher level wrapper for &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-bindgen}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; commands: &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{build}, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{test}, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{pack}, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{publish}, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{login}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-bindgen} is still a dependency
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;wasm-pack output in &#x2f;pkg&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{exa -T -L1 pkg&#x2f;}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
pkg&#x2f;
  package.json
  wasm_pack_test.d.ts
  wasm_pack_test.js
  wasm_pack_test_bg.d.ts
  wasm_pack_test_bg.wasm
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;wasm-pack output&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.js}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=javascript]
const wasm = import(&amp;#39;.&#x2f;pkg&#x2f;hello_world&amp;#39;);

wasm
  .then(m =&amp;gt; m.greet(&amp;#39;World!&amp;#39;))
  .catch(console.error);
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;extensions and alternatives&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{web-sys} and &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{js-sys} provide raw js&#x2f;web API bindings
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{std-web} has a similar goal but provides more JS interop + APIs
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{rust-neon} (external tool) generates &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Node.js} modules
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{yew} is a web framework that compiles to WASM
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;optimizing the WASM output&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.6&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
      &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-opt} can significantly reduce binary size 
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm2wat} can be used to confirm
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{twiggy} is a wasm profiler that analyzes call graphs
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; set &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lto = true} in Cargo.toml, but limit to release only
      &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.4&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\uncover&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt;{
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\includegraphics&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[scale=0.34]{twiggy.png}
      }
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%%%%%%%%%%%%%%%%%%%

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\section&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{A Real, Non-Trivial WASM App}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;korean apps&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Initially I wrote a cargo crate, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{korean-numbers}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; I wanted a way to use this logic in a webapp with React
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; I went with &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-bindgen} calls in &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{package.json} scripts
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;project structure&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{exa -T -L2 .}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
dist&#x2f;
frontend&#x2f;
native&#x2f;
node_modules&#x2f;
package.json
webpack.config.js
yarn.lock
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;why wasm-pack may be better&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{package.json}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
&amp;quot;scripts&amp;quot;: {
  &amp;quot;build-debug&amp;quot;: &amp;quot;cd native; cargo +nightly build
      --target wasm32-unknown-unknown
    &amp;amp;&amp;amp; wasm-bindgen
        target&#x2f;wasm32-unknown-unknown&#x2f;debug&#x2f;korean_wasm.wasm
      --out-dir ..&#x2f;frontend&#x2f;wasm; cd ..&amp;quot;
}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;rust side: glue code&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{native&#x2f;src&#x2f;lib.rs}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=rust]
use korean_nums::{ NumberSystem, ...}
#[wasm_bindgen]
struct KoreanInteger { number: i128, hangeul: String, }

#[wasm_bindgen]
pub fn random_korean_int(
  lower_str: &amp;amp;str, upper_str: &amp;amp;str, num_system: &amp;amp;str)
  -&amp;gt; KoreanInteger
{ ... }
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;frontend layout&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{exa -T -L2 frontend&#x2f;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
components&#x2f;
  korean_numbers&#x2f;
index.html
index.js
wasm&#x2f;
  korean_wasm.d.ts
  korean_wasm.js
  korean_wasm_bg.d.ts
  korean_wasm_bg.wasm
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;calling code from the frontend&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{frontend&#x2f;components&#x2f;korean&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;numbers&#x2f;index.js}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=javascript]
const { random_int } = require(&amp;quot;..&#x2f;..&#x2f;wasm&#x2f;korean_wasm&amp;quot;);

const res = random_korean_int(0, 10, &amp;quot;sino&amp;quot;);
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;non-trivial optimizations&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.45&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
      &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{ls -lah | rg wasm | awk `{print &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\$&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;5, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\$&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;9}&amp;#39; | sort}
        &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
282K wasm-opt-Oz-flag.wasm
283K wasm-opt-Os-flag.wasm
306K wasm-opt-O3-flag.wasm
573K wasm-opt-default.wasm
695K bindgen-development.wasm
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.45&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}&amp;lt;2-&amp;gt;
      &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{release mode versions}
        &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
126K wasm-opt-lto-Oz-flag.wasm
136K bindgen-release-lto.wasm
166K bindgen-release.wasm
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;inspecting with twiggy&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{twiggy top wasm-bindgen-default.wasm}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
Shallow Bytes │ Shallow &lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% │ Item
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;124493 | 17.50&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | &amp;quot;function names&amp;quot; subsection
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;57598  |  8.10&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | rand_hc::hc128::Hc128Core::sixteen_steps
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;50394  |  7.09&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | &amp;lt;rand_hc::hc128::Hc128Core&amp;gt;...::generate
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;24781  |  3.48&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | data[1]
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;22978  |  3.23&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | data[2]
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; 7624  |  1.07&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | &amp;lt;rand::rngs::entropy::EntropyRng&amp;gt;...::try_fill_bytes
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; 6928  |  0.97&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | korean_nums::parse::parse_hangeul_sino
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; 4918  |  0.69&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | core::num::flt2dec::strategy::dragon::mul_pow10
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;inspecting release mode with twiggy&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{twiggy top wasm-opt-Oz-release-lto.wasm}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
Shallow Bytes │ Shallow &lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% │ Item
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;9753 | 7.55&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | data[0]
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;8556 | 6.62&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | code[33]
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;8457 | 6.54&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | data[1]
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;7012 | 5.42&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | code[76]
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;6156 | 4.76&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | code[127]
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;6145 | 4.75&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | code[75]
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{center}
    {&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\huge&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Thank you} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\\&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    Andrew Zah
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{center}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%%%%%%%%%%%%%%%%%%%

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\section*&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Appendix}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[plain]
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\includegraphics&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[scale=0.34]{webassembly-studio.png}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;further reading&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{itemize}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{WASM Homepage} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2f;&#x2f;webassembly.org}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{WASM Spec} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2f;&#x2f;webassembly.github.io&#x2f;spec&#x2f;}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-bindgen docs} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2f;&#x2f;rustwasm.github.io&#x2f;docs&#x2f;wasm-bindgen&#x2f;}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{stdweb} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2f;&#x2f;github.com&#x2f;koute&#x2f;stdweb}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{twiggy profiler} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2f;&#x2f;github.com&#x2f;rustwasm&#x2f;twiggy}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wat2wasm, wasm2wat, and more} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2f;&#x2f;github.com&#x2f;WebAssembly&#x2f;wabt}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{websys} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2f;&#x2f;rustwasm.github.io&#x2f;wasm-bindgen&#x2f;api&#x2f;web&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;sys&#x2f;}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{neon-bindings} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2f;&#x2f;github.com&#x2f;neon-bindings&#x2f;neon}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{optimizing emscriptem} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2f;&#x2f;emscripten.org&#x2f;docs&#x2f;optimizing&#x2f;Optimizing-Code.html}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasmi: rust wasm interpreter} &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2f;&#x2f;github.com&#x2f;paritytech&#x2f;wasmi}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{itemize}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;bibliography&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{thebibliography}{Dijkstra, 1982}
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\bibitem&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[Hoffman, 2019]{Hoffman2019}
      K.&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;~&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;Hoffman.
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\newblock&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\em&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Programming WebAssembly with Rust &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\\
        &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\small&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Unified Development for Web, Mobile, and Embedded Applications }
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\newblock&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{The Pragmatic Programmers, LLC}
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\newblock&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{ISBN-13: 978-1-68050-636-5}
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{thebibliography}
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{document}

&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;</description>
            </item>
        
            <item>
                <title>Better Anki Usage Guide [2019]</title>
                <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/better-anki-usage-guide-2019/</link>
                <guid>andrewzah.com/posts/better-anki-usage-guide-2019/</guid>
                <description>&lt;p&gt;As you may or may not know, I love &lt;a href=&quot;https:&#x2f;&#x2f;apps.ankiweb.net&#x2f;&quot;&gt;Anki&lt;&#x2f;a&gt;, the spaced repetition flash cards app. I&#x27;ve been using it in my Korean learning journey for almost one and a half years now and I&#x27;ve written about it before. It&#x27;s a good app, but you can have a much better experience by making some modifications to it.&lt;&#x2f;p&gt;
&lt;p&gt;If you don&#x27;t know what Anki is or why it&#x27;s compelling, I recommend you read &lt;a href=&quot;http:&#x2f;&#x2f;augmentingcognition.com&#x2f;ltm.html&quot;&gt;&lt;em&gt;Augmenting Long-term Memory&lt;&#x2f;em&gt;&lt;&#x2f;a&gt;, a blog post by Michael Nielsen. &lt;a href=&quot;https:&#x2f;&#x2f;senrigan.io&#x2f;blog&#x2f;everything-i-know-strategies-tips-and-tricks-for-spaced-repetition-anki&#x2f;&quot;&gt;&lt;em&gt;Everything I know: Tips and Tricks for Anki&lt;&#x2f;em&gt;&lt;&#x2f;a&gt; by Jeff Shek also has a beginner&#x27;s guide.&lt;&#x2f;p&gt;
&lt;p&gt;If you&#x27;re new to Anki, the very first thing I recommend doing is &lt;a href=&quot;https:&#x2f;&#x2f;apps.ankiweb.net&#x2f;docs&#x2f;manual.html&quot;&gt;reading the manual&lt;&#x2f;a&gt;, or at least &lt;a href=&quot;https:&#x2f;&#x2f;apps.ankiweb.net&#x2f;docs&#x2f;manual.html#the-basics&quot;&gt;the basics&lt;&#x2f;a&gt;.&lt;&#x2f;p&gt;
&lt;p&gt;I recommend using Anki for at least 2-3 weeks before reading the rest of this article.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;changing-default-settings&quot;&gt;Changing default settings&lt;&#x2f;h2&gt;
&lt;p&gt;Anki out of the box has two problematic defaults, and one default that I don&#x27;t recommend personally.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;resetting-card-progress&quot;&gt;Resetting card progress&lt;&#x2f;h3&gt;
&lt;p&gt;Let&#x27;s say you have learned a card, but when you review it you make a mistake in recalling it, for whatever reason. Call it a brain fart, or pressing too quickly, etc. Or you simply forgot!&lt;&#x2f;p&gt;
&lt;p&gt;By default, Anki resets your progress to that of a new card. So even if you had worked the card up to a ~4 month interval, now you have to see it in  1 day, 2 days, 4 days, all over again...&lt;&#x2f;p&gt;
&lt;p&gt;Even if you forget a card, you still had learned it at one point. Which means re-learning it is now significantly easier. By completely resetting the card&#x27;s intervals, Anki is wasting your time. It slowly conditions you to be unwilling to press &lt;code&gt;Again&lt;&#x2f;code&gt;, which is not desireable at all.&lt;a id=&quot;footnote-cite-0&quot; href=&quot;#footnote-0&quot;&gt;(0)&lt;&#x2f;a&gt;&lt;&#x2f;p&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;&#x2f;strong&gt;: In your deck&#x27;s options group under Lapses, change &lt;code&gt;New interval&lt;&#x2f;code&gt; to &lt;code&gt;70%&lt;&#x2f;code&gt;. This means if you forget a card, the new interval will be 70% of the old one. As for why I chose 70%, it just felt like an appropriate amount–feel free to play with different percentages to see what works best for you.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;taking-too-long-to-mark-leeches&quot;&gt;Taking too long to mark Leeches&lt;&#x2f;h3&gt;
&lt;p&gt;After you initially learn a card (the card reached  a 1 day interval in default anki), if you forget it 8 times, Anki marks it as a Leech and suspends the card, not showing it to you anymore.&lt;&#x2f;p&gt;
&lt;p&gt;A card being a leech generally means its too complicated, or you&#x27;re getting it confused with a similar one. 8 times means it&#x27;s going to take way too long to identify cards that are problematic.&lt;&#x2f;p&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;&#x2f;strong&gt;: In your deck&#x27;s options group under Lapses, change &lt;code&gt;Leech threshold&lt;&#x2f;code&gt; to &lt;code&gt;4&lt;&#x2f;code&gt;. You may also want to change &lt;code&gt;Leech action&lt;&#x2f;code&gt; to &lt;code&gt;tag only&lt;&#x2f;code&gt;. This way you can easily sort for leech cards and modify or delete them.&lt;&#x2f;p&gt;
&lt;p&gt;As for handling leech cards, you generally want to simplify the card, or delete it outright. With the time and energy that you wasted on trying to recall a leech you could have learned a bunch of other cards. If it&#x27;s a word that you don&#x27;t want to delete, you can suspend the card, and practice using that word outside of anki. When you feel more comfortable with it you can unsuspend it.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;mixing-new-and-review-cards&quot;&gt;Mixing new and review cards&lt;&#x2f;h3&gt;
&lt;p&gt;By default, Anki mixes new and review cards. However, reviewing is vastly more important than learning new cards–it&#x27;s okay if you don&#x27;t memorize new cards every day, but missing reviews really hurts your memorization progress.&lt;&#x2f;p&gt;
&lt;p&gt;By putting reviews first, you can always do reviews daily and then choose to learn new words or not depending on how busy you are, how tired you are, etc. If the cards are mixed you can&#x27;t do this, making it likely you&#x27;ll just skip Anki for that day entirely, which can can quickly snowball into not using anki at all anymore. This happened to me.&lt;&#x2f;p&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;&#x2f;strong&gt;: In Anki&#x27;s preferences, change &lt;code&gt;Mix new cards and reviews&lt;&#x2f;code&gt; to &lt;code&gt;Show new cards after reviews&lt;&#x2f;code&gt;.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;making-better-card-templates&quot;&gt;Making better card templates&lt;&#x2f;h3&gt;
&lt;p&gt;The &lt;strong&gt;Basic&lt;&#x2f;strong&gt; card template in Anki has two fields: &lt;code&gt;Front&lt;&#x2f;code&gt; and &lt;code&gt;Back&lt;&#x2f;code&gt;. This is the minimum for flashcards obviously, but as you make cards it&#x27;s likely you&#x27;ll want to have separate information.&lt;&#x2f;p&gt;
&lt;p&gt;Over time my personal &lt;strong&gt;Zah Korean&lt;&#x2f;strong&gt; card template has grown to eight fields: &lt;code&gt;english&lt;&#x2f;code&gt;, &lt;code&gt;korean&lt;&#x2f;code&gt;, &lt;code&gt;grammarType&lt;&#x2f;code&gt;, &lt;code&gt;samples&lt;&#x2f;code&gt;, &lt;code&gt;hanja&lt;&#x2f;code&gt;, &lt;code&gt;notes&lt;&#x2f;code&gt;, &lt;code&gt;image&lt;&#x2f;code&gt; and &lt;code&gt;sound&lt;&#x2f;code&gt;. On the front I show &lt;code&gt;english&lt;&#x2f;code&gt;, and &lt;code&gt;grammarType&lt;&#x2f;code&gt; as a hint. Some people put sample sentences but I find this leads to short-circuiting your recall; instead of recalling the word you recognize that sentence.&lt;&#x2f;p&gt;
&lt;p&gt;I also have a &lt;strong&gt;Zah Colorcard&lt;&#x2f;strong&gt; template which has a &lt;code&gt;hexColor&lt;&#x2f;code&gt; field. Because I initially tried to learn colors in Korean like regular vocabulary, which makes no sense. Anki lets you pull in values easily in the template&#x27;s html and css sections.&lt;&#x2f;p&gt;
&lt;p&gt;You can modify a card&#x27;s fields by going to Add or Edit, then clicking on &lt;code&gt;Fields...&lt;&#x2f;code&gt;. You can add a new card type by going to Add or Edit, then click on the type, and then click &lt;code&gt;Manage&lt;&#x2f;code&gt;.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;better-styling-with-html-and-css&quot;&gt;Better styling with html and css&lt;&#x2f;h3&gt;
&lt;p&gt;Default anki&#x27;s styling is very plain. I recommend modifying it to show different fields in different colors. For example, my &lt;code&gt;grammarType&lt;&#x2f;code&gt; field is rendered in green while &lt;code&gt;hanja&lt;&#x2f;code&gt; is rendered in purple. I render my color card&#x27;s hex value dynamically. Here&#x27;s what my cards look like; the horizontal line denotes the front and back:&lt;&#x2f;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;templates.jpg&quot; data-lity data-lity-desc=&quot;How my templates look for sample cards&quot; alt=&quot;How my templates look for sample cards&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;templates.jpg&quot;&#x2f;&gt;
&lt;&#x2f;a&gt;&lt;&#x2f;p&gt;
&lt;p&gt;You can go to Browse, Add, or Edit and click on &lt;code&gt;Cards...&lt;&#x2f;code&gt; to get to the style dialogue. Some premade decks include nice styling for you, or default to a night mode. For more in-depth info, you can visit &lt;a href=&quot;https:&#x2f;&#x2f;apps.ankiweb.net&#x2f;docs&#x2f;manual.html#card-styling&quot;&gt;styling in the anki manual&lt;&#x2f;a&gt;.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;why-behavior-changing-plugins-are-needed&quot;&gt;Why behavior-changing plugins are needed&lt;&#x2f;h2&gt;
&lt;p&gt;Essentially, the way Anki treats cards is not intuitive, and actually hampers your memorization progress. Let&#x27;s say you&#x27;re reviewing a card–you have four options. &lt;code&gt;Again&lt;&#x2f;code&gt;, if you forget, and &lt;code&gt;Hard&lt;&#x2f;code&gt;, &lt;code&gt;Good&lt;&#x2f;code&gt;, or &lt;code&gt;Easy&lt;&#x2f;code&gt;.&lt;&#x2f;p&gt;
&lt;p&gt;You would assume this means &amp;quot;I (the user) had a hard&#x2f;good&#x2f;easy time recalling this card today&amp;quot;, right? Well, Anki actually sees it as &amp;quot;this card is intrinsically more difficult; please modify it permanently&amp;quot;.&lt;&#x2f;p&gt;
&lt;p&gt;Huh?&lt;&#x2f;p&gt;
&lt;p&gt;You see, every card in Anki has an individual &lt;code&gt;ease&lt;&#x2f;code&gt; percentage, starting at 250% by default. The algorithm that calculates a new interval goes like:&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;NewInterval = OldInterval × CardEase × DeckIntervalModifier

Where:
  OldInterval: 1 day is the first default value
  CardEase: 250% by default
  DeckIntervalModifier: 1.0 by default, set on a per-deck basis
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;
&lt;p&gt;When you hit &lt;code&gt;Again&lt;&#x2f;code&gt;, &lt;code&gt;Hard&lt;&#x2f;code&gt; or &lt;code&gt;Easy&lt;&#x2f;code&gt;, Anki modifies the ease by &lt;code&gt;-20%&lt;&#x2f;code&gt;, &lt;code&gt;-15%&lt;&#x2f;code&gt;, or &lt;code&gt;+15%&lt;&#x2f;code&gt;, respectively. A card&#x27;s ease can&#x27;t go lower than 130%. You can see now why people recommend not hitting &lt;code&gt;Easy&lt;&#x2f;code&gt; at all.. it quickly snowballs.&lt;&#x2f;p&gt;
&lt;img class=&quot;smol-img&quot; async-src=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;wack.jpg&quot;&#x2f;&gt;
&lt;p&gt;So you might be saying, why is seeing cards too often, aka &amp;quot;overlearning&amp;quot;, an issue? Either way, I&#x27;m seeing more difficult cards more often.. Well, research suggests that after an initial period, the extra time spent doesn&#x27;t actually lead to better recall.&lt;&#x2f;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In one study (Rohrer, Taylor, Pashler, Wixted, &amp;amp; Cepeda, 2005), college students learned novel vocabulary (e.g., cicatrix–scar), cycling through a list of word–definition pairs either 5 or 10 times. &lt;strong&gt;The extra 5 cycles yielded a substantial benefit after 1 week, but the gain was no longer apparent after 4 weeks&lt;&#x2f;strong&gt; ... From a long-term perspective, overlearning appears to be inefficient almost to the point of wasting time.[0]&lt;&#x2f;p&gt;
&lt;&#x2f;blockquote&gt;
&lt;p&gt;Now take a look at what happens in Anki if you lower the ease too much:&lt;&#x2f;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;ease-example.jpg&quot; data-lity data-lity-desc=&quot;An image showing how a cards ease affects its intervals&quot; alt=&quot;An image showing how a cards ease affects its intervals&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;ease-example.jpg&quot;&#x2f;&gt;
&lt;&#x2f;a&gt;&lt;&#x2f;p&gt;
  &lt;p class=&quot;image-desc&quot;&gt; Image taken from Guide to Anki Intervals and Learning Steps[1] &lt;&#x2f;p&gt;
&lt;p&gt;So even if you know a card enough to hit &lt;code&gt;Good&lt;&#x2f;code&gt;, if you had hit &lt;code&gt;Hard&lt;&#x2f;code&gt; 3-4 times prior, the interval growth rate is permanently stunted due to how Anki works. You would have to hit &lt;code&gt;Easy&lt;&#x2f;code&gt; to balance it which is counterintuitive.&lt;&#x2f;p&gt;
&lt;p&gt;Research also suggests that larger spacing is better in the long term.&lt;&#x2f;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In a 9-year longitudinal investigation, 4 subjects learned and relearned 300 English-foreign language word pairs. Either 13 or 26 relearning sessions were administered at intervals of 14, 28, or 56 days. Retention was tested for 1, 2, 3, or 5 years after training terminated. &lt;strong&gt;The longer intersession intervals slowed down acquisition slightly, but this disadvantage during training was offset hy substantially higher retention.&lt;&#x2f;strong&gt; Thirteen retraining sessions spaced at 56 days yielded retention comparable to 26 sessions spaced at 14 days.[2]&lt;&#x2f;p&gt;
&lt;&#x2f;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Our results can be summarized as follows. We find that over substantial time periods, spacing has powerful (and typically nonmonotonic) effects on retention, with optimal memory occurring when spacing is some modest fraction of the final retention interval (perhaps about 10%–20%).[1]&lt;&#x2f;p&gt;
&lt;&#x2f;blockquote&gt;
&lt;p&gt;With that out of the way, here are the plugins I use.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;utilizing-subdecks&quot;&gt;Utilizing subdecks&lt;&#x2f;h2&gt;
&lt;p&gt;If you review from multiple decks daily, you can use a parent deck with subdecks to mix reviews. This is my own personal opinion, but I think it&#x27;s better for recall if you change contexts. This is more like recall in real life.&lt;&#x2f;p&gt;
&lt;p&gt;Making subdecks in anki is really easy–just make a parent deck, and drag decks onto it. Or you can manually rename the deck in this format: &lt;code&gt;Parent Deck Name::Subdeck Name&lt;&#x2f;code&gt;. If done right, it should appear like this:&lt;&#x2f;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;subdecks.png&quot; data-lity data-lity-desc=&quot;A picture of anki open displaying how the interface shows subdecks&quot; alt=&quot;A picture of anki open displaying how the interface shows subdecks&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;subdecks.png&quot;&#x2f;&gt;
&lt;&#x2f;a&gt;&lt;&#x2f;p&gt;
&lt;p&gt;The only issue is Anki will still do reviews one deck at a time. I tried using the experimental V2 scheduler, but it didn&#x27;t work for me. So now we have to turn to a plugin: &lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;1460733408&quot;&gt;HoochieMama: Randomize Rev Queue&lt;&#x2f;a&gt;. After you install this, open Anki&#x27;s preferences, and in the Muffins tab enable &lt;code&gt;Hoochie Mama! RandRevQ w&#x2f; subdeck limit&lt;&#x2f;code&gt;. &lt;strong&gt;Note&lt;&#x2f;strong&gt;: back up your anki before adding behavior modification plugins like this.&lt;&#x2f;p&gt;
&lt;p&gt;That&#x27;s it! Now you can review from multiple subdecks, and new cards are still deck by deck. If you want to mix new cards as well, there&#x27;s &lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;1173108619&quot;&gt;Hoochie Papa&lt;&#x2f;a&gt;. I personally don&#x27;t think that is as useful.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;utilizing-filter-decks&quot;&gt;Utilizing filter decks&lt;&#x2f;h2&gt;
&lt;h2 id=&quot;visual-plugins&quot;&gt;Visual Plugins&lt;&#x2f;h2&gt;
&lt;p&gt;These aren&#x27;t really necessary but I like seeing stats. Give me all the stats.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;true-retention-by-card-maturity&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;923360400&quot;&gt;True Retention by Card Maturity&lt;&#x2f;a&gt;&lt;&#x2f;h3&gt;
&lt;p&gt;This is basically a fancy stats plugin. You can see a detailed breakdown by day, week, and month, and see your true retention rate. You want roughly 80-90% retention. [TODO]&lt;&#x2f;p&gt;
&lt;h3 id=&quot;more-decks-stats-and-time-left&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;1556734708&quot;&gt;More decks stats and time left&lt;&#x2f;a&gt;&lt;&#x2f;h3&gt;
&lt;p&gt;&amp;quot;This addon shows extra information of the due cards and returns the expected time to finalize (Due+New).&amp;quot;&lt;&#x2f;p&gt;
&lt;h3 id=&quot;enhance-main-window&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;877182321&quot;&gt;Enhance main window&lt;&#x2f;a&gt;&lt;&#x2f;h3&gt;
&lt;p&gt;This adds more stats to the main window via columns. As you can see in that link, the default config adds quite a lot, so I &lt;a href=&quot;https:&#x2f;&#x2f;gist.github.com&#x2f;azah&#x2f;0391ce0fc3e90f3defea75ef518fd195&quot;&gt;modified my config&lt;&#x2f;a&gt; to pare it down, which looks like this:&lt;&#x2f;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;enhanced.png&quot; data-lity data-lity-desc=&quot;A picture displaying how the anki main window looks different with this plugin enabled&quot; alt=&quot;A picture displaying how the anki main window looks different with this plugin enabled&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;enhanced.png&quot;&#x2f;&gt;
&lt;&#x2f;a&gt;&lt;&#x2f;p&gt;
&lt;p&gt;Note that the stats at the bottom are from the &lt;code&gt;More decks stats and time left&lt;&#x2f;code&gt; plugin.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;progress-graphs-and-stats-for-mature-and-learned-cards&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;266436365&quot;&gt;Progress graphs and stats for mature and learned cards&lt;&#x2f;a&gt;&lt;&#x2f;h3&gt;
&lt;p&gt;Adds two new graphs to the stats window.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;button-colours-good-again&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;2494384865&quot;&gt;Button Colours (Good, Again)&lt;&#x2f;a&gt;&lt;&#x2f;h3&gt;
&lt;p&gt;Simply colorizes Again to be red, Good to be green, etc. It&#x27;s a small but nice thing to have when reviewing. There&#x27;s also &lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;1829090218&quot;&gt;Large and Colorful Buttons&lt;&#x2f;a&gt; if you wanted even more colorful buttons.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;kanji-grid&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;909972618&quot;&gt;Kanji Grid&lt;&#x2f;a&gt;&lt;&#x2f;h3&gt;
&lt;p&gt;This is an awesome plugin that visually shows your kanji learning progress. Simply select a deck that has a &lt;code&gt;kanji&lt;&#x2f;code&gt; field, and run Tools &amp;gt; &lt;code&gt;Generate Kanji Grid&lt;&#x2f;code&gt;. It looks like this:&lt;&#x2f;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;kanji-grid.png&quot; data-lity data-lity-desc=&quot;A grid showing kanji characters with a color background based on how long the current interval is&quot; alt=&quot;A grid showing kanji characters with a color background based on how long the current interval is&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;017&amp;#x2f;kanji-grid.png&quot;&#x2f;&gt;
&lt;&#x2f;a&gt;&lt;&#x2f;p&gt;
&lt;p&gt;This was generated from my deck with the default settings.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;behavior-plugins&quot;&gt;Behavior Plugins&lt;&#x2f;h2&gt;
&lt;p&gt;This is where things get fun. These plugins change the core functionality of Anki, so please, read about them and make sure you understand what they do before adding them.&lt;&#x2f;p&gt;
&lt;p&gt;&lt;strong&gt;Back up your Anki before installing these&lt;&#x2f;strong&gt;.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;search-in-add-card-dialogue&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;1781298089&quot;&gt;Search in Add Card Dialogue&lt;&#x2f;a&gt;&lt;&#x2f;h3&gt;
&lt;p&gt;This adds a pane to the &lt;code&gt;Add Card&lt;&#x2f;code&gt; window, letting you quickly search through your Anki decks for keywords. It&#x27;s very useful for finding duplicates, or searching among sample sentences.&lt;&#x2f;p&gt;
&lt;p&gt;The only con is the search doesn&#x27;t work for non-ascii text. When I have time I plan on fixing this.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;resetez&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;massimmersionapproach.com&#x2f;table-of-contents&#x2f;anki&#x2f;low-key-anki&#x2f;low-key-anki-summary-and-installation&#x2f;&quot;&gt;ResetEZ&lt;&#x2f;a&gt;&lt;&#x2f;h3&gt;
&lt;p&gt;This adds a command in your Tools menu called &lt;code&gt;Reset Ease + Force Sync After&lt;&#x2f;code&gt;. It resets &lt;strong&gt;all&lt;&#x2f;strong&gt; Anki cards to have the default ease value, 250%. You have to install it manually.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;no-penalties-or-boosting&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;massimmersionapproach.com&#x2f;table-of-contents&#x2f;anki&#x2f;low-key-anki&#x2f;low-key-anki-summary-and-installation&#x2f;&quot;&gt;No Penalties or Boosting&lt;&#x2f;a&gt;&lt;&#x2f;h3&gt;
&lt;p&gt;This changes &lt;code&gt;Again&lt;&#x2f;code&gt;, &lt;code&gt;Hard&lt;&#x2f;code&gt;, and &lt;code&gt;Easy&lt;&#x2f;code&gt; to not change the card&#x27;s ease value. By default, Anki modifies it by -20%, -15%, or +15%, respectively. This is a bad idea, and I go into more detail [in my other anki post][TODO]. This goes hand in hand with ResetEZ. It also needs to be manually installed.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;hoochie-mama-randomize-rev-queue&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;1460733408&quot;&gt;Hoochie Mama: Randomize Rev Queue&lt;&#x2f;a&gt;&lt;&#x2f;h3&gt;
&lt;p&gt;See &lt;a href=&quot;andrewzah.com&#x2f;posts&#x2f;better-anki-usage-guide-2019&#x2f;#utilizing-subdecks&quot;&gt;Making use of subdecks&lt;&#x2f;a&gt; above. This randomizes review cards in subdecks.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;other-plugins&quot;&gt;Other Plugins&lt;&#x2f;h2&gt;
&lt;p&gt;There may be plugins for the language that you&#x27;re learning. Japanese has several, for example. It&#x27;s worth searching &amp;quot;anki {language}&amp;quot; to see what&#x27;s available.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2f;h2&gt;
&lt;p&gt;Considering that we end up using Anki for years, it&#x27;s worth taking some time to improve it and read the documentation closely. Is there a plugin or change that you feel like I missed? Let me know.&lt;&#x2f;p&gt;
&lt;p&gt;I have also written a post on &lt;a href=&quot;..&#x2f;posts&#x2f;things-to-avoid-with-anki&quot;&gt;general things to avoid while using Anki&lt;&#x2f;a&gt; that I recommend you check out.&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Things to avoid with Anki</title>
                <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/things-to-avoid-with-anki/</link>
                <guid>andrewzah.com/posts/things-to-avoid-with-anki/</guid>
                <description>&lt;p&gt;For those unaware, &lt;a href=&quot;https:&#x2f;&#x2f;apps.ankiweb.net&#x2f;&quot;&gt;Anki&lt;&#x2f;a&gt; is a free app that implements [active recall] with &lt;a href=&quot;https:&#x2f;&#x2f;en.wikipedia.org&#x2f;wiki&#x2f;Spaced_repetition&quot;&gt;spaced repetition&lt;&#x2f;a&gt;. If you&#x27;re new to Anki, the very first thing I recommend doing is &lt;a href=&quot;https:&#x2f;&#x2f;apps.ankiweb.net&#x2f;docs&#x2f;manual.html&quot;&gt;reading the manual&lt;&#x2f;a&gt;, or at least &lt;a href=&quot;https:&#x2f;&#x2f;apps.ankiweb.net&#x2f;docs&#x2f;manual.html#the-basics&quot;&gt;the basics&lt;&#x2f;a&gt;.&lt;&#x2f;p&gt;
&lt;p&gt;There are some common mistakes people make when getting into flash cards and spaced repetition for the first time, as well as Anki. Considering that Anki is generally used for years, correcting bad habits pays large dividends in the long run.&lt;&#x2f;p&gt;
&lt;p&gt;So with that said, let&#x27;s get into it!&lt;&#x2f;p&gt;
&lt;h2 id=&quot;not-doing-anki-daily&quot;&gt;Not doing Anki daily&lt;&#x2f;h2&gt;
&lt;p&gt;If you take away only one tip from this post, let it be this one. Nothing else here matters if you don&#x27;t consistently review cards daily.&lt;&#x2f;p&gt;
&lt;p&gt;The entire point of Anki is spaced repetition. Every time you skip a day&#x27;s reviews, the following session will become more difficult. For non-mature words (less than 30 day intervals) it&#x27;s crucial that you review. If you don&#x27;t review for a long time, you will soon have hundreds of reviews stacked up, which is super demotivating.&lt;&#x2f;p&gt;
&lt;p&gt;I used to do Anki before bed, but this sometimes led to me skipping it due to work, friends, or life just taking up more time and energy than expected. Now I consistently do anki either in the morning after I&#x27;ve fully woken up, or around lunch.&lt;&#x2f;p&gt;
&lt;p&gt;If you change your study time, make sure to update your Anki Preferences, under Basic &amp;gt; &lt;code&gt;Next day starts at&lt;&#x2f;code&gt;. This tip goes hand in hand with the next one.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;mixing-reviews-and-new-words&quot;&gt;Mixing reviews and new words&lt;&#x2f;h2&gt;
&lt;p&gt;This is Anki&#x27;s default behavior. I personally recommend against this as sometimes you don&#x27;t have the time or energy in a day to sit down and learn the new cards. It&#x27;s okay if you don&#x27;t learn new words, but missing reviews is really bad.&lt;&#x2f;p&gt;
&lt;p&gt;But you can&#x27;t only do the reviews, since they&#x27;re mixed in with the new cards! So guess what ends up happening? Both the reviews and new cards get skipped...&lt;&#x2f;p&gt;
&lt;p&gt;By changing Anki preferences to &lt;code&gt;Show new cards after reviews&lt;&#x2f;code&gt;, you can always do reviews without worry. After you wake up, while you commute, et cetera.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;studying-too-many-new-words&quot;&gt;Studying too many new words&lt;&#x2f;h2&gt;
&lt;p&gt;Do not go over 20 words&#x2f;day unless you are studying at least 1-2 hours every day. Initially it may be doable but reviews will pile up so fast it&#x27;s scary.&lt;&#x2f;p&gt;
&lt;p&gt;If you do 20 words a day, every day, for a year, you will learn 6,720 words. That is pretty darn good! For most, if not all, languages, 3-5k words will let you have basic conversations.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;having-the-foreign-word-on-the-front-side&quot;&gt;Having the foreign word on the front side&lt;&#x2f;h2&gt;
&lt;p&gt;If you&#x27;re using Anki to learn a foreign language, you want to speak that language with someone, right? Think about how a conversation goes as a beginner.  First, you think of the word &lt;em&gt;in your native language&lt;&#x2f;em&gt;, then you think of the equivalent foreign word.&lt;&#x2f;p&gt;
&lt;p&gt;If you put a foreign word on the front of your anki cards, then you&#x27;re doing it totally backward! That just trains you to recognize a foreign word when you see it; it doesn&#x27;t train you to remember a foreign word from your native word.&lt;&#x2f;p&gt;
&lt;p&gt;You can also make automatically make cards that go both ways if you use the &lt;code&gt;Basic (and reversed card)&lt;&#x2f;code&gt; template. So adding a card with [dog, 강아지] will make another card that&#x27;s [강아지, dog]. If you only want -some- cards to have a reverse, you can use the provided &lt;code&gt;Basic (optional reversed card)&lt;&#x2f;code&gt; template. This one only makes a reverse if you put something in the &lt;code&gt;Add Reverse&lt;&#x2f;code&gt; field (it can be any input, it doesn&#x27;t show anywhere).&lt;&#x2f;p&gt;
&lt;p&gt;See &lt;a href=&quot;https:&#x2f;&#x2f;apps.ankiweb.net&#x2f;docs&#x2f;manual.html#reverse-cards&quot;&gt;the manual&lt;&#x2f;a&gt; for more information on reverse cards.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;only-using-premade-decks&quot;&gt;Only using premade decks&lt;&#x2f;h2&gt;
&lt;p&gt;If you&#x27;re a beginner to studying a language, using a premade deck is fine due to the sheer amount of time it takes to add words to a deck. However the longer you study, the more you need your own personal deck.&lt;&#x2f;p&gt;
&lt;p&gt;If you use someone else&#x27;s deck, it&#x27;s basically a random collection of words that you lack the context for. For your own personal deck you have to see the word somewhere first, giving you more of a feeling for the context.&lt;&#x2f;p&gt;
&lt;p&gt;If you&#x27;re trying to mass-memorize words (say, for a language test), I recommend using Anki&#x27;s &lt;a href=&quot;https:&#x2f;&#x2f;apps.ankiweb.net&#x2f;docs&#x2f;manual.html#decks&quot;&gt;parent&#x2f;subdecks feature&lt;&#x2f;a&gt;. That way you can use a premade deck &lt;em&gt;and&lt;&#x2f;em&gt; your personal deck at the same time. Spiffy.&lt;&#x2f;p&gt;
&lt;p&gt;I explain subdecks a bit more in my &lt;a href=&quot;..&#x2f;better-anki-usage-guide-2019#utilizing-subdecks&quot;&gt;Better Anki Usage&lt;&#x2f;a&gt; post.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;not-including-sample-sentences&quot;&gt;Not including sample sentences&lt;&#x2f;h2&gt;
&lt;p&gt;A lot of language learning decks just have the word and its translation. For very basic words this can be fine, but for most words you really do need sample sentences so you can see the context as well.&lt;&#x2f;p&gt;
&lt;p&gt;I include 3 sample sentences in all the cards I make, as well as notes, common word pairings, and the grammar type.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;having-too-many-concepts-per-card&quot;&gt;Having too many concepts per card&lt;&#x2f;h2&gt;
&lt;p&gt;A good anki card should have one concept. Avoid memorizing lists if you really have to. If you do have to memorize a list, turn it into an enumeration (1. 2. 3...). If you have multiple concepts, make multiple cards.&lt;a id=&quot;refer-0&quot; href=&quot;#reference-0&quot;&gt;[0]&lt;&#x2f;a&gt;&lt;&#x2f;p&gt;
&lt;p&gt;When memorizing foreign words it&#x27;s really tempting to put every definition into one card. Don&#x27;t do this. Putting related definitions together is fine, but if a word has multiple different meanings, it needs different cards.&lt;&#x2f;p&gt;
&lt;p&gt;I see this a lot in premade decks, with 1 card having 4 or 5 totally unrelated usages of a word–and no sentence samples either, of course.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;pressing-easy-too-easily&quot;&gt;Pressing &#x27;easy&#x27; too easily&lt;&#x2f;h2&gt;
&lt;p&gt;It&#x27;s can be tempting to give a review card the &#x27;Easy&#x27; grade, quickly giving it large intervals. Don&#x27;t do this unless you know the word quite well (in which case, why even have the card at all?). Otherwise the interval will increase rapidly, and you&#x27;ll have forgotten it by then.&lt;&#x2f;p&gt;
&lt;p&gt;Actually, due to how Anki works, pressing &lt;code&gt;Easy&lt;&#x2f;code&gt; (or &lt;code&gt;Hard&lt;&#x2f;code&gt;) &lt;em&gt;permanently&lt;&#x2f;em&gt; modifies that card, giving it way longer intervals than what it should be. I go over this in detail in my &lt;a href=&quot;..&#x2f;better-anki-usage-guide-2019#why-behavior-changing-plugins-are-needed&quot;&gt;Better Anki Usage&lt;&#x2f;a&gt; post. Almost all long-term Anki users that I talk to do not press &lt;code&gt;Easy&lt;&#x2f;code&gt; often, or ever.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;not-syncing-all-the-time&quot;&gt;Not syncing all the time&lt;&#x2f;h2&gt;
&lt;p&gt;You should always sync after every session, especially if you edit anything.&lt;&#x2f;p&gt;
&lt;p&gt;Did you know &lt;code&gt;y&lt;&#x2f;code&gt; is the sync shortcut?&lt;&#x2f;p&gt;
&lt;h2 id=&quot;not-memorizing-keyboard-shortcuts&quot;&gt;Not memorizing keyboard shortcuts&lt;&#x2f;h2&gt;
&lt;p&gt;Last but not least, learning a few shortcuts is useful since Anki is used so much.&lt;&#x2f;p&gt;
&lt;p&gt;When reviewing a card:&lt;&#x2f;p&gt;
&lt;ul&gt;
&lt;li&gt;undo -&amp;gt; ctrl&#x2f;cmd-z&lt;&#x2f;li&gt;
&lt;li&gt;Spacebar =&amp;gt; Flip the card&lt;&#x2f;li&gt;
&lt;li&gt;1,2,3,4 =&amp;gt; The numbers follow the order of the grading buttons. So for a review, which has &lt;code&gt;Again&lt;&#x2f;code&gt;, &lt;code&gt;Hard&lt;&#x2f;code&gt;, &lt;code&gt;Good&lt;&#x2f;code&gt;, &lt;code&gt;Easy&lt;&#x2f;code&gt;, those are 1,2,3,4 respectively. A new card has &lt;code&gt;Again&lt;&#x2f;code&gt;, &lt;code&gt;Good&lt;&#x2f;code&gt;, &lt;code&gt;Easy&lt;&#x2f;code&gt; by default, which are 1, 2, 3.&lt;&#x2f;li&gt;
&lt;li&gt;e =&amp;gt; edit card&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;p&gt;Other shortcuts:&lt;&#x2f;p&gt;
&lt;ul&gt;
&lt;li&gt;r =&amp;gt; replay audio&lt;&#x2f;li&gt;
&lt;li&gt;@ =&amp;gt; suspend a card&lt;&#x2f;li&gt;
&lt;li&gt;m =&amp;gt; mark a card (adds a &lt;code&gt;marked&lt;&#x2f;code&gt; tag so you can find it easily later)&lt;&#x2f;li&gt;
&lt;li&gt;ctrl or cmd-1,2,3,4 =&amp;gt; flag a card with red, orange, green, or blue, respectively&lt;&#x2f;li&gt;
&lt;li&gt;- =&amp;gt; bury a card (hide it until tomorrow)&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;p&gt;Window&#x2f;tool shortcuts:&lt;&#x2f;p&gt;
&lt;ul&gt;
&lt;li&gt;y =&amp;gt; sync&lt;&#x2f;li&gt;
&lt;li&gt;d =&amp;gt; go to decks overview&lt;&#x2f;li&gt;
&lt;li&gt;b =&amp;gt; browse cards&lt;&#x2f;li&gt;
&lt;li&gt;a =&amp;gt; add card&lt;&#x2f;li&gt;
&lt;li&gt;t =&amp;gt; stats&lt;&#x2f;li&gt;
&lt;li&gt;&#x2f; =&amp;gt; custom study session&lt;&#x2f;li&gt;
&lt;li&gt;f =&amp;gt; create filter deck&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;p&gt;Overkill, you say? Well.. yeah, probably. Aside from spacebar, 1,2,3,4, r, and y, you don&#x27;t really need to know the rest unless you like being super duper efficient.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2f;h2&gt;
&lt;p&gt;These are some of the problems I&#x27;ve encountered while using Anki. Are there other ones you think I should talk about? Let me know.&lt;&#x2f;p&gt;
&lt;p&gt;If you&#x27;re interested in Anki, I recommend reading my &lt;a href=&quot;..&#x2f;posts&#x2f;better-anki-usage-guide-2019&quot;&gt;Better Anki Usage&lt;&#x2f;a&gt; post to fix some of Anki&#x27;s wonky defaults and unintuitive behavior.&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Nested Resource Forms Tutorial with Padrino or Rails</title>
                <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/nested-resource-forms-tutorial-with-padrino-rails/</link>
                <guid>andrewzah.com/posts/nested-resource-forms-tutorial-with-padrino-rails/</guid>
                <description>&lt;p&gt;This guide was written with Padrino and Sequel in mind, but should more or less work for Rails with minimal adaptations. Let&#x27;s get into it!&lt;&#x2f;p&gt;
&lt;h2 id=&quot;the-goal&quot;&gt;The Goal&lt;&#x2f;h2&gt;
&lt;p&gt;I have two models: &lt;code&gt;Grammar&lt;&#x2f;code&gt; and &lt;code&gt;GrammarTranslation&lt;&#x2f;code&gt;. A &lt;code&gt;Grammar&lt;&#x2f;code&gt; has many &lt;code&gt;GrammarTranslations&lt;&#x2f;code&gt;.&lt;&#x2f;p&gt;
&lt;p&gt;I want to have a form that lets me create a &lt;code&gt;Grammar&lt;&#x2f;code&gt; and one &lt;code&gt;GrammarTranslation&lt;&#x2f;code&gt; at the same time. Then, I want the &lt;code&gt;grammars&#x2f;edit&lt;&#x2f;code&gt; page to let me edit the &lt;code&gt;Grammar&lt;&#x2f;code&gt; and edit any of the existing &lt;code&gt;GrammarTranslation&lt;&#x2f;code&gt;s or create new ones.&lt;&#x2f;p&gt;
&lt;p&gt;Note: you can see a full example application that uses nested form objects &lt;a href=&quot;https:&#x2f;&#x2f;git.sr.ht&#x2f;%7Eandrewzah&#x2f;korean_grammar_data_entry&quot;&gt;here&lt;&#x2f;a&gt;.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;&#x2f;h2&gt;
&lt;h3 id=&quot;schema&quot;&gt;Schema&lt;&#x2f;h3&gt;
&lt;p&gt;This is what the migration schema looks like:&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#0086b3;&quot;&gt;Sequel&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.migration &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
  up &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    create_table &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammars &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      primary_key &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;null: false
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:alternatives
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:verb_type&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;null: false
      DateTime :created_at
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;

    create_table &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar_translations &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      primary_key &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      foreign_key &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar_id&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammars
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:language_code&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;null: false
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:meanings&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;null: false
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:notes
      DateTime :created_at
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
  end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;

  down &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    drop_table &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar_translations&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    drop_table &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammars
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end

&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;
&lt;p&gt;You&#x27;ll want to run&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;padrino generate app &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;lt;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;app_name&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;gt; &lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# etc
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;padrino generate migration AddGrammarsAndTranslations
&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# you might have to initialize the table manually if this doesn&amp;#39;t work
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;rake sq:create 
rake sq:migrate
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;&lt;h3 id=&quot;models&quot;&gt;Models&lt;&#x2f;h3&gt;
&lt;p&gt;The main model &lt;code&gt;Grammar&lt;&#x2f;code&gt; needs a tag, which differs by which ORM you&#x27;re using. If it&#x27;s Sequel, use the &lt;code&gt;nested_attributes&lt;&#x2f;code&gt; tag.&lt;a id=&quot;refer-0&quot; href=&quot;#reference-0&quot;&gt;[0]&lt;&#x2f;a&gt; For ActiveRecord users, instead use &lt;code&gt;accepts_nested_attributes_for&lt;&#x2f;code&gt;.&lt;a id=&quot;refer-1&quot; href=&quot;#reference-1&quot;&gt;[1]&lt;&#x2f;a&gt; Both accept the &lt;code&gt;allow_destroy: true&lt;&#x2f;code&gt; option. Padrino also needs the plugin to explicitly be enabled.&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# models&#x2f;grammar.rb

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;class &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt; &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;Sequel::Model&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
  one_to_many &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:translations&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;class: &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:GrammarTranslation&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;

  plugin &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:nested_attributes&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
  nested_attributes &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:translations&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;destroy: true

  &lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# Replace ActiveRecord method.
  # (I had to add this to get padrino to stop complaining)
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;def &lt;&#x2f;span&gt;&lt;span style=&quot;color:#ed6a43;&quot;&gt;self&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;find_by_id&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;(id)
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#ed6a43;&quot;&gt;self&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[id] &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;rescue &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;nil
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# models&#x2f;grammar_translation.rb

&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;class &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;GrammarTranslation &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt; &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;Sequel::Model&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
  many_to_one &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar

  &lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# Replace ActiveRecord method.
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;def &lt;&#x2f;span&gt;&lt;span style=&quot;color:#ed6a43;&quot;&gt;self&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;find_by_id&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;(id)
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#ed6a43;&quot;&gt;self&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[id] &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;rescue &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;nil
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;&lt;h3 id=&quot;form-views&quot;&gt;Form Views&lt;&#x2f;h3&gt;
&lt;p&gt;We use the &lt;code&gt;new&lt;&#x2f;code&gt; and &lt;code&gt;edit&lt;&#x2f;code&gt; templates to initialize the form and pass it as a variable, &lt;code&gt;f&lt;&#x2f;code&gt;.&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&#x2f;&#x2f; app&#x2f;views&#x2f;grammar&#x2f;new.slim

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;h2
  New&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Grammar

= form_for @grammar, &amp;#39;&#x2f;grammar&#x2f;create&amp;#39; do |f|
  = partial &amp;#39;grammar&#x2f;form&amp;#39;, :locals =&amp;gt; { :f =&amp;gt; f }
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&#x2f;&#x2f; app&#x2f;views&#x2f;grammar&#x2f;edit.slim

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;h2
  Update&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Grammar

= form_for :grammar, url(:grammar, :update, id: @grammar.id), method: :put do |f|
  = partial &amp;#39;grammar&#x2f;form&amp;#39;, :locals =&amp;gt; { :f =&amp;gt; f }
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;
&lt;p&gt;Since we won&#x27;t always add a new translation, always marking the fields as required won&#x27;t work. Instead we can mark fields as required only for existing translations, not new ones.&lt;&#x2f;p&gt;
&lt;p&gt;We can iterate over nested resources with the &lt;code&gt;fields_for :model&lt;&#x2f;code&gt; tag now available to us.&lt;&#x2f;p&gt;
&lt;p&gt;&lt;strong&gt;Note1&lt;&#x2f;strong&gt;: Don&#x27;t forget to setup the &lt;code&gt;id&lt;&#x2f;code&gt; hidden field! Otherwise the orm won&#x27;t realize it&#x27;s an existing nested resource.&lt;&#x2f;p&gt;
&lt;p&gt;&lt;strong&gt;Note2&lt;&#x2f;strong&gt;: For the destroy checkbox, you must pass &lt;code&gt;:_delete&lt;&#x2f;code&gt;, Not &lt;code&gt;:_destroy&lt;&#x2f;code&gt;. The padrino docs are incorrect here! I had to do a bit of sleuthing to figure out the correct method to send.&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&#x2f;&#x2f; app&#x2f;views&#x2f;grammar&#x2f;_form.slim

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;= f.label &amp;#39;Grammar&amp;#39;
= f.text_field :grammar, required: true

= f.label &amp;#39;Alternatives (comma separated)&amp;#39;
= f.text_field :alternatives, required: true

= f.label &amp;quot;Verb Type&amp;quot;
= f.select :verb_type, options: [&amp;quot;형용사&amp;quot;, &amp;quot;동사&amp;quot;, &amp;quot;Both&amp;quot;],
  required: true

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;h3&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Translations

= f.fields_for :translations do |af|
  - unless af.object.new?
    = af.hidden_field :id, value: af.object.id

  = af.label &amp;quot;Language Code&amp;quot;
  - if af.object.new?
    = af.text_field :language_code
  - else
    = af.text_field :language_code, required: true

  = af.label &amp;quot;Meanings (comma separated)&amp;quot;
  - if af.object.new?
    = af.text_field :meanings
  - else
    = af.text_field :meanings, required: true

  = af.label &amp;quot;Notes&amp;quot;
  = af.text_area :notes

  - unless af.object.new?
    = af.label &amp;quot;Destroy&amp;quot;
    = af.check_box :_delete

  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;hr

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;= submit_tag pat(:save)
= submit_tag pat(:save_and_continue), :name =&amp;gt; &amp;#39;save_and_continue&amp;#39;
= link_to pat(:cancel), url(:grammar, :index)
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;&lt;h3 id=&quot;controller-and-routes&quot;&gt;Controller and Routes&lt;&#x2f;h3&gt;
&lt;p&gt;Lastly we need some basic controller and routing code. &lt;code&gt;index&lt;&#x2f;code&gt; is still simple:&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# app&#x2f;controllers&#x2f;grammar.rb
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
get &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:index &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammars &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.all
  render &lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;grammar&#x2f;index&amp;#39;
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;
&lt;p&gt;When it comes to new&#x2f;create, an empty &lt;code&gt;GrammarTranslation&lt;&#x2f;code&gt;s object needs to be initialized. In Padrino this is accomplished by initializing the &lt;code&gt;&amp;lt;model&amp;gt;_attributes&lt;&#x2f;code&gt; field, which comes from the &lt;code&gt;nested_attributes&lt;&#x2f;code&gt; tag.&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# app&#x2f;controllers&#x2f;grammar.rb
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
get &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:new &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;new&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;(&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;translations_attributes: &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[{}])
  render &lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;new&amp;#39;
&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;

post &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:create &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;new&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;(params[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;])

  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;(grammar &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar.save)
    flash[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:success&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;] &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;Successfully saved grammar &amp;amp; translation.&amp;#39;

    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; params[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:save_and_continue&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]
      redirect url_for(&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;id:&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; grammar.id)
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      redirect url(&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:new&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;)
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
  else&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    flash[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:error&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;] &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;Error saving grammar: &amp;quot; &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;+
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar.errors.map(&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;amp;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:message&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;).join(&lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;, &amp;quot;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;)
    render &lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;new&amp;#39;
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;
&lt;p&gt;For the &lt;code&gt;edit&lt;&#x2f;code&gt; route, a new &lt;code&gt;GrammarTranslation&lt;&#x2f;code&gt; is appended because we want to be able to create new &lt;code&gt;GrammarTranslation&lt;&#x2f;code&gt;s from a &lt;code&gt;Grammar&lt;&#x2f;code&gt;&#x27;s edit page.&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# app&#x2f;controllers&#x2f;grammar.rb
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
get &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:edit&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;with: :id &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[params[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]]
  @grammar.translations &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;lt;&amp;lt; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;GrammarTranslation&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.&lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;new

  if &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar
    render &lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;grammar&#x2f;edit&amp;#39;
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    flash[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:warning&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;] &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; pat(
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:create_error&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;model: &lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;grammar&amp;#39;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
      &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;id:&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; params[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;].&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;to_s
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;)
    halt &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;404
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;
&lt;p&gt;For &lt;code&gt;update&lt;&#x2f;code&gt;, since we added a blank &lt;code&gt;GrammarTranslation&lt;&#x2f;code&gt;, it&#x27;s necessary to filter it out if none of the fields were filled out in the form. Otherwise, every single time you upated a &lt;code&gt;Grammar&lt;&#x2f;code&gt;, a new &lt;code&gt;GrammarTranslation&lt;&#x2f;code&gt; would be created.&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# app&#x2f;controllers&#x2f;grammar.rb
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
put &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:update&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;with: :id &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[params[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]]

  &lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# filter out the new translation
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;  params[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;][&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:translations_attributes&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]
    .select!{ |_k, v| v[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:language_code&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;].present? &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;== &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;true &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar.modified! &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar.update(params[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;])
    flash[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:success&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;] &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; pat(&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:update_success&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;model: &lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;Grammar&amp;#39;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;id:&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; params[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;].&lt;&#x2f;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;to_s&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;)
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; params[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:save_and_continue&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]
      redirect(url(&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:new&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;))
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      redirect(url(&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:edit&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;id: &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar.id))
    &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
  else&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    flash.now[&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:error&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;] &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; pat(&lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:update_error&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2f;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;model: &lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;grammar&amp;#39;&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;)
    render &lt;&#x2f;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;accounts&#x2f;edit&amp;#39;
  &lt;&#x2f;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;&lt;h3 id=&quot;object-views&quot;&gt;Object Views&lt;&#x2f;h3&gt;
&lt;p&gt;Nothing complicated here. The nested resource is available under the main object, so we can use &lt;code&gt;@grammar.translations&lt;&#x2f;code&gt;.&lt;&#x2f;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&#x2f;&#x2f; app&#x2f;views&#x2f;grammar&#x2f;index.slim

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;- @grammars.each do |g|
  = link_to g.grammar, &amp;quot;&#x2f;grammar&#x2f;&lt;&#x2f;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;#{g.id}&amp;quot;
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;br
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&#x2f;&#x2f; app&#x2f;views&#x2f;grammar&#x2f;show.slim

&lt;&#x2f;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;h2
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;= @grammar.grammar
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;p&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
  | Alternatives:
  = @grammar.alternatives
&lt;&#x2f;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;h4&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Translations
- @translations.each do |t|
  &lt;&#x2f;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;div
    p&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      | Lang:
      =&amp;lt; t.language_code
    &lt;&#x2f;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;p&lt;&#x2f;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      | Meaning:
      =&amp;lt; t.meanings
&lt;&#x2f;span&gt;&lt;&#x2f;pre&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2f;h3&gt;
&lt;p&gt;I hope this short guide helped you. You should now be able to create a model and a nested object at the same time!&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Projects</title>
                <pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/projects/</link>
                <guid>andrewzah.com/projects/</guid>
                <description>&lt;p&gt;These are various projects I&#x27;ve worked on over the years. I hope they may be of some use to you. If you&#x27;d like to contribute to any, feel free! I generally use the GPLv3 license, or MIT otherwise.&lt;&#x2f;p&gt;
&lt;p&gt;As of late the bulk of my development has been on private repos for work, unfortunately.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;git-repo-stores&quot;&gt;Git Repo Stores&lt;&#x2f;h2&gt;
&lt;p&gt;In preferred order. I use github when I have no other option and for mirrors.&lt;&#x2f;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.sr.ht&#x2f;%7Eandrewzah&quot;&gt;git.sr.ht&#x2f;~andrewzah&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.andrewzah.com&#x2f;andrei&quot;&gt;git.andrewzah.com&#x2f;andrei&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2f;&#x2f;gitlab.com&#x2f;andrewzah&quot;&gt;gitlab.com&#x2f;andrewzah&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;azah&quot;&gt;github.com&#x2f;azah&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;hr &#x2f;&gt;
&lt;h2 id=&quot;in-progress&quot;&gt;In Progress&lt;&#x2f;h2&gt;
&lt;p&gt;These are things I&#x27;m actively working on and&#x2f;or messing around with.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;apps-andrei-kr-rust-wasm-react&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.sr.ht&#x2f;%7Eandrewzah&#x2f;apps.andrei.kr&quot;&gt;apps.andrei.kr&lt;&#x2f;a&gt; – rust&#x2f;wasm&#x2f;react&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Frontend for &lt;code&gt;korean_numbers&lt;&#x2f;code&gt; and other learning tools.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;unifiedsearch-rust-wasm-mithril&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.sr.ht&#x2f;%7Eandrewzah&#x2f;unifiedsearch&quot;&gt;unifiedsearch&lt;&#x2f;a&gt; – rust&#x2f;wasm&#x2f;mithril&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;This website. Statically generated using zola and tera templating.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;danmuji-golang&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.sr.ht&#x2f;%7Eandrewzah&#x2f;danmuji&quot;&gt;danmuji&lt;&#x2f;a&gt; – golang&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Discord bot written using Golang.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;naveraudio-rust&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.sr.ht&#x2f;%7Eandrewzah&#x2f;naver_audio&quot;&gt;naveraudio&lt;&#x2f;a&gt; – rust&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Downloads sound files for Korean words via NAVER&#x27;s (undocumented) api.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;hr &#x2f;&gt;
&lt;h2 id=&quot;actively-maintained&quot;&gt;Actively Maintained&lt;&#x2f;h2&gt;
&lt;h4 id=&quot;korean-numbers-rust&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.sr.ht&#x2f;%7Eandrewzah&#x2f;korean_numbers&quot;&gt;korean_numbers&lt;&#x2f;a&gt; – rust&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Converts integers and floats to Hangeul. Supports both number systems.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;personal-site-zola&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.sr.ht&#x2f;%7Eandrewzah&#x2f;personal-site&quot;&gt;personal_site&lt;&#x2f;a&gt; – zola&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;This website. Statically generated using zola and tera templating.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;personal-docker-shell-docker&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.sr.ht&#x2f;%7Eandrewzah&#x2f;andrewzah.com&quot;&gt;personal_docker&lt;&#x2f;a&gt; – shell&#x2f;docker&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Docker setup for fast deployments on VPSs.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;hr &#x2f;&gt;
&lt;h2 id=&quot;inactive&quot;&gt;Inactive&lt;&#x2f;h2&gt;
&lt;h3 id=&quot;crystal&quot;&gt;Crystal&lt;&#x2f;h3&gt;
&lt;h4 id=&quot;amaranth-cr&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;azah&#x2f;amaranth&quot;&gt;amaranth-cr&lt;&#x2f;a&gt;&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Discord bot based on &lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;meewo&#x2f;discordcr&quot;&gt;discordcr&lt;&#x2f;a&gt;.&lt;&#x2f;li&gt;
&lt;li&gt;Wrote a lexer&#x2f;parser to allow custom, recursive commands.&lt;&#x2f;li&gt;
&lt;li&gt;Wrote a command and plugin framework to allow custom functionality.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;dotacr&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.andrewzah.com&#x2f;andrei&#x2f;dotacr&quot;&gt;dotacr&lt;&#x2f;a&gt;&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Wrote a wrapper for Valve&#x27;s &lt;a href=&quot;https:&#x2f;&#x2f;dev.dota2.com&#x2f;showthread.php?t=58317&quot;&gt;DotA 2 api&lt;&#x2f;a&gt;.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;cowapi&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;azah&#x2f;cowapi&quot;&gt;cOWAPI&lt;&#x2f;a&gt;&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Wrote a Crystal&#x2f;Kemal version of &lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;SunDwarf&#x2f;OWAPI&quot;&gt;OWAPI&lt;&#x2f;a&gt;, that scrapes and parses Overwatch gameplay stats from Blizzard.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;minifluxcr&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;azah&#x2f;miniflux-cr&quot;&gt;Minifluxcr&lt;&#x2f;a&gt;&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Wrote a wrapper for Miniflux&#x27;s api.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;tree-problem&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;azah&#x2f;tree-problem&quot;&gt;tree-problem&lt;&#x2f;a&gt;&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Solved an interview problem for CancerIQ. They wasted my time, so I made my solution public.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h3 id=&quot;elm&quot;&gt;Elm&lt;&#x2f;h3&gt;
&lt;h4 id=&quot;amaranth-frontend&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;azah&#x2f;amaranth-frontend&quot;&gt;amaranth-frontend&lt;&#x2f;a&gt;&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Elm frontend for amaranth-bot that dynamically lists commands and info.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h3 id=&quot;python-3&quot;&gt;Python 3&lt;&#x2f;h3&gt;
&lt;h4 id=&quot;owapi&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;Fuyukai&#x2f;OWAPI&quot;&gt;OWAPI&lt;&#x2f;a&gt;&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Contributed to v2 and v3 of Laura&#x27;s overwatch stats api.&lt;&#x2f;li&gt;
&lt;li&gt;Learned about xml scraping and parsing, and API design.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h2 id=&quot;not-programming-related&quot;&gt;Not Programming Related&lt;&#x2f;h2&gt;
&lt;h4 id=&quot;dotfiles&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.andrewzah.com&#x2f;andrei&#x2f;dotfiles&quot;&gt;dotfiles&lt;&#x2f;a&gt;&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;a dotfile a day keeps productivity at bay.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;az-quotes&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.andrewzah.com&#x2f;andrei&#x2f;quotes&quot;&gt;az-quotes&lt;&#x2f;a&gt;&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;A json file of quotes that I like, as seen on my &lt;a href=&quot;&#x2f;quotes&quot;&gt;quotes page&lt;&#x2f;a&gt;. Source for the random quote at the end of my posts.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;tf2config&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.andrewzah.com&#x2f;andrei&#x2f;tf2-config&quot;&gt;tf2config&lt;&#x2f;a&gt;&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;tf2 config based on master comfig.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h4 id=&quot;korean-articles-pandoc&quot;&gt;&lt;a href=&quot;https:&#x2f;&#x2f;git.andrewzah.com&#x2f;andrei&#x2f;korean-articles&quot;&gt;korean_articles&lt;&#x2f;a&gt; – pandoc&lt;&#x2f;h4&gt;
&lt;ul&gt;
&lt;li&gt;Created a makefile to easily copy&#x2f;paste Korean articles and render them as PDFs for printing.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
</description>
            </item>
        
            <item>
                <title>Ultimate List of Resources for Learning Korean in 2019</title>
                <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/ultimate-list-of-resources-for-learning-korean-in-2019/</link>
                <guid>andrewzah.com/posts/ultimate-list-of-resources-for-learning-korean-in-2019/</guid>
                <description>&lt;p&gt;In the language servers I frequent, I often see newcomers asking about how they should start learning Korean, or what websites&#x2f;books&#x2f;apps to use, etc. I got tired of repeating myself, so I made this collection for people to easily copy&#x2f;paste.&lt;&#x2f;p&gt;
&lt;p&gt;The following resources are all either resources that I &lt;em&gt;personally&lt;&#x2f;em&gt; have used while studying Korean, or resources that I&#x27;ve heard very good things about from fellow learners.&lt;&#x2f;p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;&#x2f;strong&gt;: &lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
&lt;em&gt;E&lt;&#x2f;em&gt;
&lt;&#x2f;span&gt; = Elementary, &lt;span class=&quot;hl hl-left hl-green&quot;&gt;
&lt;em&gt;B&lt;&#x2f;em&gt;
&lt;&#x2f;span&gt; = Beginner, &lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
&lt;em&gt;I&lt;&#x2f;em&gt;
&lt;&#x2f;span&gt; = Intermediate, &lt;span class=&quot;hl hl-left hl-red&quot;&gt;
&lt;em&gt;A&lt;&#x2f;em&gt;
&lt;&#x2f;span&gt; = Advanced.&lt;&#x2f;p&gt;
&lt;p&gt;I hope this is helpful, and let me know if I happened to leave out any good resources!&lt;&#x2f;p&gt;
&lt;hr &#x2f;&gt;
&lt;h3 id=&quot;too-long-didn-t-read&quot;&gt;Too Long; Didn&#x27;t Read&lt;&#x2f;h3&gt;
&lt;p&gt;Just looking to get started and don&#x27;t wanna read this whole page? Here are some quick starting tips!&lt;&#x2f;p&gt;
&lt;p&gt;If you need to learn Hangeul, look at the Elementary section &lt;a href=&quot;andrewzah.com&#x2f;posts&#x2f;ultimate-list-of-resources-for-learning-korean-in-2019&#x2f;#elementary&quot;&gt;below&lt;&#x2f;a&gt;.&lt;&#x2f;p&gt;
&lt;p&gt;These folks have really good youtube channels and websites with PDFs for free:&lt;&#x2f;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2f;&#x2f;gobillykorean.com&#x2f;&quot;&gt;GO! Billy Korean&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2f;&#x2f;talktomeinkorean.com&#x2f;&quot;&gt;TalkToMeInKorean&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;p&gt;This site has very detailed grammar explanations:&lt;&#x2f;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2f;&#x2f;www.howtostudykorean.com&quot;&gt;HowToStudyKorean&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;p&gt;These apps are great for beginners &#x2f; in general:&lt;&#x2f;p&gt;
&lt;ul&gt;
&lt;li&gt;세종 문법 초급 – Beginner lessons and grammar with audio: &lt;a href=&quot;https:&#x2f;&#x2f;itunes.apple.com&#x2f;us&#x2f;app&#x2f;%EC%84%B8%EC%A2%85%ED%95%9C%EA%B5%AD%EC%96%B4-%EB%AC%B8%EB%B2%95-%EC%B4%88%EA%B8%89&#x2f;id1347807237?mt=8&quot;&gt;iOS&lt;&#x2f;a&gt;, &lt;a href=&quot;https:&#x2f;&#x2f;play.google.com&#x2f;store&#x2f;apps&#x2f;details?id=air.org.kingsejong.grammarbasic&amp;amp;hl=ko&quot;&gt;Android&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;li&gt;Naver Dictionary: &lt;a href=&quot;https:&#x2f;&#x2f;itunes.apple.com&#x2f;us&#x2f;app&#x2f;naver-korean-dictionary&#x2f;id673085116?mt=8&quot;&gt;iOS&lt;&#x2f;a&gt; – &lt;a href=&quot;https:&#x2f;&#x2f;play.google.com&#x2f;store&#x2f;apps&#x2f;details?id=com.nhn.android.naverdic&amp;amp;hl=en&quot;&gt;Android&lt;&#x2f;a&gt;&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;p&gt;Best of luck! Continue reading for more detailed explanations about these resources.&lt;&#x2f;p&gt;
&lt;hr &#x2f;&gt;
&lt;h3 id=&quot;elementary&quot;&gt;Elementary&lt;&#x2f;h3&gt;
&lt;p&gt;If you know nothing or very little about Korean, the first thing you should do is learn how to read Hangeul! Don&#x27;t even bother learning romanization, or unlearn it if you already have learned it.&lt;&#x2f;p&gt;
&lt;p&gt;The &lt;em&gt;single&lt;&#x2f;em&gt; most important thing to learn here is that &lt;strong&gt;Korean letters do not map nicely to English letters&lt;&#x2f;strong&gt;. If you use romanization, you will seriously hinder your progress due to incorrectly learning how to pronounce things. You may see guides that say ㄷ is d, etc. Whenever you see this, you should mentally replace it with &amp;quot;ㄷ is &lt;em&gt;similar&lt;&#x2f;em&gt; to d, but is just ㄷ, not d&amp;quot;.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;learn-hangeul-in-90-minutes-start-to-finish&quot;&gt;Learn Hangeul in 90 Minutes – Start to Finish&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;: https:&#x2f;&#x2f;www.youtube.com&#x2f;watch?v=s5aobqyEaMQ
&lt;p&gt;Go! Billy Korean in general produces very high quality content for learning Korean, and is listed below.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;korean-word-structure-and-basic-letters&quot;&gt;Korean Word Structure and Basic Letters&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;: https:&#x2f;&#x2f;www.howtostudykorean.com&#x2f;unit0&#x2f;unit0lesson1&#x2f;
&lt;p&gt;I prefer text-based conent so I personally started with this. However when you learn Hangeul, make sure to listen to &lt;em&gt;something&lt;&#x2f;em&gt; so that you learn the sounds.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;how-to-read-and-write-in-korean&quot;&gt;How to Read and Write in Korean&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;: https:&#x2f;&#x2f;vimeo.com&#x2f;ondemand&#x2f;hangeul
&lt;p&gt;This is a video course from TalkToMeInKorean that breaks down Hangeul and the mouth shapes you should be making. I highly recommend this short video series.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;jenny-s-korean&quot;&gt;Jenny&#x27;s Korean&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;: https:&#x2f;&#x2f;www.youtube.com&#x2f;watch?v=0ZhOeA0RD9o&amp;feature=youtu.be
&lt;p&gt;This video is really popular for Hangeul learners.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;websites&quot;&gt;Websites&lt;&#x2f;h2&gt;
&lt;h4 id=&quot;go-billy-korean-s-website&quot;&gt;GO! Billy Korean&#x27;s Website&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;: https:&#x2f;&#x2f;gobillykorean.com&#x2f;category&#x2f;full-lessons&#x2f;
&lt;p&gt;The website for GBK is basically a wrapper for Billy&#x27;s youtube channel. You can watch his videos and download the related PDFs for free. Here you can easily find his content as opposed to digging through all of the videos on his channel. See youtube channels below for a full review.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;talktomeinkorean-s-website&quot;&gt;TalkToMeInKorean&#x27;s Website&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;talktomeinkorean.com&#x2f;curriculum
&lt;p&gt;TTMiK is also a great learning resource, particularly for beginners. They provide much smaller, more digestible lessons, in a better order. It&#x27;s also free (you just need to make an account). The lessons have a podcast-like style and each lesson has a concise PDF.&lt;&#x2f;p&gt;
&lt;p&gt;Overall I think TTMiK is a great resource and it pairs well with How to Study Korean when you need a more detailed explanation. Sometimes the banter on the podcasts is slightly awkward but I still like the presenters.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;howtostudykorean&quot;&gt;HowToStudyKorean&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;www.howtostudykorean.com&#x2f;
&lt;p&gt;HtSK is an excellent resource born out of someone&#x27;s fastidious notes and research. When I started learning Korean I pretty much used only this. All of the lessons are in-depth, to the point of sometimes having almost &lt;em&gt;too&lt;&#x2f;em&gt; much information..&lt;&#x2f;p&gt;
&lt;p&gt;One downside is the arrangement of the lessons–to put it simply, the order is a bit wack. For example, &amp;quot;because&amp;quot; is so, so common in language, but &lt;code&gt;~어&#x2f;아서&lt;&#x2f;code&gt; isn&#x27;t discussed until lesson 37. ~(으)니까 is also common isn&#x27;t discussed until lesson 81. The concept of &lt;code&gt;~적&lt;&#x2f;code&gt; is discussed in lesson 16 but as a beginner&#x2f;intermediate you won&#x27;t be using ~적 words really.&lt;&#x2f;p&gt;
&lt;p&gt;I recommend following it linearly at least until lesson 32, but supplement it with searching naturally for grammar as you continue to speak in Korean. Lessons 26-32 are really important because they teach the &lt;code&gt;~는 것&lt;&#x2f;code&gt; principle.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;glossika&quot;&gt;Glossika&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;: https:&#x2f;&#x2f;glossika.com&#x2f;
&lt;p&gt;Glossika aims to provide fluency by giving you speaking exercises via spaced repetition. It&#x27;s very similar to Pimsleur, except more modern. They offer a good deal of languages including Korean (but not Romanian, sadly)... I have a few friends who highly praise it, but haven&#x27;t tried it yet. I think this month I&#x27;ll try it and see how it goes.&lt;&#x2f;p&gt;
&lt;p&gt;The drawback here is that it&#x27;s pricey, $30&#x2f;mo per month or $25&#x2f;mo yearly.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;r-korean&quot;&gt;&#x2f;r&#x2f;Korean&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;reddit.com&#x2f;r&#x2f;korean&#x2f;
&lt;p&gt;&#x2f;r&#x2f;Korean is a fairly high quality subreddit for asking questions about Korean. Occasionally people post guides or series, but it&#x27;s somewhat sporadic. There&#x27;s good content here, but it&#x27;s more useful if you already use reddit.&lt;&#x2f;p&gt;
&lt;p&gt;The level of the questions typically skews from beginner to intermediate.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;study-with-bee&quot;&gt;Study with Bee&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;studywithbee.com&#x2f;
&lt;p&gt;Bees is a regular in the LLK discord server who has been studying Korean for quite a while. She breaks down grammar well and provides good examples. She also occasionally writes about other things, like book reviews and studying different langauges. I recommend checking her blog out!&lt;&#x2f;p&gt;
&lt;h4 id=&quot;naver-english-dictionary&quot;&gt;Naver English Dictionary&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;endic.naver.com&#x2f;?sLn=en
&lt;p&gt;This is a very good, if a bit conservative dictionary sourced from Daum. I still use this all the time out of habit, but I should use the Korean Foundation Dictionary more.&lt;&#x2f;p&gt;
&lt;p&gt;One issue is that on the desktop website, searching for grammar points like ~마다, etc, either yields nothing, or it yields very basic information. Searching on the mobile app gives way more information. The desktop site also has daily words and conversation, but the mobile app has more detailed examples and explanations.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;korean-foundation-dictionary&quot;&gt;Korean Foundation Dictionary&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *I*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;krdict.korean.go.kr&#x2f;mainAction
&lt;p&gt;The definitions in this dictionary are better, but they&#x27;re in Korean. I recommend using this dictionary once you can read Korean definitions.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;naver-comic&quot;&gt;Naver Comic&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;comic.naver.com&#x2f;index.nhn
&lt;p&gt;Here you can read Korean webtoons and browse by category. The mobile app is a bit nicer to use though, in my opinion. See below.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;audio-clip&quot;&gt;Audio Clip&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;audioclip.naver.com&#x2f;
&lt;p&gt;A Korean podcast website. There is a complimentary app, see below.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;lang8-hinative-italki-etc&quot;&gt;Lang8, HiNative, iTalki, etc&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;hinative.com&#x2f;en-US, https:&#x2f;&#x2f;lang-8.com&#x2f;
&lt;p&gt;These are sites where people can ask questions and receive answers. You may see them when searching online about specific words or grammar points. They are generally okay, but I would take it with a grain of salt, because it really depends on who answers. Sometimes the questions and replies are only in Korean.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;youtube-channels&quot;&gt;Youtube Channels&lt;&#x2f;h2&gt;
&lt;p&gt;I&#x27;d say probably most of my Korean learning through youtube has been through content from GO! Billy Korean and TalkToMeInKorean. If you use no other learning resources, I would recommend these two channels.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;go-billy-korean&quot;&gt;GO! Billy Korean&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;www.youtube.com&#x2f;user&#x2f;GoBillyKorean
&lt;p&gt;Billy is probably the best Korean teacher that I have seen. He teaches well to all skill levels. The majority of his content is elementary to intermediate, however he occasionally dips in to advanced topics, especially in his weekly topic livestreams. Most of his videos are about Korean itself (i.e. grammar) but he also has some videos about culture, and some interviews with Koreans.&lt;&#x2f;p&gt;
&lt;p&gt;Because Billy is a foreigner who learned Korean, I think he has a really good perspective for teaching, moreso than TTMiK. If you watch his videos (particularly the older ones) you can see that he&#x27;s just extremely passionate about Korean, and teaching it.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;talktomeinkorean&quot;&gt;TalkToMeInKorean&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;www.youtube.com&#x2f;user&#x2f;talktomeinkorean
Billy is probably the best Korean teacher that I have seen. He teaches well to all skill levels, but the majority of his content is elementary to intermediate.
&lt;h4 id=&quot;spongemind&quot;&gt;SpongeMind&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-right hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;www.youtube.com&#x2f;channel&#x2f;UCrOP1_DfcuWWPuCQpGsVD-w
&lt;p&gt;Spongemind sporadically uploads short 1-2 minute &amp;quot;inspiration videos&amp;quot;. You can watch these to learn some new vocabulary words, and then repeat 10-20 times to practice saying the sentences. They also upload longer conversations &#x2f; interviews with English and Korean subtitles.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;apps&quot;&gt;Apps&lt;&#x2f;h2&gt;
&lt;h4 id=&quot;sejjon-munbbeo-coggeu&quot;&gt;세종 문법 초급&lt;&#x2f;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;011&amp;#x2f;sejongapp.jpg&quot; data-lity data-lity-desc=&quot;Sejong Beginner Gramar app interface pictures.&quot; alt=&quot;Sejong Beginner Gramar app interface pictures.&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;011&amp;#x2f;sejongapp.jpg&quot;&#x2f;&gt;
&lt;&#x2f;a&gt;&lt;&#x2f;p&gt;
&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;+: Apple&#x2f;Android App Store
&lt;p&gt;Sejong Beginner Grammar is a fantastic (and adorable) app that is geared towards beginners. You make a little avatar and get guided through beginner Korean conversations. There are grammar explanations and short drills afterwards. Once you know how to read Hangeul I recommend using this (and listening along, of course). Try to listen without looking first and see how much you can understand!&lt;&#x2f;p&gt;
&lt;h4 id=&quot;lingodeer&quot;&gt;LingoDeer&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;+: Apple&#x2f;Android App Store
&lt;p&gt;LingoDeer has guided lessons tailored to learning Asian languages. I have not used this personally, but many beginners seem to like it. LingoDeer is miles ahead of DuoLingo (which should absolutely not be used for Japanese or Korean, yet). The lessons also have audio, which is important.&lt;&#x2f;p&gt;
&lt;p&gt;The only issue I&#x27;ve seen here is due to the UI, it doesn&#x27;t teach proper spacing sometimes, but that&#x27;s a relatively minor issue.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;anki-flashcards&quot;&gt;Anki Flashcards&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;apps.ankiweb.net&#x2f;docs&#x2f;AnkiMobile.html
&lt;p&gt;Note that there is a competitor who has a similar name (AnkiApp). Use the above link for the correct Anki.&lt;&#x2f;p&gt;
&lt;p&gt;I cannot praise Anki highly enough. It&#x27;s a spaced repetition flash card app, so as you master a word, it shows up less and less frequently. You can (and should) make custom decks but beginners can use &lt;a href=&quot;https:&#x2f;&#x2f;ankiweb.net&#x2f;shared&#x2f;info&#x2f;4066961604&quot;&gt;Evita&#x27;s premade deck&lt;&#x2f;a&gt; with 5k words. The author set words to appear in a specific order based on their usage. I recommend using this for 4-6 months, and then as you start consuming Korean content like webtoons&#x2f;tv shows&#x2f;etc, I suggest moving to your own deck with words that you saw.&lt;&#x2f;p&gt;
&lt;p&gt;Also, I &lt;em&gt;strongly&lt;&#x2f;em&gt; recommend making a deck with a field for sample sentences. Decks like Evita&#x27;s just show the word.. but not &lt;em&gt;how&lt;&#x2f;em&gt; it&#x27;s used. For beginner words like &lt;code&gt;mom&lt;&#x2f;code&gt; this is adequate, but as you learn more advanced words it quickly grows frustrating.&lt;&#x2f;p&gt;
&lt;p&gt;My personal deck has fields for: word type (noun, adverb, etc), sample sentences, hanja, and notes. Some people also use audio and images, but it already takes me long enough to sit down and add words without having to download those as well. I also use custom CSS styling to give those fields different colors.&lt;&#x2f;p&gt;
&lt;p&gt;One final warning: If you add 20 words a day, you will burn out eventually. I recommend limiting it to 10 new words per day, and 100 reviews per day, or less. Unless you can commit to doing Anki 45-60 minutes a day, every day, it will be very hard with the default settings. &lt;&#x2f;p&gt;
&lt;p&gt;I use Anki so much that I&#x27;m planning on doing a writeup on it and its intricacies.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;naver-english-dictionary-1&quot;&gt;Naver English Dictionary&lt;&#x2f;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;011&amp;#x2f;naverdicapp.jpg&quot; data-lity data-lity-desc=&quot;naver endic app interface pictures&quot; alt=&quot;naver endic app interface pictures&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;011&amp;#x2f;naverdicapp.jpg&quot;&#x2f;&gt;
&lt;&#x2f;a&gt;&lt;&#x2f;p&gt;
&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;+: Apple&#x2f;Android App Store
&lt;p&gt;This app is indispensable. When you study Korean you&#x27;re gonna be looking words up a LOT, so having a good dictionary app helps. You can quickly switch between the Korean, Chinese, and Hanja dictionaries as well.&lt;&#x2f;p&gt;
&lt;p&gt;I can&#x27;t vouch for the quality of the other Korean dictionary apps since I don&#x27;t know what source they&#x27;re using.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;papago&quot;&gt;Papago&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;+: Apple&#x2f;Android App Store
&lt;p&gt;Translator app that&#x27;s usually better than google translate. Do not rely on this. It can work with simple sentences but should only be a last resort. It almost always fails on non-basic sentences. They also added an honorific mode, but I&#x27;ve seen it fail. Rely on this at your own peril.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;naver-webtoon&quot;&gt;Naver Webtoon&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: 네이버 웹툰 in the iOS&#x2f;Android app stores
&lt;p&gt;This app lets you easily browse webtoons from comic.naver.com. Here, you leave educational Korean territory and go into real Korean territory. These webtoons are written by and consumed by Koreans, after all. You&#x27;ll see not only real Korean but slang and dialect as well, so it can be quite tough.&lt;&#x2f;p&gt;
&lt;p&gt;There may(?) be more simplistic webtoons aimed at foreigners, but I&#x27;m not aware of any so far. If you need a recommendation, 마음의 소리 (Sound of Your Heart) got turned into a netflix original series. Currently I&#x27;m reading &lt;a href=&quot;https:&#x2f;&#x2f;comic.naver.com&#x2f;bestChallenge&#x2f;detail.nhn?titleId=709889&amp;amp;no=1&amp;amp;week=mon&quot;&gt;뚜벅뚜벅&lt;&#x2f;a&gt;. If you use the app you can easily pick random ones.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;audio-clip-1&quot;&gt;Audio Clip&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: 오디오 클립 in the iOS&#x2f;Android app stores
&lt;p&gt;A Korean podcast app. I have attempted to use this but I&#x27;m nowhere near advanced enough to listen to a full length podcast without getting frustrated.&lt;&#x2f;p&gt;
&lt;p&gt;You can filter by categories and download podcasts for offline listening.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;hellotalk&quot;&gt;HelloTalk&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: Apple&#x2f;Android app stores
&lt;p&gt;I hesitate to suggest this app. On one hand, you can talk with people via text or voice and receive corrections easily. On the other hand, I&#x27;ve heard of people kinda being creepy (despite HelloTalk explicitly prohibiting using it as a dating app).&lt;&#x2f;p&gt;
&lt;p&gt;I personally have used this app with no problems. You can post on your own wall and receive corrections, or you can message people directly.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;community-servers&quot;&gt;Community Servers&lt;&#x2f;h2&gt;
&lt;h4 id=&quot;let-s-learn-korean&quot;&gt;Let&#x27;s Learn Korean!&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;discord.gg&#x2f;e3H9Pde
&lt;p&gt;LLK is a very active Discord server for learning about and practicing Korean! You can ask questions, post Korean sentences to be corrected, and otherwise chat with other learners about Korean and general topics! LLK has good moderation despite its size, so the conversations remain high quality in the learning channels.&lt;&#x2f;p&gt;
&lt;p&gt;I love this server because my questions are &lt;em&gt;always&lt;&#x2f;em&gt; answered promptly. The most I&#x27;ve had to wait is 7-9 hours or so. There are many advanced and native speakers.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;go-billy-korean-s-server&quot;&gt;GO! Billy Korean&#x27;s Server&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;discordapp.com&#x2f;invite&#x2f;tJmt6zm
&lt;p&gt;GBK also has a server, so if you watch a lot of his videos I recommend checking out this server. You can discuss in Korean and ask questions here too, but there are less people so it can take longer to get questions answered. Billy actually answers questions both here and in LLK.&lt;&#x2f;p&gt;
&lt;h4 id=&quot;r-korean-s-server&quot;&gt;&#x2f;r&#x2f;Korean&#x27;s Server&lt;&#x2f;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: http:&#x2f;&#x2f;discord.gg&#x2f;rjjaNWN
&lt;p&gt;The &lt;a href=&quot;https:&#x2f;&#x2f;reddit.com&#x2f;r&#x2f;korean&quot;&gt;&#x2f;r&#x2f;Korean&lt;&#x2f;a&gt; subreddit also has its own discord server, but it too is small currently. If you use reddit and &#x2f;r&#x2f;Korean a lot, I recommend checking this one out.&lt;&#x2f;p&gt;
&lt;p&gt;Honestly, regular users from LLK (like me) are in all 3 servers. There are more discord servers for sure, but I can&#x27;t personally vouch for them or their quality.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;textbooks&quot;&gt;Textbooks&lt;&#x2f;h2&gt;
&lt;h3 id=&quot;korean-made-simple-series&quot;&gt;Korean Made Simple (Series)&lt;&#x2f;h3&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;gobillykorean.com&#x2f;korean-made-simple&#x2f;
&lt;p&gt;Not only does GO! Billy make videos, but he also recently has been publishing this learning book series! The books have vocabulary, grammar, examples, and practice sections with answer keys. I have not used them personally but I have heard good things from learners about it–I also just trust content coming from Billy.&lt;&#x2f;p&gt;
&lt;p&gt;An (optional) extra workbook is also available if you want even more practice.&lt;&#x2f;p&gt;
&lt;h3 id=&quot;korean-grammar-in-use-series&quot;&gt;Korean Grammar in Use (Series)&lt;&#x2f;h3&gt;
&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2f;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2f;span&gt;+: https:&#x2f;&#x2f;www.amazon.com&#x2f;gp&#x2f;bookseries&#x2f;B01M1S9ZK4
&lt;p&gt;KGiU comes in Beginner, Intermediate, and Advanced levels. It very strictly focuses on grammar only, mapping it TOPIK levels. (Beginner: TOPIK 1-2, Intermediate: 3-4, Advanced: 5-6). Each grammar point has detailed explanations and breakdowns, sample sentences, and practice sentences with an answer key.&lt;&#x2f;p&gt;
&lt;p&gt;These books are fantastic resources for looking up and referencing grammar, but you can also use websites like HowToStudyKorean for free. In fact, some other websites are basically direct rips from these textbooks, images and all.&lt;&#x2f;p&gt;
&lt;p&gt;I personally just used HowToStudyKorean, and by the time I bought the beginner textbook I realized I already knew nearly all of the grammar... When I start studying for the TOPIK more seriously, I&#x27;ll probably read the intermediate and advanced ones cover to cover.&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Korean Progress #2</title>
                <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/korean-progress-2/</link>
                <guid>andrewzah.com/posts/korean-progress-2/</guid>
                <description>&lt;p&gt;While studying Korean, sometimes I get a bit lazy or lose some motivation. I decided to start this weekly series as a way to track what I&#x27;ve been learning and to motivate myself to keep studying.&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Korean Progress #1</title>
                <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/korean-progress-1/</link>
                <guid>andrewzah.com/posts/korean-progress-1/</guid>
                <description>&lt;p&gt;While studying Korean, sometimes I get a bit lazy or lose some motivation. I decided to start this weekly series as a way to track what I&#x27;ve been learning and to motivate myself to keep studying.&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Korean for Programmers</title>
                <pubDate>Sat, 16 Feb 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/korean-for-programmers/</link>
                <guid>andrewzah.com/posts/korean-for-programmers/</guid>
                <description>&lt;p&gt;I was inspired to write this after reading &lt;em&gt;German for Programmers&lt;&#x2f;em&gt;.&lt;a id=&quot;refer-0&quot; href=&quot;#reference-0&quot;&gt;[0]&lt;&#x2f;a&gt; It&#x27;s quite likely that I&#x27;m just biased to see things a certain way because I work with programming languages for a living, but I often find myself drawing comparisons among Korean and programming.&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Korean Food &amp; Cooking Vocabulary Reference</title>
                <pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/korean-cooking-eating-vocabulary-reference/</link>
                <guid>andrewzah.com/posts/korean-cooking-eating-vocabulary-reference/</guid>
                <description>&lt;p&gt;Here is a compiled list of Korean words related to food, cooking, eating (out), going out, and nutrition.&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>My growth as a self-taught developer in 2018</title>
                <pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/my-growth-self-taught-software-developer-in-2018/</link>
                <guid>andrewzah.com/posts/my-growth-self-taught-software-developer-in-2018/</guid>
                <description>&lt;p&gt;Now that 2019 is almost here, I&#x27;ve been reflecting on my personal &amp;amp; professional journey as a self taught programmer so far.
Here&#x27;s my story of going from a media arts degree and no job to working fulltime remotely.&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Finishing that Marathon</title>
                <pubDate>Sat, 03 Nov 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/finishing-that-marathon/</link>
                <guid>andrewzah.com/posts/finishing-that-marathon/</guid>
                <description>&lt;ol start=&quot;17&quot;&gt;
&lt;li&gt;I realized today that it has been 17 months since I first started learning Korean. 17 months ago, I flew to Korea and lived there for about 8 months. Then I came back to the US 9 months ago. I&#x27;d like to say my Korean ability reflects 17 months, but it does not. This has to do with &lt;code&gt;motivation&lt;&#x2f;code&gt;, or my occasional lack thereof.&lt;&#x2f;li&gt;
&lt;&#x2f;ol&gt;
&lt;h2 id=&quot;it-s-easy-to-start-off-strong&quot;&gt;It&#x27;s easy to start off strong&lt;&#x2f;h2&gt;
&lt;p&gt;The beginning of anything, especially learning a language, is always the easiest part. You go from nothing to something. With languages, you go from not knowing anything to knowing a few things in that domain- an infinite% improvement!! And afterwards your ability will continue to skyrocket- relatively speaking.&lt;&#x2f;p&gt;
&lt;p&gt;For real languages this amounts to learning the alphabet or script, and some very basic words or phrases. Then more words and some beginner grammar. For programming languages, it&#x27;s the code syntax and style, then the surrounding ecosystem, etcetera. You can keep this up for a while, months, even a year if you&#x27;re lucky. There are many things to learn but they&#x27;re still fresh, exciting, new.&lt;&#x2f;p&gt;
&lt;p&gt;Along this journey, people start to fall off for various reasons, but there are two big ones. First, the law of diminishing returns. You go from infinite! increase, to 100% increase, to 10% increase, until it becomes more of a steady drip.  Second, in the beginning of any field, study, or profession, you cannot know how little you actually know. How little ability you actually have. Don&#x27;t worry, you will realize this once you start to become more intermediate, after longer exposure—maybe 3-4 months, maybe a year. For languages, this is typically when it becomes frustrating. You&#x27;re no longer impressed by &amp;quot;Hi, my name is Andrew&amp;quot;-style basic speech... You&#x27;re yearning for you know, actual conversations.&lt;&#x2f;p&gt;
&lt;p&gt;Yet you can&#x27;t.&lt;&#x2f;p&gt;
&lt;p&gt;And now, you know that you &lt;em&gt;have&lt;&#x2f;em&gt; to study way more in order to reach that level. This is vexing—since we don&#x27;t tend to look at things from a relative standpoint. As improvement comes day by day it&#x27;s tough to realize just how much we&#x27;ve improved! You can&#x27;t do advanced things yet &lt;em&gt;but that&#x27;s okay&lt;&#x2f;em&gt;. That&#x27;s why we separate intermediate and advanced, I suppose. So at this point, you either become dejected and eventually stop, or you have a new fire lit under you, pushing you forward even harder.&lt;&#x2f;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;005&amp;#x2f;lawofdimin.png&quot; data-lity data-lity-desc=&quot;Graphic demonstrating the Law of Diminishing Returns&quot; alt=&quot;Graphic demonstrating the Law of Diminishing Returns&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2f;&amp;#x2f;s3.amazonaws.com&amp;#x2f;andrewzah.com&amp;#x2f;posts&amp;#x2f;005&amp;#x2f;lawofdimin.png&quot;&#x2f;&gt;
&lt;&#x2f;a&gt;&lt;&#x2f;p&gt;
&lt;h2 id=&quot;keepin-on-is-astoundingly-difficult&quot;&gt;Keepin&#x27; on is astoundingly difficult&lt;&#x2f;h2&gt;
&lt;p&gt;Once you get past the hurdle of keeping on despite realizing how little you actually know, it just becomes similar to &lt;code&gt;work&lt;&#x2f;code&gt;. I say similar, because you&#x27;re still &lt;em&gt;studying&lt;&#x2f;em&gt;. You&#x27;re NOT just showing up- that&#x27;s useless. But you ARE still doing critical analysis, reflecting, and growing.&lt;&#x2f;p&gt;
&lt;p&gt;You just have to wake up, every day, and keep at it. Endlessly. At this point you really need to have the fires of passion burning, to sustain this.&lt;&#x2f;p&gt;
&lt;p&gt;You&#x27;ll still find enjoyment in the studying, certainly, why else would you be doing this? Yet it just isn&#x27;t quite as exhilarating as the beginning. There aren&#x27;t much more large improvements- just little things here and there that add up to you becoming a proper professional, a superior-level language speaker, and so on.&lt;&#x2f;p&gt;
&lt;p&gt;These little nuggets can be fascinating in their own right too. For example, I&#x27;ve been using &lt;code&gt;git&lt;&#x2f;code&gt; for about ~3.5 years now? And I &lt;em&gt;just&lt;&#x2f;em&gt; learned about &lt;code&gt;git commit -v&lt;&#x2f;code&gt;. It&#x27;s a small thing but it makes writing &lt;code&gt;git commit&lt;&#x2f;code&gt; messages much easier. Find a way to derive enjoyment fom discovering little things like this.&lt;&#x2f;p&gt;
&lt;h2 id=&quot;staying-motivated&quot;&gt;Staying motivated&lt;&#x2f;h2&gt;
&lt;p&gt;Anyone can study something an insane number of hours. Let&#x27;s see you keep it up for a week, a month, a year, 10 years. Here are some things that helped me retain my passion in studying Korean and programming:&lt;&#x2f;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Taking breaks occasionally&lt;&#x2f;strong&gt;. If I only had one recommendation, this would be it. There&#x27;s just something about taking a week or longer break to clear your mind. Every single time I have done this, it only made me want to study Korean or programming anymore- I had missed it! Yet the time off allowed my mind to relax and ponder, giving me a fresh perspective.&lt;&#x2f;li&gt;
&lt;li&gt;Finding and creating a circle of friends who also study what you study. When you learn new things, you have a responsive group to share them with! When you have questions, you have people to turn to. Properly done, a circle of friends will keep you quite interested and motivated. This is why the &lt;em&gt;Super Smash Bros.&lt;&#x2f;em&gt; tournament scene continues to live. It&#x27;s hard to quit something when everyone you know does it.&lt;&#x2f;li&gt;
&lt;li&gt;Changing up the mediums you study. Do you usually watch foreign tv shows to study? Try reading a short book or a comic. This one is more for language learners.&lt;&#x2f;li&gt;
&lt;li&gt;Exploring different cultural things. My interest in Korean basically doubled when I started watching Korean TV shows like 아는 형님 and 런닝맨. Depending on the show you can learn a lot about the country&#x27;s culture and history.&lt;&#x2f;li&gt;
&lt;li&gt;Reflecting on your progress from say, a year ago. Look at your notes if possible, etc. This goes with what I said above about really putting things in perspective.&lt;&#x2f;li&gt;
&lt;li&gt;Attending a language exchange or going somewhere that forces you to use the language. Personally I find language exchanges slightly forced&#x2f;awkward sometimes, but they can be good too. When I visit Korea again, I&#x27;ll be attending 문화원s (cultural centers that offer classes on traditional Korean arts—in Korean only).&lt;&#x2f;li&gt;
&lt;li&gt;Teaching people who are less skilled than yourself. &lt;em&gt;You don&#x27;t have to be a master to be a teacher&lt;&#x2f;em&gt;. I personally believe teaching is one of the best ways of retaining information. Wait until you&#x27;re mid-intermediate&#x2f;advanced though, unless it&#x27;s very basic teaching. The last thing you want is to teach someone incorrect things.&lt;&#x2f;li&gt;
&lt;&#x2f;ul&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2f;h2&gt;
&lt;p&gt;These are some of the lessons I learned over time. When I moved back to the US, my motivation was killed for a while because I didn&#x27;t explore other avenues like tv shows. I did study, but maybe once a week. Which was useless. I began improving again when I properly sat down, figured out my goals, and began studying every. single. day.&lt;&#x2f;p&gt;
&lt;p&gt;All I can say is Keep on keepin&#x27; on. Be honest with yourself and make sure you really want it- then dedicate yourself. Figure out reasonable, attainable goals, not perfectionist ones. Learning anything well is &lt;em&gt;never&lt;&#x2f;em&gt; a sprint—it&#x27;s a marathon. Eventually you will be amazing at it, but only if you practice correctly and analyze yourself. Just showing up is not enough!!&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Selfhosting git with Gitea, Docker, Caddy</title>
                <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/selfhosting-git-with-gitea-docker-caddy/</link>
                <guid>andrewzah.com/posts/selfhosting-git-with-gitea-docker-caddy/</guid>
                <description>&lt;p&gt;Something I&#x27;ve been doing recently is starting to self-host as much as I can. I don&#x27;t like relying on businesses, since they can change their services on a whim. I host an &lt;a href=&quot;https:&#x2f;&#x2f;en.wikipedia.org&#x2f;wiki&#x2f;ZNC&quot;&gt;IRC network bouncer&lt;&#x2f;a&gt;, a &lt;a href=&quot;https:&#x2f;&#x2f;github.com&#x2f;miniflux&#x2f;miniflux&quot;&gt;feed reader&lt;&#x2f;a&gt;, and so on. But why not a git frontend?&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Making a Discord bot in Crystal: Part 0</title>
                <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/making-a-discord-bot-in-crystal-part-0/</link>
                <guid>andrewzah.com/posts/making-a-discord-bot-in-crystal-part-0/</guid>
                <description>&lt;p&gt;Today, let&#x27;s start with a simple goal: Get a bot up and running via a JSON configuration file, in Crystal, that responds to a &amp;quot;!ping&amp;quot; command.&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>Books for 2018</title>
                <pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/books-for-2018/</link>
                <guid>andrewzah.com/posts/books-for-2018/</guid>
                <description>&lt;p&gt;My biggest regret of 2017 was reading few books. I want to change that for 2018, so here&#x27;s a list of books that I am reading, or want to read—and why.&lt;&#x2f;p&gt;
</description>
            </item>
        
            <item>
                <title>A new year, a new site</title>
                <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/a-new-year-a-new-site/</link>
                <guid>andrewzah.com/posts/a-new-year-a-new-site/</guid>
                <description>&lt;p&gt;I&#x27;ve migrated my website. Again.&lt;&#x2f;p&gt;
</description>
            </item>
        
    </channel>
</rss>
