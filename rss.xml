<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>AZ</title>
        <link>andrewzah.com</link>
        <description>Sometimes relevant thoughts by Andrew</description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="andrewzah.com/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Sun, 22 Dec 2019 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>Hosting Minecraft Servers + BungeeCord with FreeNAS</title>
                <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/hosting-minecraft-servers-bungeecord-freenas/</link>
                <guid>andrewzah.com/posts/hosting-minecraft-servers-bungeecord-freenas/</guid>
                <description>&lt;p&gt;Learn how to set up multiple minecraft servers in FreeNAS with a bungeecord&#x2F;waterfall proxy.&lt;&#x2F;p&gt;
&lt;p&gt;This guide assumes you&#x27;re running a FreeNAS server on a local network. If not, you&#x27;ll have to update your ip address and default gateway settings accordingly.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;freenas_minecraft_guide&amp;#x2F;dynmap.png&quot; data-lity data-lity-desc=&quot;Dynmap rendering of our FreeNAS minecaft server&quot; alt=&quot;Dynmap rendering of our FreeNAS minecaft server&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;freenas_minecraft_guide&amp;#x2F;dynmap.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Dynmap rendering of our FreeNAS minecaft server &lt;&#x2F;p&gt;
&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Console access to a server running FreeNAS&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;(Don&#x27;t download these yet, read on)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Your server jarfile: &lt;a href=&quot;https:&#x2F;&#x2F;www.spigotmc.org&#x2F;wiki&#x2F;bungeecord&#x2F;&quot;&gt;spigot.jar&lt;&#x2F;a&gt;, or &lt;a href=&quot;https:&#x2F;&#x2F;papermc.io&#x2F;downloads#Paper-1.15&quot;&gt;paper.jar&lt;&#x2F;a&gt;, etc.&lt;&#x2F;li&gt;
&lt;li&gt;Your proxy jarfile: &lt;a href=&quot;https:&#x2F;&#x2F;www.spigotmc.org&#x2F;wiki&#x2F;bungeecord&#x2F;&quot;&gt;bungeecord.jar&lt;&#x2F;a&gt;, or &lt;a href=&quot;https:&#x2F;&#x2F;papermc.io&#x2F;downloads#Waterfall&quot;&gt;waterfall.jar&lt;&#x2F;a&gt;, etc.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This guide will be using &lt;code&gt;Paper&lt;&#x2F;code&gt; and &lt;code&gt;Waterfall&lt;&#x2F;code&gt; as they are more
performant versions of spigot and bungeecord, respectively. They also fully support spigot&#x2F;bungee plugins.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;preparing-the-jails&quot;&gt;Preparing the Jails&lt;&#x2F;h2&gt;
&lt;p&gt;The first thing we&#x27;ll need to do is create the main jail (the one running bungeecord or waterfall).
Alter the version for the current one your server is running.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;echo &amp;#39;{&amp;quot;pkgs&amp;quot;:[&amp;quot;openjdk12&amp;quot;, &amp;quot;curl&amp;quot;]}&amp;#39; &amp;gt; &#x2F;tmp&#x2F;minecraft.json
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When a jail is created, &lt;code&gt;pkg&lt;&#x2F;code&gt; isn&#x27;t installed by default. Using this saves us some commands in the next step.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;iocage create \
  --name &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;\
  --pkglist &#x2F;tmp&#x2F;minecraft.json
  --release 11.2-RELEASE \
  ip4_addr=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;vnet0|192.168.1.xxx&#x2F;24&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;\
  defaultrouter=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;192.168.1.1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;\
  vnet=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;on&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;\
  allow_raw_sockets=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;\
  boot=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;on&amp;quot; 
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;ip4_addr&lt;&#x2F;code&gt; and &lt;code&gt;defaultrouter&lt;&#x2F;code&gt; configure the network for our jail. If you&#x27;re running the server on your local network, then it&#x27;s likely the address of your router. (Typically x.x.x.1 or x.x.x.255, consult your router&#x27;s manual). &lt;code&gt;ip4_addr&lt;&#x2F;code&gt; is the address you want to assign to the jail.&lt;&#x2F;p&gt;
&lt;p&gt;For &lt;code&gt;name&lt;&#x2F;code&gt;: If you&#x27;re just creating a single server, the name &lt;code&gt;minecraft&lt;&#x2F;code&gt; would suffice, but I recommend a structure like:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;mc_main
mc_survival
mc_creative
...etc
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Next, let&#x27;s create directories in the jails and mount them in the root system:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# Creates the directories in the root system
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;mkdir -p &#x2F;xxx&#x2F;data&#x2F;minecraft&#x2F;mc_main
mkdir -p &#x2F;xxx&#x2F;data&#x2F;minecraft&#x2F;waterfall

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# Creates the directories in the jail
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;iocage exec mc_main mkdir &#x2F;root&#x2F;minecraft
iocage exec mc_main mkdir &#x2F;root&#x2F;waterfall

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# Mounts the directories in the root system
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;iocage fstab -a mc_main \
  &#x2F;xxx&#x2F;data&#x2F;minecraft&#x2F;mc_main &#x2F;root&#x2F;minecraft nullfs rw 0 0
iocage fstab -a mc_main \
  &#x2F;xxx&#x2F;data&#x2F;minecraft&#x2F;waterfall &#x2F;root&#x2F;waterfall nullfs rw 0 0
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Change &lt;code&gt;&#x2F;xxx&#x2F;data&#x2F;&lt;&#x2F;code&gt; to a relevant filepath for your setup. My main ZFS pool is named &lt;code&gt;lily&lt;&#x2F;code&gt;, so I put my minecraft folders under &lt;code&gt;&#x2F;mnt&#x2F;lily&#x2F;data&#x2F;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setting-up-minecraft&quot;&gt;Setting up Minecraft&lt;&#x2F;h2&gt;
&lt;p&gt;We can access our jails with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;iocage console mc_main
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now we can cd to the minecraft directory and download our server jarfile:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#62a35c;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; &#x2F;root&#x2F;minecraft

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# paper
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;curl -L &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;https:&#x2F;&#x2F;papermc.io&#x2F;api&#x2F;v1&#x2F;paper&#x2F;1.15.1&#x2F;27&#x2F;download&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; -o paper-1.15.1_27.jar
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Run your server jarfile with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;java -jar &#x2F;root&#x2F;minecraft&#x2F;paper-1.15.1_27.jar
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The process should end shortly, printing text about a &lt;code&gt;eula.txt&lt;&#x2F;code&gt;. Edit the file with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;sed -i .bak &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;s&#x2F;eula=false&#x2F;eula=true&#x2F;g&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; &#x2F;root&#x2F;minecraft&#x2F;eula.txt
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We also need to edit the &lt;code&gt;server.properties&lt;&#x2F;code&gt; file. Open it and change the server port to &lt;code&gt;25566&lt;&#x2F;code&gt;. We&#x27;re changing this value because our proxy server (bungeecord&#x2F;waterfall) will listen to the default port later.&lt;&#x2F;p&gt;
&lt;p&gt;Now we can run the server!&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;java -Xms1024M -Xmx1024M -jar &#x2F;root&#x2F;minecraft&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.jar
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Observe the text output for any errors, and then go ahead and connect to it! (Go to the &lt;code&gt;Multiplayer&lt;&#x2F;code&gt; tab, click &lt;code&gt;Add Server&lt;&#x2F;code&gt;, and type in the ip address of your server, e.g. &lt;code&gt;192.168.1.xx:25566&lt;&#x2F;code&gt;) Once you join, text should get printed to the screen.&lt;&#x2F;p&gt;
&lt;p&gt;However, we have an issue. The server is currently running in an interactive session (i.e. we ran it manually). We need it to run by itself, in a noninteractive session. Some guides will recommend using &lt;code&gt;screen&lt;&#x2F;code&gt; or &lt;code&gt;tmux&lt;&#x2F;code&gt;, but I strongly recommend not using them. If your server ever restarts, you will have to go in manually and restart screen&#x2F;tmux, and then your minecraft server.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s far better to let &lt;a href=&quot;https:&#x2F;&#x2F;www.freebsd.org&#x2F;cgi&#x2F;man.cgi?query=rc.d&amp;amp;sektion=8&amp;amp;n=1&quot;&gt;rc.d&lt;&#x2F;a&gt; manage it for us. Add this script to &lt;code&gt;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;minecraftd&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;#!&#x2F;bin&#x2F;sh
#
# PROVIDE: minecraftd
# REQUIRE: LOGIN DAEMON NETWORKING mountcritlocal
# KEYWORD: shutdown
#
# Use the following variables to configure the minecraft server. For example, to
# configure the ON&#x2F;OFF knob variable:
# sysrc minecraftd_enable=&amp;quot;YES&amp;quot;
#
# minecraftd_enable=&amp;quot;YES&amp;quot;
# minecraftd_user_dir=&amp;quot;&#x2F;root&#x2F;minecraft&amp;quot;
# minecraftd_jar_path=&amp;quot;&#x2F;root&#x2F;minecraft&#x2F;server.jar&amp;quot;
# minecraftd_java_opts=&amp;quot;-Xms1024M -Xmx1024M&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; &#x2F;etc&#x2F;rc.subr

name&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;minecraftd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;rcvar&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&#96;set_rcvar&#96;
pidfile&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&#x2F;var&#x2F;run&#x2F;minecraftd.pid

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;load_rc_config $name

start_cmd&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;}_start&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;stop_cmd&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;}_stop&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;status_cmd&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;}_status&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;${minecraftd_enable&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;NO&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;${minecraftd_user_dir&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;root&#x2F;minecraft&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;${minecraftd_jar_path&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;root&#x2F;minecraft&#x2F;server.jar&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;${minecraftd_java_opts&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;-Xms1024M -Xmx1024M&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;minecraftd_start&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;-e $pidfile &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;; then
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt; already running.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;Starting $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;...&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&#x2F;usr&#x2F;sbin&#x2F;daemon -f -p $pidfile \
            &#x2F;usr&#x2F;local&#x2F;bin&#x2F;java -Duser.dir=$minecraftd_user_dir \
            $minecraftd_java_opts \
            -jar $minecraftd_jar_path nogui
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt; started.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;minecraftd_stop&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;-e $pidfile &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;; then
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;Stopping $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;...&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;cat $pidfile &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;xargs kill
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;Stopped.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt; is not running.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;minecraftd_status&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;-e $pidfile &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;; then
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt; is running.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt; is not running.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

run_rc_command $1
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We have to make the service file executable, so run:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;chmod +x &#x2F;usr&#x2F;local&#x2F;etc&#x2F;rc.d&#x2F;minecraftd
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Essentially, this script lets us not have to manage the server process manually. However we also need to update some settings:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;sysrc minecraftd_enable=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;YES&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;sysrc minecraftd_jar_path=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;root&#x2F;minecraft&#x2F;server.jar&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;sysrc minecraftd_java_opts=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;-Xms1G -Xmx1G&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Make sure to change the &lt;code&gt;minecraftd_jar_path&lt;&#x2F;code&gt; to reflect your downloaded jarfile, and &lt;code&gt;minecraftd_java_opts&lt;&#x2F;code&gt; for how much memory you want to give it.&lt;&#x2F;p&gt;
&lt;p&gt;Now you should be able to the following:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;service minecraftd start
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Confirm it with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;ps aux &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;grep openjdk
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You should see something like:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;root  72816  1.2  2.5 3156872 1273052  -  IJ   Fri19   99:04.12 &#x2F;usr&#x2F;local&#x2F;openjdk12&#x2F;bin&#x2F;java -Duser.dir=&#x2F;root&#x2F;minecraft -Xms1G -Xmx1G -jar &#x2F;root&#x2F;minecraft&#x2F;paper-1.15.1_27.jar
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If not, double check your settings in &lt;code&gt;&#x2F;etc&#x2F;rc.conf&lt;&#x2F;code&gt;, and make sure they point to the right files. Manually run the command to make sure it&#x27;s not a minecraft configuration issue (i.e. no warnings&#x2F;errors show up in the console).&lt;&#x2F;p&gt;
&lt;p&gt;Connect to the server again to make sure it works, then stop the server with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;service minecraftd stop
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In order for bungee&#x2F;waterfall to work, we need to edit the &lt;code&gt;server.properties&lt;&#x2F;code&gt; file again. Change &lt;code&gt;online-mode&lt;&#x2F;code&gt; to &lt;code&gt;false&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;code&gt;spigot.yml&lt;&#x2F;code&gt;, update &lt;code&gt;bungeecord&lt;&#x2F;code&gt; to &lt;code&gt;true&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;code&gt;paper.yml&lt;&#x2F;code&gt;, update &lt;code&gt;bungee-online-mode&lt;&#x2F;code&gt; to &lt;code&gt;true&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;code&gt;bukkit.yml&lt;&#x2F;code&gt;, update &lt;code&gt;connection-throttle&lt;&#x2F;code&gt; to &lt;code&gt;-1&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s it! Now we just need to set up our proxy to get access to the server again.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setting-up-waterfall-bungeecord&quot;&gt;Setting up Waterfall&#x2F;Bungeecord&lt;&#x2F;h2&gt;
&lt;p&gt;If you&#x27;re not in the &lt;code&gt;mc_main&lt;&#x2F;code&gt; jail already, access it with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;iocage console mc_main
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now can cd to the waterfall directory and download &lt;code&gt;waterfall.jar&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#62a35c;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; &#x2F;root&#x2F;waterfall
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The process for the jarfile is the same as before, except we&#x27;re going to the &lt;code&gt;waterfall&lt;&#x2F;code&gt; directory now.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#62a35c;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; &#x2F;root&#x2F;waterfall

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# waterfall
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;curl -L &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;https:&#x2F;&#x2F;papermc.io&#x2F;api&#x2F;v1&#x2F;waterfall&#x2F;1.15&#x2F;309&#x2F;download&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; -o waterfall-1.15_309.jar
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Run the proxy jarfile with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;java -jar &#x2F;root&#x2F;waterfall&#x2F;waterfall-1.15_309.jar
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If necessary, edit &lt;code&gt;eula.txt&lt;&#x2F;code&gt; again:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;sed -i .bak &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;s&#x2F;eula=false&#x2F;eula=true&#x2F;g&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; &#x2F;root&#x2F;waterfall&#x2F;eula.txt
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now we need to edit &lt;code&gt;config.yml&lt;&#x2F;code&gt;. Look for the &lt;code&gt;servers&lt;&#x2F;code&gt; section, and change it to the following:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#63a35c;&quot;&gt;servers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;hub&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;motd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;&amp;amp;1My amazing hub server&amp;#39;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;localhost:25566
    restricted&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Under &lt;code&gt;listeners&lt;&#x2F;code&gt;, change &lt;code&gt;priorities&lt;&#x2F;code&gt; to:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#63a35c;&quot;&gt;priorities&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
  - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;hub
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Change &lt;code&gt;host&lt;&#x2F;code&gt; to:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;0.0.0.0:25565
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Finally, set &lt;code&gt;ip_forward: true&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In order to run &lt;code&gt;waterfall&lt;&#x2F;code&gt; noninteractively, we&#x27;ll use a similar &lt;code&gt;rc.d&lt;&#x2F;code&gt; script like before:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;#!&#x2F;bin&#x2F;sh
#
# PROVIDE: waterfall
# REQUIRE: LOGIN DAEMON NETWORKING mountcritlocal
# KEYWORD: shutdown
#
# Use the following variables to configure the minecraft server. For example, to
# configure the ON&#x2F;OFF knob variable:
# sysrc waterfall_enable=&amp;quot;YES&amp;quot;
#
# waterfall_enable=&amp;quot;YES&amp;quot;
# waterfall_user_dir=&amp;quot;&#x2F;root&#x2F;waterfall&amp;quot;
# waterfall_jar_path=&amp;quot;&#x2F;root&#x2F;waterfall&#x2F;waterfall.jar&amp;quot;
# waterfall_java_opts=&amp;quot;-Xms512M -Xmx1024M&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; &#x2F;etc&#x2F;rc.subr

name&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;waterfall
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;rcvar&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&#96;set_rcvar&#96;
pidfile&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&#x2F;var&#x2F;run&#x2F;waterfall.pid

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;load_rc_config $name

start_cmd&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;}_start&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;stop_cmd&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;}_stop&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;status_cmd&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;}_status&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;${waterfall_enable&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;NO&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;${waterfall_user_dir&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;root&#x2F;waterfall&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;${waterfall_jar_path&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;root&#x2F;waterfall&#x2F;waterfall.jar&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;${waterfall_java_opts&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;-Xms512M -Xmx1024M&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;waterfall_start&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;-e $pidfile &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;; then
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt; already running.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;Starting $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;...&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;cd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;$waterfall_user_dir
        &#x2F;usr&#x2F;sbin&#x2F;daemon -f -p $pidfile \
            &#x2F;usr&#x2F;local&#x2F;bin&#x2F;java -Duser.dir=$waterfall_user_dir \
            $waterfall_java_opts \
            -jar $waterfall_jar_path  nogui
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt; started.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;waterfall_stop&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;-e $pidfile &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;; then
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;Stopping $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;...&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;cat $pidfile &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;xargs kill
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;Stopped.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt; is not running.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;waterfall_status&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;-e $pidfile &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;; then
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt; is running.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt; is not running.&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

run_rc_command $1
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We have to make the service file executable again, so run:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;chmod +x &#x2F;usr&#x2F;local&#x2F;etc&#x2F;rc.d&#x2F;waterfall
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Like before, we&#x27;ll need to edit some settings:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;sysrc waterfall_enable=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;YES&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;sysrc waterfall_jar_path=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;root&#x2F;waterfall&#x2F;waterfall-1.15_309.jar&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now run the following and connect to your server!&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;service waterfall start
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Congrats, you&#x27;ve set up a minecraft server and a proxy server in FreeNAS!&lt;&#x2F;p&gt;
&lt;p&gt;For more servers, create more jails with the instructions from earlier, and follow the same server javafile setup. In &lt;code&gt;server.properties&lt;&#x2F;code&gt;, change &lt;code&gt;ip-address&lt;&#x2F;code&gt; to the address of the jail, and update waterfall&#x27;s config to something like below:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#63a35c;&quot;&gt;servers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;hub&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;motd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;My hub server&amp;#39;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;localhost:25566
    restricted&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;false
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;creative&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;motd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;My creative server&amp;#39;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;192.168.1.21:25566
    restricted&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;false
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;survival&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;motd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;My survival server&amp;#39;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;192.168.1.22:25566
    restricted&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;databases-for-plugins&quot;&gt;Databases for Plugins&lt;&#x2F;h2&gt;
&lt;p&gt;Many minecraft plugins can use mysql or postgres for storage. I highly recommend setting up mysql in a jail and connecting your plugins to it. Here&#x27;s how you can do it:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#62a35c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;{&amp;quot;pkgs&amp;quot;:[&amp;quot;mysql80-server&amp;quot;]}&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; &#x2F;tmp&#x2F;mysql.json
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;iocage create \
  --name mysql \
  --pkglist &#x2F;tmp&#x2F;minecraft.json
  --release 11.2-RELEASE
  ip4_addr&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;vnet0|192.168.1.xxx&#x2F;24&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;\
  defaultrouter&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;192.168.1.1&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;\
  vnet&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;on&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;\
  boot&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;on&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# Creates the directories in the root system
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;mkdir -p &#x2F;xxx&#x2F;configs&#x2F;mysql
mkdir -p &#x2F;xxx&#x2F;data&#x2F;mysql

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# Creates the directories in the jail
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;iocage exec mysql mkdir &#x2F;config
iocage exec mysql mkdir &#x2F;data

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# Mounts the directories in the root system
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;iocage fstab -a mysql \
  &#x2F;xxx&#x2F;configs&#x2F;mysql &#x2F;config nullfs rw 0 0
iocage fstab -a mysql \
  &#x2F;xxx&#x2F;data&#x2F;mysql &#x2F;data nullfs rw 0 0
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;iocage console mysql
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;sysrc mysql_enable=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;YES&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;sysrc mysql_dbdir=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;data&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;sysrc mysql_confdir=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;config&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;sysrc mysql_optfile=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;config&#x2F;my.cnf&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;cp &#x2F;usr&#x2F;local&#x2F;etc&#x2F;mysql&#x2F;my.cnf &#x2F;config&#x2F;my.cnf
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now edit &lt;code&gt;&#x2F;config&#x2F;my.cnf&lt;&#x2F;code&gt; and change &lt;code&gt;bind-address&lt;&#x2F;code&gt; to &lt;code&gt;0.0.0.0&lt;&#x2F;code&gt;. This lets us connect remotely, except for &lt;code&gt;root&lt;&#x2F;code&gt;. We don&#x27;t want to run things as root, anyway.&lt;&#x2F;p&gt;
&lt;p&gt;Connect to the local mysql database after creating the root user and password:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;service mysql-server start
mysql_secure_installation
mysql -uroot -p
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Once connected, create the database and user that the plugin will be using. For example, if we were making a database for &lt;code&gt;coreprotect&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;create database coreprotect_hub&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;CREATE USER &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;coreprotect&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;192.168.1.0&#x2F;255.255.255.0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; IDENTIFIED WITH mysql_native_password BY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;password&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;grant all privileges on coreprotect_hub.&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; to &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;coreprotect&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;192.168.1.0&#x2F;255.255.255.0&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The reason we&#x27;re using &lt;code&gt;@&#x27;192.168.1.0&#x2F;255.255.255.0&#x27;&lt;&#x2F;code&gt; is to allow remote connections, but only within the local network.&lt;&#x2F;p&gt;
&lt;p&gt;Now update your plugin&#x27;s &lt;code&gt;config.yml&lt;&#x2F;code&gt;, where &lt;code&gt;host&lt;&#x2F;code&gt; is the ip address of the mysql jail, and &lt;code&gt;port&lt;&#x2F;code&gt; is &lt;code&gt;3306&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a good idea to create a separate database and user for each plugin and server. For example, I have the databases &lt;code&gt;coreprotect_survival&lt;&#x2F;code&gt;, and &lt;code&gt;coreprotect_creative&lt;&#x2F;code&gt;, both of which have different users.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Building a Home Server with FreeNAS</title>
                <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/building-home-server-freenas/</link>
                <guid>andrewzah.com/posts/building-home-server-freenas/</guid>
                <description>&lt;p&gt;A few months ago I got gripped with server fever. I&#x27;d had a raspberry pi for a while, but I could never find a meaningful use for it. I&#x27;d tried running plex, etc, but the pi3 would choke after a bit and sputter out.&lt;&#x2F;p&gt;
&lt;p&gt;One day I decided enough was enough: it was time to build a more beefy server. (and I found a compelling use for the pi!)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;freenas-info.png&quot; data-lity data-lity-desc=&quot;FreeNAS server information&quot; alt=&quot;FreeNAS server information&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;freenas-info.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Current FreeNAS server information &lt;&#x2F;p&gt;
&lt;h3 id=&quot;my-goals&quot;&gt;My Goals&lt;&#x2F;h3&gt;
&lt;p&gt;I had a few goals I wanted to achieve:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;be relatively future-proof&lt;&#x2F;li&gt;
&lt;li&gt;host a plex server&lt;&#x2F;li&gt;
&lt;li&gt;be able to spin up multiple VMs for various reasons like testing ansible scripts&lt;&#x2F;li&gt;
&lt;li&gt;potentially host games for me and my brother&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;If all you want to do is host Plex&#x2F;jellyfish, a raspberry pi should suffice. As long as your media isn&#x27;t hvec x265. Before I built this server I had two 2tb drives plugged into my raspberry pi, and other content was fine for the most part.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-requirements&quot;&gt;The Requirements&lt;&#x2F;h3&gt;
&lt;p&gt;I don&#x27;t have space in my home for a rack for a server, due to both the size and noise. That immediately eliminated a lot of build paths that I saw.&lt;&#x2F;p&gt;
&lt;p&gt;The ideal spot for the server was my living room, so I needed a relatively low profile server- and a &lt;em&gt;quiet&lt;&#x2F;em&gt; one.&lt;&#x2F;p&gt;
&lt;p&gt;The remaining requirements were:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;at least 8 hard drive bays&lt;&#x2F;li&gt;
&lt;li&gt;a relatively modern&#x2F;beefy cpu&lt;&#x2F;li&gt;
&lt;li&gt;low(er) power consumption&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I felt like 8 drives (+1 or 2 ssds) was enough for future expansion, even with RAID-10 taken into account.
I went with a mirrored structure so I could replace drives without heavy rebuild times, and so I could easily expand the pool if necessary.
I started with 6 drives, so I have a zpool with 3 vdevs of 2 drives each.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;part-list&quot;&gt;Part List&lt;&#x2F;h3&gt;
&lt;p&gt;What I thought was going to be a relatively simple task turned into a huge amount of research...
I spent most of my time on &lt;a href=&quot;https:&#x2F;&#x2F;www.ixsystems.com&#x2F;community&#x2F;&quot;&gt;iXsystems&#x27; community forum&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;homelab&#x2F;&quot;&gt;&#x2F;r&#x2F;homelab&lt;&#x2F;a&gt; on reddit. The people on iXsystems&#x27; forum were very helpful and detailed. However, most of the information for iXsystems is based around used intel boards. Much less material is available if you&#x27;re like me and are interested in newer AMD cpus.&lt;&#x2F;p&gt;
&lt;p&gt;So how did I narrow it down? I did what I always do: make a spreadsheet. There are simply way too many options presented to figure what cpu&#x2F;mobo to choose without spreadsheet analysis. Without further ado:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;case: &lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;spreadsheets&#x2F;d&#x2F;1pThQQLHIcB_LO6-PmypGOSeaErY_ip6FY2lmbkS0DYc&#x2F;Fractal%20Design%20Node%20804%20Black%20Window%20Aluminum&#x2F;Steel%20MATX&quot;&gt;Fractal Node 804 Micro Atx Case&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;boot ssd (nvme): &lt;a href=&quot;https:&#x2F;&#x2F;www.newegg.com&#x2F;western-digital-black-nvme-250gb&#x2F;p&#x2F;N82E16820250097&quot;&gt;WD Black NVMe M.2 2280 250Gb PCI-Express 3.0 x4 SSD WDS250G2X0C&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;ssd: &lt;a href=&quot;https:&#x2F;&#x2F;www.newegg.com&#x2F;apc-bx1500m-5-x-nema-5-15r-5-x-nema-5-15r&#x2F;p&#x2F;N82E16842301561?Description=APC%20BX1500M%20Back-UPS%20Pro%201500VA%2f900W&amp;amp;cm_re=APC_BX1500M_Back-UPS_Pro_1500VA%2f900W-_-42-301-561-_-Product&quot;&gt;SAMSUNG 860 EVO Series 2.5&amp;quot; 500GB MZ-76E500B&#x2F;AM&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;intake fans x4: &lt;a href=&quot;https:&#x2F;&#x2F;smile.amazon.com&#x2F;dp&#x2F;B00650P2ZC&#x2F;?tag=ozlp-20&quot;&gt;Noctua NF-F12 WPM 120mm&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;exhaust fans x2: &lt;a href=&quot;https:&#x2F;&#x2F;smile.amazon.com&#x2F;dp&#x2F;B00CP6QLY6&#x2F;?tag=ozlp-20&quot;&gt;Noctua NF-A14 PWM 140mm&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;cpu cooler: &lt;a href=&quot;https:&#x2F;&#x2F;smile.amazon.com&#x2F;Noctua-NH-L12S-Low-Profile-Cooler-Quiet&#x2F;dp&#x2F;B075SF5QQ8&#x2F;ref=sr_1_2?keywords=NH-L12S&amp;amp;qid=1565553407&amp;amp;s=gateway&amp;amp;sr=8-2&quot;&gt;Noctua NH-L12S 70mm Low-Profile CPU Cooler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;ups&#x2F;apc: &lt;a href=&quot;andrewzah.com&#x2F;posts&#x2F;building-home-server-freenas&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.newegg.com&#x2F;apc-bx1500m-5-x-nema-5-15r-5-x-nema-5-15r&#x2F;p&#x2F;N82E16842301561?Description=APC%20BX1500M%20Back-UPS%20Pro%201500VA%2f900W&amp;amp;cm_re=APC_BX1500M_Back-UPS_Pro_1500VA%2f900W-&lt;em&gt;-42-301-561-&lt;&#x2F;em&gt;-Product&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;psu: &lt;a href=&quot;https:&#x2F;&#x2F;www.newegg.com&#x2F;seasonic-focus-plus-650-gold-ssr-650fx-650w&#x2F;p&#x2F;N82E16817151186&quot;&gt;Seasonic FOCUS Plus Series SSR-650FX 650W&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The total comes out to around $632. I don&#x27;t know why anyone would build a server without getting some sort of UPS&#x2F;APC as well.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;ul&gt;
&lt;li&gt;cpu: &lt;a href=&quot;https:&#x2F;&#x2F;www.newegg.com&#x2F;amd-ryzen-5-3600&#x2F;p&#x2F;N82E16819113569?Description=5%203600%20amd&amp;amp;cm_re=5_3600_amd-_-19-113-569-_-Product&quot;&gt;AMD Ryzen 5 3600 - 3.6Ghz&#x2F;4.2Ghz 6-core&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;mobo: &lt;a href=&quot;https:&#x2F;&#x2F;www.newegg.com&#x2F;p&#x2F;N82E16813157887?Description=asrock%20x570m%20&amp;amp;cm_re=asrock_x570m-_-13-157-887-_-Product&quot;&gt;ASRock X570M Pro4 AM4 MicroAtx&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;ram x3: &lt;a href=&quot;https:&#x2F;&#x2F;smile.amazon.com&#x2F;Crucial-DDR4-21300-Server-Memory-CT16G4WFD8266&#x2F;dp&#x2F;B078N7HC6L&quot;&gt;Crucial 16GB DDR4-2666 ECC UDIMM CT16G4WFD8266&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The total was $676 for these parts, with $291 for the memory alone. DDR4 ram with ecc isn&#x27;t cheap. For comparison, a Xeon E5-2650 V2 goes for around $70 on ebay, with significantly cheaper DDR3 ram.&lt;&#x2F;p&gt;
&lt;div class=&quot;note note-Note&quot;&gt;
  &lt;h4&gt;Note&lt;&#x2F;h4&gt;
  &lt;span&gt;I&amp;#x27;ve used the ryzen setup for 3+ months now with no issues.&lt;&#x2F;span&gt;
&lt;&#x2F;div&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;So I was already at $1,300, &lt;em&gt;before&lt;&#x2F;em&gt; purchasing hard drives. I bought 6 Western Digital Red 4TB drives initially, @ $100. Later on I got 2 more drives, and another stick of ram.&lt;&#x2F;p&gt;
&lt;p&gt;Altogether, it was $1300 for the parts + $800 for the drives, or ~$2100 in total.&lt;&#x2F;p&gt;
&lt;p&gt;I didn&#x27;t go with a used intel board because of the higher power usage and less powerful specs. This made my build much more expensive, but also more future proof.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;&#x2F;h3&gt;
&lt;p&gt;I adapted my jail setup and structure from &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;mow4cash&#x2F;e2fd4991bd2b787ca407a355d134b0ff&quot;&gt;this gist&lt;&#x2F;a&gt;, and installed rancheros via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;redshift-s&#x2F;rancheros-docker-media&quot;&gt;this guide&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I currently have 20 &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;FreeBSD_jail&quot;&gt;jails&lt;&#x2F;a&gt; running, and 5 docker containers running in &lt;a href=&quot;https:&#x2F;&#x2F;rancher.com&#x2F;rancher-os&#x2F;&quot;&gt;RancherOS&lt;&#x2F;a&gt; (which &lt;a href=&quot;https:&#x2F;&#x2F;www.ixsystems.com&#x2F;documentation&#x2F;freenas&#x2F;11.2-U7&#x2F;virtualmachines.html&quot;&gt;runs in a VM&lt;&#x2F;a&gt; with 2 cpus and 4GB memory).&lt;&#x2F;p&gt;
&lt;p&gt;Why jails over docker? Convenience, I guess. It&#x27;s far easier for me to muck around in iocage jails than it is to inspect and debug docker containers. Unfortunately this does mean if I lose my server, I&#x27;d have to recreate all those jails... but setting them up in the first place was pretty easy once I learned how &lt;a href=&quot;https:&#x2F;&#x2F;www.freebsd.org&#x2F;cgi&#x2F;man.cgi?query=rc.d&amp;amp;sektion=8&amp;amp;n=1&quot;&gt;rc.d&lt;&#x2F;a&gt; worked.&lt;&#x2F;p&gt;
&lt;p&gt;Services that I run:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;backblaze
  -&amp;gt; data backup
bazarr
  -&amp;gt; grabs subtitles in multiple languages, hooks into radarr&#x2F;sonarr
caddy
  -&amp;gt; reverse proxy to some of these services
calendar
  -&amp;gt; radicale
kitana
  -&amp;gt; ui for plex plugins
mailbackup
  -&amp;gt; offlineimap + cron
node_exporter
  -&amp;gt; feeds into prometheus on the raspberry pi
paperless
  -&amp;gt; digital document store
plex
  -&amp;gt; media catalogue + streaming
radarr
  -&amp;gt; monitors local shows for for bazarr subtitle grabbing
sonarr
  -&amp;gt; monitors local movies for for bazarr subtitle grabbing
syncthing
  -&amp;gt; seamlessly sync files between computers
thelounge
  -&amp;gt; modern irc client. I used to use znc+weechat, but I got
     tired of weechat&amp;#39;s ux. thelounge is simple and pretty.
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;postgres
mysql
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Several services use databases, so I elected to set aside jails for them.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;mc_main
mc_creative
mc_survival
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also run 3 instances of minecraft via &lt;a href=&quot;https:&#x2F;&#x2F;papermc.io&#x2F;&quot;&gt;PaperMC&lt;&#x2F;a&gt;, a high performance fork of &lt;a href=&quot;https:&#x2F;&#x2F;www.spigotmc.org&#x2F;&quot;&gt;Spigot&lt;&#x2F;a&gt;. The main jail runs &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PaperMC&#x2F;Waterfall&quot;&gt;Waterfall&lt;&#x2F;a&gt;
(a fork of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SpigotMC&#x2F;BungeeCord&quot;&gt;bungeecord&lt;&#x2F;a&gt;) along with a hub instance.
Waterfall acts as a proxy and lets one access multiple servers within a network.&lt;&#x2F;p&gt;
&lt;p&gt;My docker services:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;andrewzah&#x2F;gollum
  -&amp;gt; a wiki with changes automatically git pushed
  -&amp;gt; a fork of gollum with user logins
insekticid&#x2F;docker-piwiki (matomo)
  -&amp;gt; self-hosted analytics (tracking andrewzah.com)
  -&amp;gt; respects requests to not track user
radhifadlillah&#x2F;shiori
  -&amp;gt; self-hosted website backup, similar to archive.web
huginn&#x2F;huginn
  -&amp;gt; self-hosted, more powerful version of IFTTT
cwspear&#x2F;docker-local-persist-volume-plugin
  -&amp;gt; allows local volume mounts in portainer&#x2F;rancheros
portainer&#x2F;portainer
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;freenas-memory.png&quot; data-lity data-lity-desc=&quot;FreeNAS memory graph&quot; alt=&quot;FreeNAS memory graph&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;freenas-memory.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Current FreeNAS memory graph &lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-use-for-the-raspberry-pi&quot;&gt;A Use for the Raspberry Pi&lt;&#x2F;h3&gt;
&lt;p&gt;Once I built the server, I had no use for my raspberry pi3 and 4. Until I learned about &lt;a href=&quot;https:&#x2F;&#x2F;prometheus.io&#x2F;&quot;&gt;prometheus&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;grafana.com&#x2F;&quot;&gt;grafana&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Having metrics and a dashboard is awesome, but if my server crashes, I no longer have access to the metrics... So they have to be run somewhere else! This is where the raspberry pi comes in- it just sits on my local network ingesting traffic.&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately, node_exporter doesn&#x27;t seem to export hdd temperature values, which is pretty important. I&#x27;ll probably have to write a simple script to pull those values and host another metrics target for prometheus.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;grafana-node-exporter.png&quot; data-lity data-lity-desc=&quot;Grafana with node_exporter metrics from FreeNAS&quot; alt=&quot;Grafana with node_exporter metrics from FreeNAS&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;serverbuild-freenas&amp;#x2F;grafana-node-exporter.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Grafana with node_exporter metrics from FreeNAS &lt;&#x2F;p&gt;
&lt;h4 id=&quot;why-freenas&quot;&gt;Why FreeNAS?&lt;&#x2F;h4&gt;
&lt;p&gt;FreeNAS has extensive documentation. and *BSDs are nice. ZFS and RAID are nice. Free Software is nice. &lt;&#x2F;p&gt;
&lt;p&gt;If I didn&#x27;t use docker so heavily I would likely use FreeBSD or OpenBSD for my personal computers as well instead of Debian.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Overall the process of building a server was pretty fun, but I&#x27;m glad I&#x27;m done with that for the foreseeable future. I didn&#x27;t self-host that much when I began, but once I started adding services I started thinking about everything I could self host.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Projects</title>
                <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/projects/</link>
                <guid>andrewzah.com/projects/</guid>
                <description>&lt;p&gt;These are various projects I&#x27;ve worked on over the years. I hope they may be of some use to you. If you&#x27;d like to contribute to any, feel free! I generally use the GPLv3 license, or MIT otherwise.&lt;&#x2F;p&gt;
&lt;p&gt;As of late the bulk of my development has been on private repos for work, unfortunately.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;git-repo-stores&quot;&gt;Git Repo Stores&lt;&#x2F;h2&gt;
&lt;p&gt;In preferred order. I use github when I have no other option and for mirrors.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&quot;&gt;git.sr.ht&#x2F;~andrewzah&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;azah&quot;&gt;github.com&#x2F;azah&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.andrewzah.com&#x2F;andrei&quot;&gt;git.andrewzah.com&#x2F;andrei&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;in-progress&quot;&gt;In Progress&lt;&#x2F;h2&gt;
&lt;p&gt;These are things I&#x27;m actively working on and&#x2F;or messing around with.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h4 id=&quot;apps-andrei-kr-rust-wasm-react&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;apps.andrei.kr&quot;&gt;apps.andrei.kr&lt;&#x2F;a&gt; – rust&#x2F;wasm&#x2F;react&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Frontend for &lt;code&gt;korean_numbers&lt;&#x2F;code&gt; and other learning tools.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;rooibos-python3-flask&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;rooibos&quot;&gt;rooibos&lt;&#x2F;a&gt; – python3&#x2F;flask&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;File uploading done right.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;actively-maintained&quot;&gt;Actively Maintained&lt;&#x2F;h2&gt;
&lt;hr &#x2F;&gt;
&lt;h4 id=&quot;korean-numbers-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;korean_numbers&quot;&gt;korean_numbers&lt;&#x2F;a&gt; – rust&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Converts integers and floats to Hangeul. Supports both number systems.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;danmuji-golang&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;danmuji&quot;&gt;danmuji&lt;&#x2F;a&gt; – golang&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Discord bot written using Golang.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;personal-site-zola&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;personal-site&quot;&gt;personal_site&lt;&#x2F;a&gt; – zola&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;This website. Statically generated using zola and tera templating.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;personal-docker-shell-docker&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;andrewzah.com&quot;&gt;personal_docker&lt;&#x2F;a&gt; – shell&#x2F;docker&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Docker setup for fast deployments on VPSs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;inactive&quot;&gt;Inactive&lt;&#x2F;h2&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;rust&quot;&gt;Rust&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;naveraudio-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;naver_audio&quot;&gt;naveraudio&lt;&#x2F;a&gt; – rust&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Downloads sound files for Korean words via NAVER&#x27;s (undocumented) api.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;crystal&quot;&gt;Crystal&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;amaranth-cr&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;azah&#x2F;amaranth&quot;&gt;amaranth-cr&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Discord bot based on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;meewo&#x2F;discordcr&quot;&gt;discordcr&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Wrote a lexer&#x2F;parser to allow custom, recursive commands.&lt;&#x2F;li&gt;
&lt;li&gt;Wrote a command and plugin framework to allow custom functionality.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;dotacr&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.andrewzah.com&#x2F;andrei&#x2F;dotacr&quot;&gt;dotacr&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Wrote a wrapper for Valve&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;dev.dota2.com&#x2F;showthread.php?t=58317&quot;&gt;DotA 2 api&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;cowapi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;azah&#x2F;cowapi&quot;&gt;cOWAPI&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Wrote a Crystal&#x2F;Kemal version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SunDwarf&#x2F;OWAPI&quot;&gt;OWAPI&lt;&#x2F;a&gt;, that scrapes and parses Overwatch gameplay stats from Blizzard.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;minifluxcr&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;azah&#x2F;miniflux-cr&quot;&gt;Minifluxcr&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Wrote a wrapper for Miniflux&#x27;s api.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;tree-problem&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;azah&#x2F;tree-problem&quot;&gt;tree-problem&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Solved an interview problem for CancerIQ. They wasted my time, so I made my solution public.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;elm&quot;&gt;Elm&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;amaranth-frontend&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;azah&#x2F;amaranth-frontend&quot;&gt;amaranth-frontend&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Elm frontend for amaranth-bot that dynamically lists commands and info.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;python-3&quot;&gt;Python 3&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;owapi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Fuyukai&#x2F;OWAPI&quot;&gt;OWAPI&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Contributed to v2 and v3 of Laura&#x27;s overwatch stats api.&lt;&#x2F;li&gt;
&lt;li&gt;Learned about xml scraping and parsing, and API design.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;not-programming-related&quot;&gt;Not Programming Related&lt;&#x2F;h2&gt;
&lt;hr &#x2F;&gt;
&lt;h4 id=&quot;dotfiles&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.andrewzah.com&#x2F;andrei&#x2F;dotfiles&quot;&gt;dotfiles&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;a dotfile a day keeps productivity at bay.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;az-quotes&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.andrewzah.com&#x2F;andrei&#x2F;quotes&quot;&gt;az-quotes&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;A json file of quotes that I like, as seen on my &lt;a href=&quot;&#x2F;quotes&quot;&gt;quotes page&lt;&#x2F;a&gt;. Source for the random quote at the end of my posts.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;tf2config&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.andrewzah.com&#x2F;andrei&#x2F;tf2-config&quot;&gt;tf2config&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;tf2 config based on master comfig.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;korean-articles-pandoc&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.andrewzah.com&#x2F;andrei&#x2F;korean-articles&quot;&gt;korean_articles&lt;&#x2F;a&gt; – pandoc&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Created a makefile to easily copy&#x2F;paste Korean articles and render them as PDFs for printing.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
            </item>
        
            <item>
                <title>My setup for remote programming on OSX in 2019</title>
                <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/my-setup-remote-programming-osx-2019/</link>
                <guid>andrewzah.com/posts/my-setup-remote-programming-osx-2019/</guid>
                <description>&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;wework-gangnam.jpg&quot; data-lity data-lity-desc=&quot;Working remotely at WeWork in Gangnam Seoul&quot; alt=&quot;Working remotely at WeWork in Gangnam Seoul&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;wework-gangnam.jpg&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Working remotely at WeWork, 강남, 서울 (Gangnam, Seoul) &lt;&#x2F;p&gt;
&lt;p&gt;Hi! My name is Andrew, and I work remotely as a software developer. I&#x27;ve worked while traveling across America with spotty or no internet connection. I&#x27;ve worked in countries like South Korea and Japan. I like traveling, and this is how I stay productive.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;development-machine&quot;&gt;Development Machine&lt;&#x2F;h2&gt;
&lt;p&gt;Before we begin, why apple and osx?&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;battery life&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;battery life&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;li&gt;weight&lt;&#x2F;li&gt;
&lt;li&gt;unix-like environment&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;and to an extent, some proprietary or osx-only apps: photoshop, premiere, affinity designer, and sketch.&lt;&#x2F;p&gt;
&lt;p&gt;Before you scoff, I used freebsd and arch on my home pc as daily drivers. I used a modded thinkpad t430 for a few months as well.&lt;a id=&quot;footnote-cite-0&quot; href=&quot;#footnote-0&quot;&gt;(0)&lt;&#x2F;a&gt; I put in an i7-3632QM (quadcore) chip, a quieter heatsink, 2x8gb memory, a t420 old-style keyboard, and a 9 cell battery.&lt;&#x2F;p&gt;
&lt;p&gt;It was sweet... before I started lugging it around.&lt;&#x2F;p&gt;
&lt;p&gt;Weight-wise it was slightly heavier than my 15&amp;quot; macbook (~4.5lbs?), and the battery life made it unusable. I was getting 4-5 hours, max, and occasionally it would just die earlier than expected. (Forcing me to go reset the system time in BIOS).&lt;&#x2F;p&gt;
&lt;p&gt;I was always worried about my power source. I &lt;a href=&quot;&#x2F;posts&#x2F;living-out-of-two-backpacks-a-six-month-retrospective&#x2F;&quot;&gt;have lived out of two backpacks&lt;&#x2F;a&gt; and worked remotely while traveling, so I can&#x27;t rely on always being next to an outlet.  My 2015 13&amp;quot; macbook pro&#x27;s battery is still good to the point that I can get 6-7 hours out of it while working with Rust&#x2F;C#. It&#x27;s more like 8-9 if I&#x27;m only doing light writing, etc. &lt;&#x2F;p&gt;
&lt;p&gt;I know someone&#x27;s going to respond with &amp;quot;but oh, you should&#x27;ve just used power++ with x, y, z configurations!&amp;quot;. I &lt;em&gt;did&lt;&#x2F;em&gt; experiment with different settings with power++ and other alternative tools–nothing seemed to help. Call me a grumpy old man but I want to work and get things done... not fiddle about with battery tuning settings and the like.&lt;&#x2F;p&gt;
&lt;p&gt;Eventually I&#x27;ll need to replace this mac. All post-2015 macbooks have been undesirable to me so I&#x27;ll probably go with a dell xps 13&amp;quot;, or maybe a System76 Galago. I just want a durable machine with an excellent battery that&#x27;ll work years later and won&#x27;t have me configuring things constantly. Is that too much to ask?&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;At home I do have an x201 and x220 thinkpad however. They&#x27;re great for testing different operating systems, etc. I just don&#x27;t like traveling with them. The x201 is quite small so hopefully it&#x27;ll become my main writing machine.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;configuring-osx-tools&quot;&gt;Configuring OSX &amp;amp; Tools&lt;&#x2F;h2&gt;
&lt;p&gt;The first thing I always do is install xcode-tools, iTerm2, brew, and zsh. Then I clone the osx branch of my &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;dotfiles&#x2F;tree&quot;&gt;dotfiles repo&lt;&#x2F;a&gt; and symlink the files where they need to be. I should automate this part with a script, but making that script would take me far more more time than just doing it manually. Not worth it, for now at least.&lt;&#x2F;p&gt;
&lt;p&gt;You can use &lt;code&gt;brew leaves&lt;&#x2F;code&gt; to see installed items and &lt;code&gt;brew cask list&lt;&#x2F;code&gt; for cask items. I &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;dotfiles&#x2F;tree&#x2F;osx&#x2F;brew-leaves&quot;&gt;stored&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;dotfiles&#x2F;tree&#x2F;osx&#x2F;cask-list&quot;&gt;mine&lt;&#x2F;a&gt; when I originally started abstracting out my dotfiles.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;poor-man-s-window-tiling&quot;&gt;poor man&#x27;s window tiling&lt;&#x2F;h3&gt;
&lt;p&gt;After using i3 I can&#x27;t go back to non-tiling window managers. I long for the day that i3 works natively on osx. Sigh.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve somewhat replicated it with &lt;a href=&quot;https:&#x2F;&#x2F;koekeishiya.github.io&#x2F;chunkwm&#x2F;&quot;&gt;chunkwm&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koekeishiya&#x2F;skhd&quot;&gt;skhd&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tekezo&#x2F;Karabiner&quot;&gt;karabiner&lt;&#x2F;a&gt;. Chunkwm is a tiling window manager, but it doesn&#x27;t handle keyboard input. That&#x27;s where skhd comes in. I copy&#x2F;pasted to my &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;dotfiles&#x2F;tree&#x2F;osx&#x2F;.khdrc&quot;&gt;khdrc&lt;&#x2F;a&gt; but to be honest I don&#x27;t use most of these hotkeys still.&lt;&#x2F;p&gt;
&lt;p&gt;Then, I use karabiner to make my right command key into a hyper key– it presses shift, command, control, and option.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;cons&quot;&gt;cons&lt;&#x2F;h4&gt;
&lt;p&gt;Some applications have minimum window sizes. So if I have too many windows in one workspace, they will just overlap. Spotify and KakaoTalk are example offenders.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;overlap.png&quot; data-lity data-lity-desc=&quot;An example image showing how Kakaotalk does not layout correctly when I have a terminal kakaotalk and two chat windows open&quot; alt=&quot;An example image showing how Kakaotalk does not layout correctly when I have a terminal kakaotalk and two chat windows open&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;overlap.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Notice the overlaps in bottom left and bottom middle. &lt;&#x2F;p&gt;
&lt;h3 id=&quot;poor-man-s-workspaces&quot;&gt;poor man&#x27;s workspaces&lt;&#x2F;h3&gt;
&lt;p&gt;I use 10 Spaces. I added shortcuts to quickly focus them: hyper + 1-5, w-y.&lt;&#x2F;p&gt;
&lt;p&gt;I disable &amp;quot;Automatically rearrange Spaces based on most recent use&amp;quot;, in Settings -&amp;gt; Mission Control. This has got to be one of the worst defaults ever made.&lt;&#x2F;p&gt;
&lt;p&gt;My workspaces generally follow this order:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;terminal (currently iterm2)&lt;&#x2F;li&gt;
&lt;li&gt;browser (firefox)&lt;&#x2F;li&gt;
&lt;li&gt;misc &#x2F; Rider &#x2F; Safari&lt;&#x2F;li&gt;
&lt;li&gt;misc&lt;&#x2F;li&gt;
&lt;li&gt;misc&lt;&#x2F;li&gt;
&lt;li&gt;[w] misc &#x2F; desktop &#x2F; vlc &#x2F; signal&lt;&#x2F;li&gt;
&lt;li&gt;[e] misc &#x2F; discord&lt;&#x2F;li&gt;
&lt;li&gt;[r] kakaotalk, messages app&lt;&#x2F;li&gt;
&lt;li&gt;[t] anki&lt;&#x2F;li&gt;
&lt;li&gt;[y] thunderbird&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Something about the Catalina update broke &lt;code&gt;hyper + q&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;apps&quot;&gt;apps&lt;&#x2F;h3&gt;
&lt;p&gt;I almost always have iterm2, firefox, kakaotalk, anki, and thunderbird running.&lt;&#x2F;p&gt;
&lt;p&gt;Misc tools I generally use:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;DB Browser for SQLite&lt;&#x2F;li&gt;
&lt;li&gt;Insomnia (REST api testing)&lt;&#x2F;li&gt;
&lt;li&gt;Azure Data Studio (ms-sql querying)&lt;&#x2F;li&gt;
&lt;li&gt;Datagrip (reading stored procedures &#x2F; db schemas)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Task bar apps:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Harvest (time tracking)&lt;&#x2F;li&gt;
&lt;li&gt;Duet (use my ipad as an extra display)*&lt;&#x2F;li&gt;
&lt;li&gt;Caffeine (prevent my computer from sleeping)&lt;&#x2F;li&gt;
&lt;li&gt;SnapScan client (for my &lt;a href=&quot;https:&#x2F;&#x2F;www.fujitsu.com&#x2F;global&#x2F;products&#x2F;computing&#x2F;peripheral&#x2F;scanners&#x2F;scansnap&#x2F;ix500&#x2F;&quot;&gt;Fujitsu ix500 scanner&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And non programming-related ones:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Discord (messaging, language study, rss)&lt;&#x2F;li&gt;
&lt;li&gt;KakaoTalk (messaging)&lt;&#x2F;li&gt;
&lt;li&gt;Line (messaging)&lt;&#x2F;li&gt;
&lt;li&gt;Signal (messaging)&lt;&#x2F;li&gt;
&lt;li&gt;Anki (flash card study)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;code-editor&quot;&gt;code editor&lt;&#x2F;h3&gt;
&lt;p&gt;For non-C# code, I use neovim, vim, or vi, in that order. I don&#x27;t really care what you use. I like (neo)vim, so I use that. I just become disappointed when people reflexively dismiss it (or Emacs) because they have any learning curve, like at all. There&#x27;s a &lt;em&gt;reason&lt;&#x2F;em&gt; why vim has one, and it&#x27;s not because Bram Moolenaar is particularly masochistic. In particular, modal editing and buffers&lt;a id=&quot;refer-0&quot; href=&quot;#reference-0&quot;&gt;(0)&lt;&#x2F;a&gt; are why I enjoy vim.&lt;&#x2F;p&gt;
&lt;p&gt;Even if you don&#x27;t use vim, I urge you to read the manuals of the software that you do use. Small tidbits of knowledge add up over time, especially with common repetitive actions.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s also good to know a little &lt;code&gt;vi&lt;&#x2F;code&gt; when you mess up your FreeBSD installation and have to dip into an emergency shell. Will &lt;code&gt;nano&lt;&#x2F;code&gt; be accessible then?&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Modern Vim&lt;&#x2F;em&gt; by Drew Neil is a fantastic read. I read parts of it here and there to glean ways I can improve my vim usage. Every vim user should read &lt;em&gt;Oil and vinegar - split windows and the project drawer&lt;&#x2F;em&gt; &lt;a href=&quot;http:&#x2F;&#x2F;vimcasts.org&#x2F;blog&#x2F;2013&#x2F;01&#x2F;oil-and-vinegar-split-windows-and-project-drawer&#x2F;&quot;&gt;from vimcasts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;You can see my &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;dotfiles&#x2F;tree&#x2F;osx&#x2F;config&#x2F;nvim&#x2F;init.vim&quot;&gt;neovim configuration here&lt;&#x2F;a&gt; here, although I need to prune it a bit. The biggest changes I&#x27;ve made are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;mapping jj to escape from insert mode, or otherwise using ctrl-[ otherwise to avoid repetitive strain from hitting escape&lt;&#x2F;li&gt;
&lt;li&gt;using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf.vim&quot;&gt;fzf&lt;&#x2F;a&gt; + &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf&quot;&gt;fzf.vim&lt;&#x2F;a&gt; to fuzzy search through my files.&lt;&#x2F;li&gt;
&lt;li&gt;using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;w0rp&#x2F;ale&quot;&gt;ale&lt;&#x2F;a&gt; to asynchronously lint and fix files (but only on file save. I hate over-eager tools that complain when I&#x27;m halfway through writing code)&lt;&#x2F;li&gt;
&lt;li&gt;using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;vim-plug&quot;&gt;plug&lt;&#x2F;a&gt; to manage plugins and lazily-load them&lt;&#x2F;li&gt;
&lt;li&gt;disabling vim&#x27;s annoying swapfile system.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Oh, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;morhetz&#x2F;gruvbox&quot;&gt;gruvbox&lt;&#x2F;a&gt;, possibly one of the best color schemes ever made. Every once in a while I experiment with a different scheme but I inevitably get drawn back to the king. If someone made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;arcticicestudio&#x2F;nord&quot;&gt;Nord&lt;&#x2F;a&gt; but with green as the main color instead of blue, I might use that.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;nvim.png&quot; data-lity data-lity-desc=&quot;Screenshot of neovim with four buffers open and using monaco font&quot; alt=&quot;Screenshot of neovim with four buffers open and using monaco font&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;015&amp;#x2F;nvim.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; neovim with four *buffers* open – and monaco font &lt;&#x2F;p&gt;
&lt;h4 id=&quot;cons-1&quot;&gt;cons&lt;&#x2F;h4&gt;
&lt;p&gt;Vim&#x27;s autocompletion... exists I guess. A while ago I looked into it but it seemed not worth the hassle to set up. Anyway, ctrl-p in &lt;code&gt;insert&lt;&#x2F;code&gt; mode brings up suggestions from open buffers. Good thing &lt;code&gt;p&lt;&#x2F;code&gt; is right next to &lt;code&gt;[&lt;&#x2F;code&gt;, which takes you out of &lt;code&gt;insert&lt;&#x2F;code&gt; mode. &#x2F;s&lt;&#x2F;p&gt;
&lt;p&gt;As an aside, did you know that &lt;code&gt;vim&lt;&#x2F;code&gt; displays &lt;code&gt;Type :quit&amp;lt;Enter&amp;gt; to exit Vim&lt;&#x2F;code&gt; if you hit ctrl-c, and that it&#x27;s done so for a long time? Is your joke very outdated and unoriginal? Yes, yes it is.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;code-editor-for-c&quot;&gt;code editor (for C#)&lt;&#x2F;h3&gt;
&lt;p&gt;I use &lt;a href=&quot;https:&#x2F;&#x2F;www.jetbrains.com&#x2F;rider&#x2F;&quot;&gt;IntelliJ Rider&lt;&#x2F;a&gt; on both osx and arch. I think the value is worth it. It&#x27;s definitely nowhere near as snappy as vim but doing C# without autocompletions would eb... rough. The build profiles and test runners are pretty nice. Modifying environment variables and profile configurations is tedious.&lt;&#x2F;p&gt;
&lt;p&gt;The Intellij plugin ecosystem is great- you can easily install plugins in any of their editors, to my knowledge. There&#x27;s even an official &lt;a href=&quot;https:&#x2F;&#x2F;intellij-rust.github.io&#x2F;&quot;&gt;rust plugin&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;However, cmd-4 is the shortcut to close tabs..?! The default controls are interesting, to put it one way.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;workflow&quot;&gt;Workflow&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;tasks&quot;&gt;tasks&lt;&#x2F;h3&gt;
&lt;p&gt;Everything starts and ends with meetings and slack. I work on different projects for clients and my team has a daily 5-30min call at 9am (10pm in Korea).&lt;&#x2F;p&gt;
&lt;p&gt;In Slack and our meetings we&#x27;ll discuss what needs to be done. I or others will make bullet points of the most pertinent stuff that needs to be done. No agile or anything, &lt;a href=&quot;https:&#x2F;&#x2F;steve-yegge.blogspot.com&#x2F;2006&#x2F;09&#x2F;good-agile-bad-agile_27.html&quot;&gt;thank god&lt;&#x2F;a&gt;. We previously used a few different ticket tracking systems and I&#x27;ve found that they all suck. &lt;a href=&quot;https:&#x2F;&#x2F;www.jetbrains.com&#x2F;youtrack&#x2F;&quot;&gt;YouTrack&lt;&#x2F;a&gt; sucks, but it was better than the proprietary abomination one of our clients made us use. The only good system I&#x27;ve found is:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;make a list (or queue, if you prefer it that way) of things&lt;&#x2F;li&gt;
&lt;li&gt;roughly ballpark estimates, with the understanding that estimating things is notoriously difficult&lt;&#x2F;li&gt;
&lt;li&gt;accurately prioritize those things (if everything is #1&#x2F;urgent, nothing is)&lt;&#x2F;li&gt;
&lt;li&gt;work on those things&lt;&#x2F;li&gt;
&lt;li&gt;discuss progress and blockers in daily call and&#x2F;or slack&lt;&#x2F;li&gt;
&lt;li&gt;repeat&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;That&#x27;s it.&lt;&#x2F;p&gt;
&lt;p&gt;On top of this, issues in github&#x2F;gitlab&#x2F;etc are also pretty good if you come up with good labels. Right now I&#x27;m experimenting with Github&#x27;s Projects and semi-automated issues on our newest project.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Being 13 hours ahead does pose issues occasionally, but I solved this by going to sleep a bit later (about 1am or so). Having different things to work on is also important– if I&#x27;m ever blocked on something, such as waiting for a teammate to wake up and answer a question, I can just work on something else in the meantime. This async style of work won&#x27;t work if you always need rapid communication with your team.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;logging-my-thoughts&quot;&gt;logging my thoughts&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;notational.net&#x2F;&quot;&gt;Notational Velocity&lt;&#x2F;a&gt; application changed my life. At its core, the idea is deceivingly simple.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTIONAL VELOCITY is an application that &lt;strong&gt;stores and retrieves notes&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It is an attempt to loosen the mental blockages to recording information and to scrape away the tartar of convention that handicaps its retrieval.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You store text in notes. There is only one search box–if a file doesn&#x27;t exist for your search string, one will automatically be created.&lt;&#x2F;p&gt;
&lt;p&gt;I began to use it for just about everything, since any and all information I had written down could now be easily searched through and found.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;seldom-used vim tidbits&lt;&#x2F;li&gt;
&lt;li&gt;miscellaneous knowledge about real languages (I study Korean)&lt;&#x2F;li&gt;
&lt;li&gt;random snippets for programming languages (how do I open a file in ruby again?)&lt;&#x2F;li&gt;
&lt;li&gt;tentative to-do lists&lt;&#x2F;li&gt;
&lt;li&gt;niche, detailed information like serial numbers and specs for equipment that I bought&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It was glorious. Except... it was, and still is, mac only. At home I use *nix systems or windows, so using it became tedious and I eventually stopped.&lt;&#x2F;p&gt;
&lt;p&gt;As I was writing this article, I discovered &lt;a href=&quot;https:&#x2F;&#x2F;brettterpstra.com&#x2F;projects&#x2F;nvalt&#x2F;&quot;&gt;nVALT&lt;&#x2F;a&gt;–Brett Terpstra&#x27;s fork. It has more functionality like markdown support and a better interface. No vim keybindings though, which made it unpleasant for me to use. Terpstra is working on &lt;a href=&quot;https:&#x2F;&#x2F;brettterpstra.com&#x2F;2019&#x2F;04&#x2F;10&#x2F;codename-nvultra&#x2F;&quot;&gt;nvUltra&lt;&#x2F;a&gt; currently which may fix this.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;alok&amp;#x2F;notational-fzf-vim&amp;#x2F;master&amp;#x2F;screenshots&amp;#x2F;usage.gif&quot; data-lity data-lity-desc=&quot;A gif showcasing how notational fzf vim works.&quot; alt=&quot;A gif showcasing how notational fzf vim works.&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;alok&amp;#x2F;notational-fzf-vim&amp;#x2F;master&amp;#x2F;screenshots&amp;#x2F;usage.gif&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Taken from https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;Alok&amp;#x2F;notational-fzf-vim &lt;&#x2F;p&gt;
&lt;p&gt;After I started writing this article, Alex Singh released &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alok&#x2F;notational-fzf-vim&quot;&gt;notational-fzf-vim&lt;&#x2F;a&gt;, which is basically notational velocity but in vim! As the name implies, fulltext searching is powered by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf.vim&quot;&gt;fzf&lt;&#x2F;a&gt;, which in turn uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;ripgrep&quot;&gt;ripgrep&lt;&#x2F;a&gt; by default. Both are excellent tools I use daily.&lt;&#x2F;p&gt;
&lt;p&gt;The preview window is amazing..!&lt;&#x2F;p&gt;
&lt;p&gt;In order to use it, you need to specify at least one directory for the plugin to search. This will be the primary directory where new notes will be saved, but you can search multiple directories.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&amp;quot; notational fzf vim
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;g:nv_search_paths =
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;~&#x2F;Desktop&#x2F;Sync&#x2F;thoughts&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;~&#x2F;Desktop&#x2F;Sync&#x2F;thoughts&#x2F;korean&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and some example files that I&#x27;ve written to this week:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;packing-list.md
self-publishing.md
useful-shell-scripts.md
vim.md
watches.md
youtube-videos.md
korean&#x2F;colloquial-or-slang.md
korean&#x2F;color-names.md
korean&#x2F;clothes-verbs.md
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;This is my personal setup. I find it fascinaing to look at other people&#x27;s workflows and see how they handle things. Usually I can take away a thing or two and improve my own workflow. Feel free to make suggestions.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Living out of 2 backpacks: A 6-month retrospective</title>
                <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/living-out-of-two-backpacks-a-six-month-retrospective/</link>
                <guid>andrewzah.com/posts/living-out-of-two-backpacks-a-six-month-retrospective/</guid>
                <description>&lt;p&gt;In January of this year, I set out for semi-permanent traveling with only two* backpacks: A Goruck GR1 26L, and a Goruck GR2 40L. Prior to setting out I had done a -lot- of research, and made a &lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;spreadsheets&#x2F;d&#x2F;1G2LZ8zVWrJF9apgV1cRvr1qAxD33_mO1xKaOoz2uyW4&#x2F;edit?usp=sharing&quot;&gt;detailed spreadsheet&lt;&#x2F;a&gt; (down to the gram) of what I&#x27;d be taking. It&#x27;s not too bad I think, although the gorucks are more weighty than I&#x27;d like.&lt;&#x2F;p&gt;
&lt;p&gt;* Including a daily bag. See EDC below.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;retrospective&amp;#x2F;three-bags.jpg&quot; data-lity data-lity-desc=&quot;My travel bags. OpposeThis Invisible Rolltop, Goruck GR1 26L, Goruck GR2 40L&quot; alt=&quot;My travel bags. OpposeThis Invisible Rolltop, Goruck GR1 26L, Goruck GR2 40L&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;retrospective&amp;#x2F;three-bags.jpg&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; My travel bags. OpposeThis Invisible Rolltop, Goruck GR1 26L, Goruck GR2 40L &lt;&#x2F;p&gt;
&lt;h2 id=&quot;my-philosophy&quot;&gt;My Philosophy&lt;&#x2F;h2&gt;
&lt;p&gt;I hate checking in luggage and dealing with carousels or lost luggage, and traveling with heavy roller luggage is not an experience that I want to have ever again. So I want to travel light. However, I also want to maintain a respectable fashion level at the same time. Some people can live with one outfit or very few items- I cannot. So bear that in mind.&lt;&#x2F;p&gt;
&lt;p&gt;I travel to countries at any time of the year for extended periods of time, so I need to pack for freezing winter as well as hot and humid summer.&lt;&#x2F;p&gt;
&lt;p&gt;I travel with three pairs of shoes. That isn&#x27;t too much, for me. YMMV. As much as I&#x27;ve tried to find one, there doesn&#x27;t seem to be a shoe that is good at everything– wearing daily, hiking, and still looking sharp. Every shoe that supposedly does this, that I&#x27;ve seen so far, has been ugly.&lt;&#x2F;p&gt;
&lt;p&gt;Although I would like to only have one backpack, it&#x27;s just not feasible with my tech + clothes. And I think that&#x27;s okay. If I fly, my 26L goruck still fits under my plane seat and the 40L goes overhead. It definitely is more annoying to have to hold a backpack while traveling but I simply wouldn&#x27;t enjoy traveling at all with only one backpack&#x27;s worth of items.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Initially I wore my &lt;a href=&quot;https:&#x2F;&#x2F;www.redwingheritage.com&#x2F;mens-leather-boots-shoes&#x2F;6-inch-boots&#x2F;iron-ranger-08111.html&quot;&gt;redwing iron rangers&lt;&#x2F;a&gt; + &lt;a href=&quot;https:&#x2F;&#x2F;shop.outlier.nyc&#x2F;shop&#x2F;retail&#x2F;slim-dungarees.html&quot;&gt;outlier slim dungarees&lt;&#x2F;a&gt; + &lt;a href=&quot;https:&#x2F;&#x2F;woolandprince.com&#x2F;collections&#x2F;retiring&#x2F;products&#x2F;work-shirt-olive-drab-twill&quot;&gt;wool &amp;amp; prince work shirt&lt;&#x2F;a&gt; combos more often, but I slowly transitioned to a more relaxed streetwear look. Then I typically wore my nike free runs or common projects, nike or adidas tapered sweats, and a plain tshirt or long sleeve shirt. This was great in Korea since streetwear is a common aesthetic there, but in Japan I felt like a bit of a slob, woefully underdressed compared to the ubiquituous salaryman look there.&lt;&#x2F;p&gt;
&lt;p&gt;If I stayed there longer I would probably go back to a red wings + chinos + collared shirt look or even wear suits daily. I actually really like wearing suits. Summer or winter, it doesn&#x27;t matter. But wearing suits daily while living out of 2 backpacks...? Now that would be a challenge (maybe for a future trip..?).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;life-abroad&quot;&gt;Life Abroad&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;socializing&quot;&gt;Socializing&lt;&#x2F;h3&gt;
&lt;p&gt;Making friends was fairly easy as I went to a language exchange. Unlike most exchanges which are unstructured (i.e. you walk up to random people at a bar or sit down at a cafe), MingleCup assigns people to each other in groups of 3 and rotates them every 30 minutes. As a result I was able to get high quality conversations with people. I made a handful of good friends and hung out with them often during my time in Korea. I also knew some people already since I ran a Korean-English exchange near the University of South Carolina.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;food&quot;&gt;Food&lt;&#x2F;h3&gt;
&lt;p&gt;By far the thing I miss the most about Korea is its food. I ate out all the time since the local food was so good and cheap, and I took some cooking lessons too! Once I got back to the states I found a local Korean market and I get a jar of kimchi every two weeks.&lt;&#x2F;p&gt;
&lt;p&gt;Unlike the US, mom and pop restaurants are ubiqituous. It&#x27;s hard to walk anywhere without there being some sort of local 똑볶이, 김밥, 김치밥 etc joint nearby. When I was lazy, I used the Shuttle app to have food delivered to me. Korea has delivery drivers everywhere on mopeds, sometimes taking orders for multiple places. It&#x27;s also possible to get groceries delivered in around 1 day, but since I was traveling from airbnb to airbnb I didn&#x27;t really want to deal with that.&lt;&#x2F;p&gt;
&lt;p&gt;Japan was much more difficult for me since, well, I don&#x27;t speak the language very much.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;work&quot;&gt;Work&lt;&#x2F;h3&gt;
&lt;p&gt;The biggest challenge of working remotely was the time difference. Our 9am daily standups became 11pm&#x2F;10pm(with DST) for me. I had to find an airbnb where I was able to have these meetings without disturbing anyone. Which basically meant I had to find a whole apartment through airbnb.&lt;&#x2F;p&gt;
&lt;p&gt;My company is 100% remote so other than that and using a laptop-based workflow it wasn&#x27;t that big of a change.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;housing&quot;&gt;Housing&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;korea&quot;&gt;Korea&lt;&#x2F;h4&gt;
&lt;p&gt;In my first month I visited four different airbnbs since I didn&#x27;t want to lock myself in before visiting. I rented a room in 합정 [Hapjeong] for almost 4 weeks. 합정 is a nice central spot, close to 홍익입구역 [Hongik University], 신촌 [Sinchon], and 이대역 [Ehwa Women&#x27;s University]. It has the green (6호선) and brown (2호선) lines which make getting around 서울 [Seoul] pretty easy. The wework I went to, 을지로3-가 [Euljiro 3-ga], is on the green line as well.&lt;&#x2F;p&gt;
&lt;p&gt;After that the host went away on a trip so I had to find a new place. I negotiated with a host to stay from March to June in 마포구 [Mapo-gu], near 마포구청역, which is the western side of Seoul above the Han river. It was a quiet neighborhood with a lot of families and children, and I enjoyed the solitude at night. It was only ~15 minutes away from 합정, so getting around via public transportation was still fine.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;japan&quot;&gt;Japan&lt;&#x2F;h4&gt;
&lt;p&gt;From what I saw airbnb was more expensive in Japan. I stayed at a hostel through hostelworld.com near Golden Kai in Shinjuku for about 5 days, then I stayed in Yokohama, Hiroshima, and Fukuoka. Golden Kai... visiting dozens of small, intimate bars was a hell of an experience. When I visit Japan again I&#x27;m definitely going to visit more bars at Golden Kai.&lt;&#x2F;p&gt;
&lt;p&gt;Note that if you&#x27;re planning to stay longer at a bar in Golden Kai, it&#x27;s definitely worth it to pay the cover charge. My uncle and I just wanted to visit as many bars as possible–we found one that was metal themed and had about 12 people in a space meant more for like 6-8. It was incredible!&lt;&#x2F;p&gt;
&lt;p&gt;I chose Yokohama due to the Shinkansen station. I had no idea it had a sizable Chinatown (and lots of tourists). Somewhat ironically, Hiroshima was serene and beautiful. I think it&#x27;s my favorite of all the places I stayed at. Fukuoka was also quite nice. It and Hiroshima are much more laid-back than Osaka or Tokyo.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;clothes&quot;&gt;Clothes&lt;&#x2F;h3&gt;
&lt;p&gt;I wore all of the shoes I took (redwing iron ranger boots, black&#x2F;gray nike free runs, common projects). I also bought a 4th pair of red &lt;a href=&quot;https:&#x2F;&#x2F;www.vans.com&#x2F;shop&#x2F;old-skool-black-white&quot;&gt;vans old skools&lt;&#x2F;a&gt;. I like shoes, gimme a break.&lt;&#x2F;p&gt;
&lt;p&gt;Next time I would probably take my black wolverine 1k mile boots, the red old skools, and the nike free runs. The common projects are holding up excellently though–I just maintain them with rinsing and brushing with soap.&lt;&#x2F;p&gt;
&lt;p&gt;Since dyers aren&#x27;t common in Korea my merino wool clothes worked out great. Seven pairs of boxerbriefs was a good usage to space taken up ratio. Six or less would&#x27;ve required washing way too often.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;transportation&quot;&gt;Transportation&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;subway&quot;&gt;subway&lt;&#x2F;h4&gt;
&lt;p&gt;One reason why I love Korea and Japan is not needing to own a car. Parking is annoying, insurance is expensive (particularly for me as an 18–25 year old male), and I can&#x27;t use my phone while driving. I find taking the bus or subway to be a zen-like experience where I can meditate or listen to a podcast. It lets me stretch my legs after sitting all day on my computer. (I almost always stand, unless I&#x27;m tired or the ride is 65+ minutes).&lt;&#x2F;p&gt;
&lt;p&gt;Compared to Korean, Japan&#x27;s railway lines are much more convoluted. Companies own different lines so your train may change colors while you&#x27;re still riding in a car. A card that works in Tokyo (like Suica) may not work in Osaka–at least it didn&#x27;t for me as of March 2019. Korean lines have a color and number. Green line (2 line) is much easier to remember and to refer to than Japan&#x27;s Ginza line, Marunouchi line, etc.&lt;&#x2F;p&gt;
&lt;p&gt;In Korea you can take any bus or subway line with a T-Money card, available at nearly every convenience store. Each station generally serves 1-2 lines and has markings on how to easily exit or transfer. However I was able to put my Suica card in my iphone&#x27;s Wallet app and tap my phone at the turnstiles in Japan. I&#x27;m not sure if T-Money cards support this yet.&lt;&#x2F;p&gt;
&lt;p&gt;Most, if not all, Korean stations have public restrooms that are cleaned regularly. A lot of places that I stayed in Korea at had older toilets and plumbing, so these restooms are gifts from God; resplendent beacons of hope.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;retrospective&amp;#x2F;seoulsubwaymap.gif&quot; data-lity data-lity-desc=&quot;A romanized version of the Seoul subway map&quot; alt=&quot;A romanized version of the Seoul subway map&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;retrospective&amp;#x2F;seoulsubwaymap.gif&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; A romanized version of the Seoul subway map &lt;&#x2F;p&gt;
&lt;p&gt;Korea&#x27;s green line gets very crowded at 6pm due to employees and students returning home. Traveling home from 여의도 was the only time in Korea that I got shoved on the train as part of people packing in. 8am on the Marunouchi line in Japan was similar except there were people pushing quite aggressively. I always travel now with a mask on the subway in case the train becomes that crowded.&lt;&#x2F;p&gt;
&lt;p&gt;This is where the Goruck bags aren&#x27;t that great. They&#x27;re huge, especially the GR2! I would never use either as daily bags with commuting on trains or busses. I specifically packed a day bag for this reason. Of course if you drive everywhere in the US like I do in South Carolina, the GR2 works just great in your passenger seat.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;retrospective&amp;#x2F;DM0H95.jpg&quot; data-lity data-lity-desc=&quot;Stock image of 중각역&quot; alt=&quot;Stock image of 중각역&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;retrospective&amp;#x2F;DM0H95.jpg&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; One of the ubiquituous underground malls connected to Korean subway stations &lt;&#x2F;p&gt;
&lt;p&gt;A lot of subway stations in Korea are connected to underground malls. Some of them are enormous! Vendors hawk wares like food, clothes, cosmetics, power adapters, and more.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;long-distance&quot;&gt;Long Distance&lt;&#x2F;h4&gt;
&lt;p&gt;Compared to Korea&#x27;s KTX, Japan&#x27;s Shinkansen lines are &lt;em&gt;insanely&lt;&#x2F;em&gt; expensive. I don&#x27;t know how KTX is so cheap but you can get from 서울 [Seoul] -&amp;gt; 부산 [Busan] in ~2.5 hours for ~$55. The 무궁화 line is even cheaper, although much slower at ~4 hours. Each KTX train car has room at the end to store some luggage, and overhead racks.&lt;&#x2F;p&gt;
&lt;p&gt;I don&#x27;t know if the Green cars in the Shinkansen are worth the steep price increase. The extra space was nice though. I actually found the atmosphere on the KTX to be quieter than the Shinkansen.&lt;&#x2F;p&gt;
&lt;p&gt;If you bought a JR Pass you have to stand in line at a Shinkansen hub station and request your tickets, which can be done up to ~1 month in advance. This can take over 45-60 minutes at peak times. Honestly it&#x27;s not a good experience for foreigners–the only people who are allowed to buy the pass. You cannot buy the pass inside of Japan, you &lt;strong&gt;must&lt;&#x2F;strong&gt; purchase it abroad now (as of September 2019).&lt;&#x2F;p&gt;
&lt;p&gt;Otherwise you can book tickets via the Shinkansen app. With KTX you can use the app or website until ~30 minutes before departure. For that or standing tickets you need to talk to a ticketing agent at the station. Standing tickets have a whopping ~85 cents (1,000원) discount.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-bad&quot;&gt;The Bad&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;loneliness-homesickness&quot;&gt;Loneliness &#x2F; Homesickness&lt;&#x2F;h4&gt;
&lt;p&gt;The biggest issue I faced was loneliness. All of my college friends moved back home anyway but I did miss my family.&lt;&#x2F;p&gt;
&lt;p&gt;What I didn&#x27;t expect was missing out on... americans&#x2F;westerners. Rather, I missed having people around that I shared roughly the same culture with, people that spoke English fluently (at distinguished or almost native level). I only made a couple foreigner friends at the language exchange because foreigners were always matched with korean locals.&lt;&#x2F;p&gt;
&lt;p&gt;I fixed this by going to 이태원 [Itaewon] and 용산 [Yongsan] more. These are &lt;em&gt;the&lt;&#x2F;em&gt; foreigner areas in Korea, due to the American military base nearby. These areas have lot of music events and foreign food if you get homesick. I also went to a few programming meetups through meetup.com which were comprised of almost entirely foreigners.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;space&quot;&gt;Space&lt;&#x2F;h4&gt;
&lt;p&gt;The other slightly annoying issue was my space, or lack of it. Not having an office in particular. At home I use two desks: one for my monitors &amp;amp; computer, the other for writing and any other tinkering.&lt;&#x2F;p&gt;
&lt;p&gt;Going from two 27&amp;quot; 1440p monitors to a macbook pro was a bit rough.&lt;&#x2F;p&gt;
&lt;p&gt;If I went back to Korea for more than 3 months I would need a space with a decent desk.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;pin-credit-card&quot;&gt;Pin credit card&lt;&#x2F;h4&gt;
&lt;p&gt;I forgot to bring a pin-enabled credit card. Whoops! I needed to withdraw cash occasionally for a few things, mainly the T-Money subway&#x2F;bus transit cards cannot be refilled via card. Thankfully I received a new pin-enabled card quickly and my family was able to ship it to a Korean friend of mine.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Other than those issues I thoroughly enjoyed my time in Korea.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bag-review&quot;&gt;Bag Review&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;goruck-gr1-26l-gr2-40l&quot;&gt;Goruck GR1 26L, GR2 40L&lt;&#x2F;h3&gt;
&lt;p&gt;It&#x27;s no secret that I love these bags. A lot. They were purchased with the 25% off military discount, before goruck started raising their prices. As of the time of this article, I can no longer recommend goruck. The GR2 is nice, but not $500 nice. If you have access to the military discount, wait until black friday and stack the deals to get a reasonable price. Jason McCarthy wrote a &lt;a href=&quot;https:&#x2F;&#x2F;blog.goruck.com&#x2F;news&#x2F;the-state-of-goruck-2019-elite-not-elitist&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; about moving some production to Vietnam, so maybe the state of goruck in 2020 will be better.&lt;&#x2F;p&gt;
&lt;p&gt;These bags feel virtually indestructible. The way it sits on my back feels great, even with added weight. A big selling point for me was the clamshell style opening–it makes packing a million times better for me. The tradeoff is if you pack a lot of clothes, etc, you&#x27;ll need packing cubes to keep everything nice and tidy. I use Eagle Creek &lt;a href=&quot;https:&#x2F;&#x2F;smile.amazon.com&#x2F;Eagle-Creek-Specter-White-Strobe&#x2F;dp&#x2F;B007NZVY32&quot;&gt;regular&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;smile.amazon.com&#x2F;Eagle-Creek-Specter-Compression-Strobe&#x2F;dp&#x2F;B00BYFC4Z4&#x2F;&quot;&gt;compression&lt;&#x2F;a&gt; packing cubes, but just about any brand should do.&lt;&#x2F;p&gt;
&lt;p&gt;The thing with gorucks is that I somehow always manage to reorganize and fit more stuff in–which is great if you pick up stuff while traveling. It also makes it easy to pack way too much stuff. C&#x27;est la vie.&lt;&#x2F;p&gt;
&lt;p&gt;I really wish I could recommend these bags but the prices are too steep. There are other good quality bags that aren&#x27;t so prohibitively expensive.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;retrospective&amp;#x2F;rolltop.jpg&quot; data-lity data-lity-desc=&quot;My OPPOSETHIS Invisible Rolltop backpack, with various handsewn patches.&quot; alt=&quot;My OPPOSETHIS Invisible Rolltop backpack, with various handsewn patches.&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;retrospective&amp;#x2F;rolltop.jpg&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; I saw this backpack as a blank canvas to sew on tons of patches. &lt;&#x2F;p&gt;
&lt;h3 id=&quot;opposethis-invisible-rolltop&quot;&gt;OPPOSETHIS Invisible Rolltop&lt;&#x2F;h3&gt;
&lt;p&gt;This is a great day bag, but for more weight or longer durations I would always choose a goruck. I use this as a daily bag with my laptop, tech gear, and journals.&lt;&#x2F;p&gt;
&lt;p&gt;Organization is convenient with all the various pockets available. The rolltop makes finding stuff easy, and I can toss in some longer groceries.&lt;&#x2F;p&gt;
&lt;p&gt;The main issue I have is with the side zipper that opens into the main compartment–it gets stuck on the inner fabric every other time I use it. It&#x27;s not a huge deal because I can still just open the rolltop, but it would&#x27;ve been nice to have that for quick access.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-items&quot;&gt;The Items&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;things-i-ended-up-not-using&quot;&gt;Things I ended up not using&lt;&#x2F;h3&gt;
&lt;p&gt;Items that almost made it here were the glove liners and the coal beanie. I only used them twice while hiking 북한산 (백은대) and 버머사 in March.&lt;&#x2F;p&gt;
&lt;p&gt;I only used the patagonia torrentshell a few times. Generally when it was raining I just found shelter or didn&#x27;t go out.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;outlier-ultrafine-tee-light-grey&quot;&gt;Outlier Ultrafine Tee (Light Grey)&lt;&#x2F;h4&gt;
&lt;p&gt;This shirt showed my nipples too easily. The w&amp;amp;p wool shirts are a bit finer in general but they work in darker colors.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;tan-chinos&quot;&gt;Tan chinos&lt;&#x2F;h4&gt;
&lt;p&gt;I added these at the last moment before I left for the airport, hence they&#x27;re not in the spreadsheet. They took up a fair bit of space and were cotton so they were annoying to dry.&lt;&#x2F;p&gt;
&lt;p&gt;In retrospect I should have used those more. I found a more comfortable pair from jcrew while I will be taking with me on future trips.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;panasonic-lumix-g85-gear&quot;&gt;Panasonic Lumix G85 &amp;amp; Gear&lt;&#x2F;h4&gt;
&lt;p&gt;Talk about a waste of time and money researching gear that I never used. Sigh. I&#x27;ve used it a few times since I came home, but in general cameras are firmly in the NOT WORTH IT category for me now.&lt;&#x2F;p&gt;
&lt;p&gt;It pains me to say that as I grew up using a nikon d200&#x2F;d300 with my dad, but the truth is that my iphone X&#x27;s camera is plenty sufficient. The new iphone&#x27;s camera looks great, and I imagine the one after that will have even better cameras.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;paracord&quot;&gt;Paracord&lt;&#x2F;h4&gt;
&lt;p&gt;I haven&#x27;t had a reason to use this yet but it takes up like no space at all.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;things-i-didn-t-use-as-much-as-i-d-like&quot;&gt;Things I didn&#x27;t use as much as I&#x27;d like&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;card-travel-adapter&quot;&gt;Card Travel Adapter&lt;&#x2F;h4&gt;
&lt;p&gt;This was worthless at first because &lt;a href=&quot;https:&#x2F;&#x2F;i.ebayimg.com&#x2F;images&#x2F;g&#x2F;FdAAAOSwpkFY7KHD&#x2F;s-l300.jpg&quot;&gt;Korean outlets are recessed&lt;&#x2F;a&gt;, so it didn&#x27;t fit. On my first day back in Korea I had to find a hardware store and bought two cheap adapters.&lt;&#x2F;p&gt;
&lt;p&gt;Then at home I daisy-chained the card adapter to the cheap adapter. Hey, it worked.&lt;&#x2F;p&gt;
&lt;p&gt;In Japan I daisy-chained it &lt;em&gt;in reverse&lt;&#x2F;em&gt; with the cheap adapter to plug in my 3-prong mac charger. ¯\_(ツ)_&#x2F;¯&lt;&#x2F;p&gt;
&lt;p&gt;Next time I travel, I may very well take Japanese&#x2F;Korean versions of the macbook pro cable to not deal with this headache. If they don&#x27;t take up too much weight&#x2F;space of course.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;amazon-kindle&quot;&gt;Amazon Kindle&lt;&#x2F;h4&gt;
&lt;p&gt;I got tired of trying to make my way through a Korean history book. I had the mentality of &amp;quot;finish one book, then read another&amp;quot; but this doesn&#x27;t pan out so well for information-dense books.&lt;&#x2F;p&gt;
&lt;p&gt;Instead, now I read what I feel like reading. I&#x27;m in the progress of &lt;em&gt;Pro Git&lt;&#x2F;em&gt;, &lt;em&gt;Meditations by Marcus Aurelius&lt;&#x2F;em&gt;, and &lt;em&gt;Korea&#x27;s Place in the Sun&lt;&#x2F;em&gt; now.&lt;&#x2F;p&gt;
&lt;p&gt;I like my kindle quite a lot. One of the pains of traveling is not really being able to have books around me like I do in my office. Next time I&#x27;ll have some more interesting books to read.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;clothing-additions&quot;&gt;Clothing Additions&lt;&#x2F;h3&gt;
&lt;p&gt;Keep in mind even with these additions I was still able to travel with everything I originally packed. It really was just a matter of re-organizing. Goruck backpacks always astound me with how much I can fit if I get creative.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;sweatpants-x3&quot;&gt;sweatpants x3&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.adidas.com&#x2F;us&#x2F;tiro-19-training-pants&#x2F;D95958.html&quot;&gt;Adidas tiro 19 training pants&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.nike.com&#x2F;t&#x2F;sportswear-tech-fleece-mens-joggers-gXTOoz1v&#x2F;805162-010&quot;&gt;Nike sportswear tech fleece&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.nike.com&#x2F;t&#x2F;jordan-dri-fit-23-alpha-mens-basketball-pants-2KTrDkJG&#x2F;889711-011&quot;&gt;Nike Jordan dri-fit 23&lt;&#x2F;a&gt; - but in black&#x2F;white instead of black&#x2F;red.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I decided to get the nikes after trying them out in a store. The tech fleece is lighter than expected but takes forever to dry. (It&#x27;s not common to have a dryer in Korea). The jordan dri-fits are amazing because they&#x27;re so light, but unless I&#x27;m running in them I tend to pair them with the smartwool base layer.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;sweatshirts-x3&quot;&gt;sweatshirts x3&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;F.Illuminate plain sweatshirt, grey&lt;&#x2F;li&gt;
&lt;li&gt;F.Illuminate plain sweatshirt, tan&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;F.Illuminate is a Korean brand. I found these sweatshirts in a random store in 신촌역. They&#x27;re nice and simple, no logos. They became my main staples with the sweatpants mentioned earlier.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;misc&quot;&gt;misc&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Korea was more windy than I remembered, so I got a scarf from a random street vendor.&lt;&#x2F;li&gt;
&lt;li&gt;I got 3 pairs of long, thin black socks since I forgot to bring some.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;item-additions&quot;&gt;Item additions&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;ipad-pro-11-apple-pencil-v2&quot;&gt;iPad Pro 11&amp;quot; + Apple Pencil v2&lt;&#x2F;h4&gt;
&lt;p&gt;I initially bought this to use with Duet as an external monitor, but it&#x27;s quite laggy. So I was disappointed at first but then I realized it&#x27;s pretty nice to use when I&#x27;m not programming or writing. Specifically, drawing with Procreate is fantastic. I study kanji through an Anki deck on this if I don&#x27;t use my laptop, and I can put on netflix in the background while cooking or cleaning.&lt;&#x2F;p&gt;
&lt;p&gt;However I despise taking notes on the ipad, or any other digital device I&#x27;ve tried. Only pen and paper work for me and how I process things. I really tried using GoodNotes 5, but I &lt;em&gt;never&lt;&#x2F;em&gt; want to wrestle with a tool or its UI while I&#x27;m trying to write down my thoughts. If I have to take digital notes, I would just use vim.&lt;&#x2F;p&gt;
&lt;p&gt;Stupid goodreads 5 issues I had:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The stylus kept on changing to eraser mode randomly.&lt;&#x2F;li&gt;
&lt;li&gt;I wanted to study kanji by writing 1 character ~50 times, so I thought &amp;quot;surely goodnotes can handle resizing a textbox&amp;quot;. Andrew, you utter fool. Resizing a textbox causes the character to become clipped for no discernable reason.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Goodnotes&#x27; saving grace is with annotating PDFs... once I save them in the right format to my phone, of course.&lt;&#x2F;p&gt;
&lt;p&gt;ProCreate is great but there&#x27;s a PEBKAC issue. I don&#x27;t find myself often sitting down to just... draw. I should fix that.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;seiko-presage-automatic-4r39a&quot;&gt;Seiko Presage Automatic - 4R39A&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;Watches&#x2F;comments&#x2F;96m2vv&#x2F;seiko_my_very_first_automatic_seiko_presage_cal&#x2F;&quot;&gt;Example of what it looks like.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This watch is absolutely gorgeous. I saw it while walking around in Yodobashi Camera and was immediately transfixed.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;fountain-pens-inks&quot;&gt;Fountain pens + inks&lt;&#x2F;h4&gt;
&lt;p&gt;Let me start off with saying I am not a snob about writing tools. I like rollerball pens (&lt;a href=&quot;https:&#x2F;&#x2F;www.amazon.com&#x2F;uni-ball-Vision-Rollerball-Point-0-7mm&#x2F;dp&#x2F;B00006IE8J&quot;&gt;like these ones&lt;&#x2F;a&gt;) just as much as I like niche fountain pens. Now, with that out of the way:&lt;&#x2F;p&gt;
&lt;h5 id=&quot;sailor-pro-gear-slim-mustard-fine-nib&quot;&gt;Sailor Pro Gear Slim - Mustard, Fine Nib&lt;&#x2F;h5&gt;
&lt;p&gt;I tried out a Mustard Sailor Pro Gear Slim at Kingdom Note in Japan, and I was blown away. I &lt;em&gt;love&lt;&#x2F;em&gt; writing with this pen. It&#x27;s from Sailor&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;community.fpc.ink&#x2F;t&#x2F;kingdom-note-x-sailor-vegetable-series-pro-gear-slim-release&#x2F;45&quot;&gt;Vegetable Collection&lt;&#x2F;a&gt;, which seems to be no longer available on their website as of 9&#x2F;19&#x2F;2019.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;platinum-3776-century-fine-nib&quot;&gt;Platinum 3776 Century, Fine Nib&lt;&#x2F;h5&gt;
&lt;p&gt;I tried &lt;a href=&quot;https:&#x2F;&#x2F;www.gouletpens.com&#x2F;products&#x2F;platinum-3776-century-fountain-pen-chartres-blue-gold?variant=11884876824619&quot;&gt;this one&lt;&#x2F;a&gt; out at Kindome Note as well and enjoyed how it wrote. It is a bit finer than the mustard Sailor so I use it a lot for kanji practice.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;twsbi-eco-demonstrators-x2-bright-green-red-f-ef-nib&quot;&gt;TWSBI Eco Demonstrators x2, Bright Green&#x2F;Red, F&#x2F;EF Nib&lt;&#x2F;h5&gt;
&lt;p&gt;I found a small fountain pen store in Korea and &lt;a href=&quot;https:&#x2F;&#x2F;www.gouletpens.com&#x2F;products&#x2F;platinum-3776-century-fountain-pen-bourgogne&quot;&gt;got these&lt;&#x2F;a&gt; for fun. The F is too wide for kanji practice but I like the extra-fine.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;inks&quot;&gt;Inks&lt;&#x2F;h5&gt;
&lt;ul&gt;
&lt;li&gt;Kindom Note Blue&lt;&#x2F;li&gt;
&lt;li&gt;Kobe Inks - Ginza Itoya Sepia&lt;&#x2F;li&gt;
&lt;li&gt;Kobe Inks - Blue&lt;&#x2F;li&gt;
&lt;li&gt;Sailor 100th Anniversary Collection - Yamaburo Red&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Is traveling with these a pain? Oh yes. In the future I&#x27;ll probably only use uniball rollerballs, staedtler pigment liners in 0.3mm, and my pelikan souveran rollerball.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;ps4-controller&quot;&gt;PS4 controller&lt;&#x2F;h4&gt;
&lt;p&gt;I picked up one in Japan. I missed being able to play games like street fighter on my mac.&lt;&#x2F;p&gt;
&lt;p&gt;I would travel with this again, I think. There&#x27;s something cathartic about relaxing after a long day with some beer and a few rounds of Street Fighter III: 3rd Strike.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;my-routine&quot;&gt;My Routine&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;wake up between 8 and 9:30am&lt;&#x2F;li&gt;
&lt;li&gt;brew coffee, get ready, do chores if needed&lt;&#x2F;li&gt;
&lt;li&gt;eat (often at a local restaurant since local Korean food is healthy, tasty, and cheap)&lt;&#x2F;li&gt;
&lt;li&gt;decide to take a bus ~35 mins to wework, stay home, or go to a local cafe&lt;&#x2F;li&gt;
&lt;li&gt;work (taking breaks with a pomodoro timer)&lt;&#x2F;li&gt;
&lt;li&gt;study korean and kanji or go to a language exchange&lt;&#x2F;li&gt;
&lt;li&gt;(occasionally) relax at a pc cafe for a bit before heading home&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The downside of working + diligently studying [Korean vocab and Japanese kanji] + working on personal programming projects + writing is my time just magically disappears. I try to talk to people on HelloTalk for language practice but I find myself going days without responding.
The older I get the harder it is to summon the energy to respond to people.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;edc-every-day-carry&quot;&gt;EDC (Every day carry)&lt;&#x2F;h3&gt;
&lt;p&gt;Wallet, phone, watch (always), small notebook (that can fit in my pocket) + uniball pen.&lt;&#x2F;p&gt;
&lt;p&gt;Arcteryx jacket if it&#x27;s cold&#x2F;rainy, patagonia torrentshell in my backpack if it it might rain. I make sure to always have the pen + small notebook in the jacket pockets.&lt;&#x2F;p&gt;
&lt;p&gt;The following items are if I&#x27;m working, writing, etc.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;backpack&quot;&gt;Backpack&lt;&#x2F;h4&gt;
&lt;p&gt;For EDC both gorucks are far too bulky. They&#x27;re fine in the US since I drive everywhere, but have you ever been on a crowded train in Asia at rush hour?&lt;&#x2F;p&gt;
&lt;p&gt;So I use an &lt;a href=&quot;https:&#x2F;&#x2F;www.opposethis.com&#x2F;products&#x2F;invisible-rolltop&quot;&gt;Invisible Rolltop by OPPOSETHIS&lt;&#x2F;a&gt;, which packs into the GR2 when I fly. I chose this for three reasons:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;As mentioned, the gr1 was too bulky for daily use.&lt;&#x2F;li&gt;
&lt;li&gt;I wanted a sleek, minimal backpack that doesn&#x27;t scream &amp;quot;I am a traveler&#x2F;tourist&amp;quot;.&lt;&#x2F;li&gt;
&lt;li&gt;The bag fits my laptop + expands via the rolltop if I pick up some groceries, etc.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;macbook-pro-2015-retina-sleeve&quot;&gt;Macbook pro 2015 retina + sleeve&lt;&#x2F;h4&gt;
&lt;p&gt;My programming machine. The beating heart and core of all my operations. I got a quality leather sleeve to protect it while moving around.&lt;&#x2F;p&gt;
&lt;p&gt;I like macs (2015 and prior) due to their build quality and reliability. I had a thinkpad t430 but it was insanely bulky and I got tired of &amp;quot;configurability&amp;quot;. Give me a machine that works without incessant tinkering and workarounds. On my desktop at home I run Debian Stretch because I got tired of Arch&#x27;s constant annoyances. My home server runs FreeNAS–running FreeBSD without a hitch on a laptop would be ideal.&lt;&#x2F;p&gt;
&lt;p&gt;I may upgrade to a Lenovo Carbon in a year or two, but we&#x27;ll see. Maybe apple will release a non-shit macbook pro in 2020.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;leuchtturm-1917-a4-softcover-dotted&quot;&gt;Leuchtturm 1917 A4 softcover, dotted&lt;&#x2F;h4&gt;
&lt;p&gt;I cannot travel with out this. All my language notes, doodles, thoughts, tasking, and everything else go in here. Initially thought 121 pages for the softcover was too little but it took me a very long time to complete the journal.&lt;&#x2F;p&gt;
&lt;p&gt;Since then I&#x27;ve purchased two more hardcovers, grid style, and three more softcovers, dotted style, for various uses. I&#x27;m not a fan of blank or lined paper.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;small-3-year-daily-planner&quot;&gt;Small 3-year daily planner&lt;&#x2F;h4&gt;
&lt;p&gt;I saw this while traveling in Japan and thought it would be neat to have one spot for a daily log. I did this in my leuchtturm but it got buried by my notes and such. I write down small tidbits of what went on in the day. The format is such that each page has 3 years on it, so I&#x27;ll be able to see my past self&#x27;s activities and thoughts.&lt;&#x2F;p&gt;
&lt;p&gt;The problem is remembering to write in it.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;pens-fountain-pens&quot;&gt;Pens + fountain pens&lt;&#x2F;h4&gt;
&lt;p&gt;I carry pretty much all of my pens in my backpack since they take up little space. I pick up fountain pens in Japan but I wouldn&#x27;t travel with them. Ink is a huge pita.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;bose-qc20-noise-canceling-headphones&quot;&gt;Bose qc20 noise-canceling headphones&lt;&#x2F;h4&gt;
&lt;p&gt;These are like magic for public transportation. In cafes and at WeWork they&#x27;re okay, they cut out a lot of stuff but don&#x27;t really stop conversations or music. I just crank up &lt;a href=&quot;https:&#x2F;&#x2F;rainymood.com&#x2F;&quot;&gt;rain sounds&lt;&#x2F;a&gt; or music. I had to buy the lightning adapter as well–I avoid losing it by always packing the qc20s in their case with it when I&#x27;m done.&lt;&#x2F;p&gt;
&lt;p&gt;The bose over-ear canceling headphones are way better for cafes and sound quality but are also much bulkier. The taotronics soundsurge bluetooth headphones are considerably cheaper yet still good in quality. Next time if I have the space, I may travel with my taotronics. Personally I despise wearing over-ear headphones in public.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;anker-power-battery&quot;&gt;Anker power battery&lt;&#x2F;h4&gt;
&lt;p&gt;This has saved my butt a few times when my phone died while traveling or when I simply forgot to charge it the night before. Heck, I even use it when I&#x27;m not traveling abroad.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;cheap-power-adapter&quot;&gt;cheap power adapter&lt;&#x2F;h4&gt;
&lt;p&gt;For my macbook charger.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;apple-earbuds-lightning-3-5mm&quot;&gt;apple earbuds (lightning + 3.5mm)&lt;&#x2F;h4&gt;
&lt;p&gt;I use the lightning ones for phone calls when I&#x27;m at home, and the 3.5mm ones are a backup.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sometimes-carried-items&quot;&gt;Sometimes carried items&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;folder-of-50-sheets-of-kanji-paper&quot;&gt;Folder of 50 sheets of kanji paper&lt;&#x2F;h4&gt;
&lt;p&gt;I study kanji every single day and I do it on specific grid paper with boxes sized for kanji. I keep them all since I want to see my progress, but at some point I&#x27;ll digitize them.&lt;&#x2F;p&gt;
&lt;p&gt;I printed 50 pages before I did the math. 200 boxes per page x 50 pages means it&#x27;s going to take me forever to use these up.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;ipad-pro-11&quot;&gt;iPad Pro 11&amp;quot;&lt;&#x2F;h4&gt;
&lt;p&gt;Acts as an external monitor or replaces the macbook if I&#x27;m not doing much beyond studying kanji or grammar.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;roost-laptop-stand&quot;&gt;Roost laptop stand&lt;&#x2F;h4&gt;
&lt;p&gt;Helps prevent those nasty neck and back problems. I don&#x27;t know if the price was worth it, but it&#x27;s been rock solid.&lt;&#x2F;p&gt;
&lt;p&gt;I DO NOT use this at cafes. I&#x27;m not that guy. I use this at WeWork&#x2F;coworking spaces or at home only.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;microsoft-arc-touch-mouse&quot;&gt;Microsoft arc touch mouse&lt;&#x2F;h4&gt;
&lt;p&gt;The price is definitely worth it. This mouse is freaking amazing.&lt;&#x2F;p&gt;
&lt;p&gt;Update: One of my coworking friends recommended the &lt;a href=&quot;https:&#x2F;&#x2F;www.logitech.com&#x2F;en-us&#x2F;product&#x2F;mx-vertical-ergonomic-mouse&quot;&gt;logitech vertical mouse&lt;&#x2F;a&gt;. I LOVE it. It&#x27;s not as packable as the arc touch mouse but it feels amazing to use all day.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;logitech-keys-to-go-bluetooth-keyboard&quot;&gt;Logitech keys-to-go bluetooth keyboard&lt;&#x2F;h4&gt;
&lt;p&gt;Look at &lt;a href=&quot;https:&#x2F;&#x2F;www.logitech.com&#x2F;en-us&#x2F;product&#x2F;keys-to-go&quot;&gt;how thin this keyboard&lt;&#x2F;a&gt; is! Unfortunately, it&#x27;s too good to be true. It&#x27;s so thin it&#x27;s mushy as a result, requiring more force to register presses. After a day of typing my fingers hurt. I gave it to my uncle and he keeps it in his car for occasional use while he travels across the US.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;logitech-k380-bluetooth-keyboard&quot;&gt;Logitech K380 bluetooth keyboard&lt;&#x2F;h4&gt;
&lt;p&gt;This is a great keyboard. It&#x27;s compact but still nice to type on, and being able to pair with more than one device is very nice.&lt;&#x2F;p&gt;
&lt;p&gt;I wish I could travel with my hhkb2 pro keyboard but it just takes up too much space, and I would be worried about damaging it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;general-tips&quot;&gt;General Tips&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Go to well-run language exchanges. They can be quite fun and you&#x27;ll meet locals who can give good recommendations for places to check out. Plus you can learn a thing or two about the local language which always helps. If physical exchanges aren&#x27;t your style you can try the HelloTalk or Tandem apps.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;A lot of exchanges and other groups can be found on &lt;a href=&quot;https:&#x2F;&#x2F;meetup.com&quot;&gt;Meetup&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Look up customs and things not to do. This sounds obvious, but I got a bit cocky after living ~1.5 years in Korea, and made some embarrassing gaffes in Japan.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Don&#x27;t enter busses in Japan from the front.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Don&#x27;t just go to the &amp;quot;must go to&amp;quot; places. Sometimes it&#x27;s worth it, sometimes you end up just waiting for an hour when there&#x27;s probably a similar place nearby.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Pack extra deodorant if traveling to Korea. I seriously could not find it anywhere, aside from 이태원 [Itaewon] due to the huge foreign community there.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Negotiate the price down as much as you can on airbnb, especially if you&#x27;re looking for a longer stay.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Visit the airbnb before you book. You can always book a hostel for a week or so after you arrive, giving you time to check out some airbnbs.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Consider airbnb alternatives like booking.com, agoda, or local shared housing. Lately booking.com and agoda have been looking better than airbnb.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Bring along a light drawstring bag to use on the plane &#x2F; in the airport so you don&#x27;t always have to dig into your bags.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Read the reviews of a hostel on something like hostelworld before booking. Hostels vary widely in atmosphere, and you should check if they have reports of bedbugs, etc.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Merino wool garments don&#x27;t really matter if all the places you travel to have washing machines. That said, they&#x27;re useful on long flights. Personally, I love my grey merino wool shirt and black longsleeve shirts.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Force yourself to go out and do things sometimes. In the moment it&#x27;s easy to get caught up and just want to chill, but I find myself wishing that I had hiked some more of Korea&#x27;s mountains and visited some more temples.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Get off the computer sometimes and walk around. I have a lot of memorable experiences just from deciding to walk around for a few hours without any destination in mind.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Use a money belt, which is not to be confused with a fanny pack.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Get travel insurance.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;At six months, this trip&#x27;s duration is much longer than most of the ones I see on &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;onebag&quot;&gt;&#x2F;r&#x2F;onebag&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;digitalnomad&quot;&gt;&#x2F;r&#x2F;digitalnomad&lt;&#x2F;a&gt;. If I only traveled for 2-3 weeks then I could get away with one goruck 40L bag.&lt;&#x2F;p&gt;
&lt;p&gt;Given my fashion constraints my packing list is considerably bulkier than most lists that I&#x27;ve seen. Many people save space by bring as few clothes as possible–this is respectable too! It&#x27;s just not for me though.&lt;&#x2F;p&gt;
&lt;p&gt;I hope that some of the stuff here is of use to you.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Automatically deploy your blog via Git with Caddy and Docker</title>
                <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/automatically-deploy-your-blog-via-git-caddy-docker/</link>
                <guid>andrewzah.com/posts/automatically-deploy-your-blog-via-git-caddy-docker/</guid>
                <description>&lt;p&gt;Over the years, I&#x27;ve slowly and incrementally optimized my blog. Originally I used an entire rails setup with postgres, because that was the first thing I really learned how to program. Yet that&#x27;s quite the overkill for a static blog... I don&#x27;t even include comments anymore.&lt;&#x2F;p&gt;
&lt;p&gt;This is where &lt;a href=&quot;https:&#x2F;&#x2F;getzola.org&quot;&gt;Zola&lt;&#x2F;a&gt; comes in, previously named &lt;em&gt;Gutenberg&lt;&#x2F;em&gt;. It&#x27;s a static site generator written in Rust that uses &lt;a href=&quot;https:&#x2F;&#x2F;tera.netlify.com&#x2F;&quot;&gt;Tera&lt;&#x2F;a&gt; for templating. It serves as a counterpart to &lt;a href=&quot;https:&#x2F;&#x2F;gohugo.io&#x2F;&quot;&gt;Hugo&lt;&#x2F;a&gt;, written in Golang. Both have a similar featureset, so I chose Zola since I use Rust and can contribute if needed.&lt;&#x2F;p&gt;
&lt;p&gt;However basically &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Echarles&#x2F;cdaniels.net&#x2F;tree&#x2F;master&#x2F;bin&#x2F;buildit&quot;&gt;any static site generation system&lt;&#x2F;a&gt; can work, so long as you end up with files generated to your liking.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zola&quot;&gt;Zola&lt;&#x2F;h2&gt;
&lt;p&gt;Feel free to skip this section if you already have your own static site generation system.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;One caveat&lt;&#x2F;strong&gt;: Zola minifies sass by default but not javascript. I use a &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;personal-site&#x2F;tree&#x2F;master&#x2F;Makefile&quot;&gt;Makefile&lt;&#x2F;a&gt; to minify the js files and bundle them.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;getting-started&quot;&gt;Getting started&lt;&#x2F;h4&gt;
&lt;p&gt;Zola has a &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;installation&#x2F;&quot;&gt;getting started&lt;&#x2F;a&gt; guide. For inspiration, you can look at the &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;personal-site&#x2F;tree&quot;&gt;source code for this very blog&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;blob&#x2F;master&#x2F;EXAMPLES.md&quot;&gt;different sites using Zola&lt;&#x2F;a&gt;.&lt;a id=&quot;footnote-cite-0&quot; href=&quot;#footnote-0&quot;&gt;(0)&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;my-setup&quot;&gt;My setup&lt;&#x2F;h4&gt;
&lt;p&gt;This is what my site&#x27;s directory looks like:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;.
├── binary-data&#x2F;
├── Caddyfile
├── config.toml
├── content&#x2F;
├── docker-compose.yml
├── Dockerfile
├── LICENSE
├── Makefile
├── public&#x2F;
├── sass&#x2F;
├── static&#x2F;
├── syntaxes&#x2F;
├── templates&#x2F;
└── themes&#x2F;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;binary-data&lt;&#x2F;code&gt; is where I store all the screenshots, pdfs, and other binary data I refer to my posts. For the actual posts I upload these to an amazon S3 bucket, but I keep these as a backup, &lt;em&gt;outside&lt;&#x2F;em&gt; of git.&lt;a id=&quot;footnote-cite-1&quot; href=&quot;#footnote-1&quot;&gt;(1)&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;sass&#x2F;&lt;&#x2F;code&gt; and &lt;code&gt;static&#x2F;&lt;&#x2F;code&gt; are pretty easy: the former gets compiled to css, the latter gets copied directly to the &lt;code&gt;public&#x2F;&lt;&#x2F;code&gt; directory during generation.&lt;&#x2F;p&gt;
&lt;p&gt;For code, &lt;code&gt;themes&lt;&#x2F;code&gt; contains the syntax highlighting theme, and &lt;code&gt;syntaxes&lt;&#x2F;code&gt; contains sublime syntax files I added because Zola doesn&#x27;t support &lt;a href=&quot;http:&#x2F;&#x2F;slim-lang.com&#x2F;&quot;&gt;slim&lt;&#x2F;a&gt; syntax highlighting yet.&lt;&#x2F;p&gt;
&lt;p&gt;This leaves us &lt;code&gt;content&lt;&#x2F;code&gt;, the actual posts and pages, and &lt;code&gt;templates&lt;&#x2F;code&gt;, for how to render them. &lt;code&gt;templates&lt;&#x2F;code&gt; also contains &lt;code&gt;shortcodes&#x2F;&lt;&#x2F;code&gt;, which function much like wordpress&#x27; shortcodes.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;templating&quot;&gt;Templating&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;personal-site&#x2F;tree&#x2F;master&#x2F;templates&quot;&gt;These&lt;&#x2F;a&gt; are all the templates I&#x27;ve made. Naturally it can get as complex as you want. I generally have one per page or page type, such as &#x2F;projects or &#x2F;posts.&lt;&#x2F;p&gt;
&lt;p&gt;At a minimum, you probably want a &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;personal-site&#x2F;tree&#x2F;master&#x2F;templates&#x2F;base.html&quot;&gt;base.html&lt;&#x2F;a&gt; to deal with the oh-so-fun SEO stuff, and a &lt;code&gt;macros.html&lt;&#x2F;code&gt; for &amp;quot;dynamically&amp;quot; rendering things. I use it for the navigation bar, footnotes, references, citations, and rendering links.&lt;&#x2F;p&gt;
&lt;p&gt;With child templates, you can use blocks to inject content back to the parent:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&amp;lt;!-- base.html --&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&amp;lt;!-- constants in base.html header --&amp;gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;

  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&amp;lt;!-- set from child --&amp;gt;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;{% block title %}{% endblock title %}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
  {% block head %}{% endblock head %}
&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;then in the child you define the block:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&amp;lt;!-- zola provides objects like page&#x2F;section&#x2F;config, see the docs --&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
{% block title %}{{ page.title }} | {{ config.title }}{% endblock title %}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Thrilling stuff.&lt;&#x2F;p&gt;
&lt;p&gt;If you look at my source it can appear a tad complex now, but I just slowly added things as they came up– like the page title, then custom SEO attributes, etc.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;macros&quot;&gt;Macros&lt;&#x2F;h4&gt;
&lt;p&gt;Tera&#x27;s macro system is really useful. One of my use cases was to show the tags and categories below a post:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;{% macro render_tags(tags) %}
  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;tags&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
    Tags: 
    {% for tag in tags %}
      {% if loop.last %}
        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;tags&#x2F;{{ tag | slugify }}&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;{{ tag | title }}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
      {% else %}
        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;&#x2F;tags&#x2F;{{ tag | slugify }}&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;{{ tag | title }}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt; | 
      {% endif %}
    {% endfor %}
  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
{% endmacro render_tags %}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Yes, I should probably clean them up a bit. They work good enough for now.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shortcodes&quot;&gt;Shortcodes&lt;&#x2F;h4&gt;
&lt;p&gt;Shortcodes are awesome. Two main things I use them for:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;footnotes, citations, references&lt;&#x2F;li&gt;
&lt;li&gt;generating boilerplate for lity.js (a lightbox lib)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&amp;lt;!-- img.html --&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;{{url}}&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;data-lity data-lity-desc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;{{desc}}&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;alt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;{{desc}}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;img &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;full&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;async-src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;{{url}}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&#x2F;&amp;gt;
&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
{% if t %}
  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;image-desc&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt; {{t}} &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
{% endif %}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&amp;lt;!-- fn.html --&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;footnote-cite-{{num}}&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;#footnote-{{num}}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;({{num}})&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;My &lt;a href=&quot;..&#x2F;korean-for-programmers&#x2F;#finally-a-sentence&quot;&gt;Korean for Programmers&lt;&#x2F;a&gt; post uses ~5 shortcodes to &lt;span class=&quot;hl hl-red&quot;&gt;
highlight
&lt;&#x2F;span&gt; words in different colors:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&amp;lt;!-- hlm.html --&amp;gt;
&amp;lt;!-- where t=text,c=css color class name--&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#795da3;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;hl hl-middle hl-{{c}}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
  {{t}}
&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Okay, okay.. Time for the real stuff.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;static-assets-repo&quot;&gt;Static Assets Repo&lt;&#x2F;h2&gt;
&lt;p&gt;Now that you have your static files, commit them to a new git repo. With Zola, I use &lt;code&gt;rsync&lt;&#x2F;code&gt; to move the output from &lt;code&gt;public&#x2F;&lt;&#x2F;code&gt; to another directory–since &lt;code&gt;zola build&lt;&#x2F;code&gt; nukes it each time.&lt;&#x2F;p&gt;
&lt;p&gt;As stated earlier I keep binary files like images in a separate directory, and in the posts themselves I link to amazon s3. If you want to link to assets locally, you might need something like &lt;a href=&quot;https:&#x2F;&#x2F;git-lfs.github.com&#x2F;&quot;&gt;Git LFS&lt;&#x2F;a&gt; from Github or or a different solution.&lt;&#x2F;p&gt;
&lt;p&gt;I keep my statically generated assets at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;azah&#x2F;personal-site-public&quot;&gt;github.com&#x2F;azah&#x2F;personal-site-public&lt;&#x2F;a&gt; because sourcehut doesn&#x27;t support webhooks yet.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;caddy&quot;&gt;Caddy&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;caddyserver.com&#x2F;&quot;&gt;Caddy&lt;&#x2F;a&gt; is an awesome HTTP&#x2F;2 web server. It handles SSL certs for you automatically via Lets Encrypt, and it has a &lt;code&gt;git&lt;&#x2F;code&gt; plugin which we&#x27;ll be using. The git plugin clones or updates a repo for us, so we can now push content to a git repo and have it automatically update!&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s create the Caddyfile:&lt;&#x2F;p&gt;
&lt;p&gt;{{note(c=&amp;quot;Warning&amp;quot;, t=&amp;quot;Use a port (like :2015) for local testing instead of the actual domain! If you run Caddy with this caddyfile locally without the -disable-acme-auth, caddy will repeatedly try to authorize, quickly ratelimiting you from Let&#x27;s Encrypt! You can also use &amp;quot;tls off&amp;quot; to skip it entirely.&amp;quot;)
}}&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;# Caddyfile
yoursite.com, www.yoursite.com {
  gzip
  tls your@email.gtld

  cache {
    default_max_age 10m
  }

  git {
    hook &#x2F;webhook {%SITE_WEBHOOK%}
    repo https:&#x2F;&#x2F;github.com&#x2F;azah&#x2F;personal-site-public.git
    branch master
    clone_args --recurse-submodules
    pull_args --recurse-submodules
    interval 86400
    hook_type github
  }

  root &#x2F;www&#x2F;public
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;SITE_WEBHOOK&lt;&#x2F;code&gt; environment variable is set in &lt;code&gt;.env&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Note that a webhook is optional. In fact, &lt;a href=&quot;https:&#x2F;&#x2F;caddyserver.com&#x2F;docs&#x2F;http.git&quot;&gt;all of the git directives here are optional&lt;&#x2F;a&gt; besides the repo path itself. By default the plugin clones to the root path, &lt;code&gt;&#x2F;www&#x2F;public&lt;&#x2F;code&gt; in this case.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve set it to pull once per day as well as listen for requests on &lt;code&gt;&#x2F;webhook&lt;&#x2F;code&gt;. Right now I use github webhooks as &lt;code&gt;sourcehut&lt;&#x2F;code&gt; doesn&#x27;t seem to support webhooks yet.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re running multiple containerized services you can use caddy as a proxy as well. You can see the &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;andrewzah.com&#x2F;tree&quot;&gt;source for andrewzah.com&#x27;s docker script&lt;&#x2F;a&gt; as an example. I have an &lt;code&gt;http&lt;&#x2F;code&gt; docker service that proxies to my &lt;code&gt;website&lt;&#x2F;code&gt; service, which looks like the following:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;# services&#x2F;http&#x2F;Caddyfile
www.andrewzah.com, andrewzah.com, andrei.blue {
  gzip
  tls zah@andrewzah.com

  log &#x2F; stdout {combined}
  errors stderr

  proxy &#x2F;webhook http:&#x2F;&#x2F;website:1111&#x2F;webhook {
    transparent
  }

  proxy &#x2F; http:&#x2F;&#x2F;website:1111
}

...
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;docker&quot;&gt;Docker&lt;&#x2F;h2&gt;
&lt;p&gt;Lastly, we&#x27;ll run all of this inside a docker container, so we need a &lt;code&gt;Dockerfile&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;FROM alpine:edge
LABEL caddy_version = &amp;quot;1.0.0&amp;quot; architecture=&amp;quot;amd64&amp;quot;

# Caddy
RUN adduser -S caddy

ARG plugins=http.git,http.cache
ARG version=v1.0.0

RUN apk add --no-cache --virtual .build-caddy openssh-client tar curl \
  &amp;amp;&amp;amp; apk add --no-cache git \
  &amp;amp;&amp;amp; curl --silent --show-error --fail --location \
  --header &amp;quot;Accept: application&#x2F;tar+gzip, application&#x2F;x-zip, application&#x2F;octet-stream&amp;quot; -p \
  &amp;quot;https:&#x2F;&#x2F;caddyserver.com&#x2F;download&#x2F;linux&#x2F;amd64?version=${version}&amp;amp;plugins=${plugins}&amp;amp;license=personal&amp;amp;telemetry=off&amp;quot; \
  | tar --no-same-owner -C &#x2F;usr&#x2F;bin -xz caddy \
  &amp;amp;&amp;amp; chmod 0755 &#x2F;usr&#x2F;bin&#x2F;caddy \
  &amp;amp;&amp;amp; apk del --purge .build-caddy

RUN &#x2F;usr&#x2F;bin&#x2F;caddy --plugins
RUN mkdir &#x2F;www \
  &amp;amp;&amp;amp; chown -R caddy &#x2F;www

COPY Caddyfile &#x2F;etc&#x2F;Caddyfile

USER caddy
ENTRYPOINT [&amp;quot;&#x2F;usr&#x2F;bin&#x2F;caddy&amp;quot;]
CMD [&amp;quot;--conf&amp;quot;, &amp;quot;&#x2F;etc&#x2F;Caddyfile&amp;quot;, &amp;quot;--log&amp;quot;, &amp;quot;stdout&amp;quot;, &amp;quot;-agree&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and a corresponding &lt;code&gt;docker-compose&lt;&#x2F;code&gt; file:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#63a35c;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;3.7&amp;#39;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;services&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;web&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;restart&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;always
    build&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;.
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;image&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;&amp;lt;your_dockerhub_username&amp;gt;&#x2F;personal-site
    ports&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;1111&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;env_file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;:
      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;.env&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I try to use alpine docker whenever possible. This image fetches a predefined Caddy version, v1.0.0, with the &lt;code&gt;cache&lt;&#x2F;code&gt; and &lt;code&gt;git&lt;&#x2F;code&gt; plugins.&lt;&#x2F;p&gt;
&lt;p&gt;We need to pass the &lt;code&gt;-agree&lt;&#x2F;code&gt; flag to agree to Let&#x27;s Encrypt&#x27;s Subscriber Agreement. Caddy will not run otherwise unless you use &lt;code&gt;-disable-http-challenge&lt;&#x2F;code&gt; (or specify http&#x2F;a port), but we want HTTPS, no?&lt;&#x2F;p&gt;
&lt;p&gt;Deploying the image is just &lt;code&gt;docker push&lt;&#x2F;code&gt; once you&#x27;ve signed in via the docker cli. &lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;...and that&#x27;s pretty much it. For your VPS, you&#x27;ll want to install docker and&#x2F;or docker-compose, then run the image. If you set up a corresponding docker-compose file, you can do &lt;code&gt;docker-compose pull &amp;amp;&amp;amp; docker-compose up -d&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re using webhooks, don&#x27;t forget to configure the webhook on github&#x2F;gitlab&#x2F;bitbucket&#x2F;etc.&lt;&#x2F;p&gt;
&lt;p&gt;If configured correctly, you should now be able to git push your static assets and automatically have the container pull them in!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
</description>
            </item>
        
            <item>
                <title>Friends</title>
                <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/friends/</link>
                <guid>andrewzah.com/friends/</guid>
                <description>&lt;h2 id=&quot;friendly-sites&quot;&gt;Friendly sites&lt;&#x2F;h2&gt;
&lt;p&gt;Links to sites operated by friends, colleagues, and acquaintances that write about interesting things. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;cdaniels.net&quot;&gt;Charles Daniels&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;honeymouse&#x2F;&quot;&gt;honeymouse&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
            </item>
        
            <item>
                <title>Web Assembly: What is it? Does it do things? Let&#x27;s find out!</title>
                <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/talks/web-assembly-rust-seoul/</link>
                <guid>andrewzah.com/talks/web-assembly-rust-seoul/</guid>
                <description>&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% !TEX program = XeLaTeX
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\documentclass&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[aspectratio=169]{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;beamer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;presentation&amp;gt;

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;tikz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;pgfpages&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% notes
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;graphicx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% for syntax highlighting definitions
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;fontspec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% for custom firacode setup
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;listings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% for formatting codeblocks
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[T1]{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;fontenc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\usetheme&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{AnnArbor}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\usecolortheme&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{spruce}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\usecolortheme&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{rose}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\setbeamertemplate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{navigation symbols}{}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\setbeamertemplate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{enumerate items}[default]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\setbeamercolor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{item projected}{bg=green!40!black,fg=white}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\setbeamercolor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{section in toc}{fg=black}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%\setbeameroption{show notes on second screen}


%% code syntax highlighting
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lightgray}{rgb}{.9,.9,.9}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{darkgray}{rgb}{.4,.4,.4}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{purple}{rgb}{0.65, 0.12, 0.82}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-red}{RGB}{204,36,29}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-yellow}{RGB}{215,153,33}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-aqua}{RGB}{104,157,106}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\definecolor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-green}{RGB}{69,133,136}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\lstdefinelanguage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{JavaScript}{
  keywords={break, case, then, catch, continue, debugger, default, delete, do, else, false, finally, for, function, if, in, instanceof, new, null, return, switch, this, throw, true, try, typeof, var, void, while, with},
  morecomment=[l]{&#x2F;&#x2F;},
  morecomment=[s]{&#x2F;*}{*&#x2F;},
  morestring=[b]&amp;#39;,
  morestring=[b]&amp;quot;,
  ndkeywords={class, export, boolean, throw, implements, import, this},
  keywordstyle=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-green}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  ndkeywordstyle=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{darkgray}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  identifierstyle=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{black}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  stringstyle=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{darkgray}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  frame=none,
  sensitive=true
}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\lstdefinelanguage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Rust}{
  keywordstyle=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-yellow}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  keywordstyle=[1]{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-aqua}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;},
  keywordstyle=[2]{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-yellow}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;},
  keywordstyle=[3]{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-red}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;},
  morestring=[b]&amp;quot;,
  morestring=[b]&amp;#39;,
  stringstyle=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gray}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  otherkeywords = {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;Display, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;str, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\#&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;\[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;wasm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;bindgen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;\]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;},
  morekeywords=[1]{derive, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\#&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;\[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;wasm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;bindgen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;\]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, wasm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;bindgen, js&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;namespace, console},
  morekeywords=[2]{Serialize, KoreanInteger, Deserialize, String, i128, i32, char, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;str, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;Display},
  morekeywords=[3]{use, pub, fn, extern, struct, self, impl},
  frame=none,
  sensitive=true
}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\lstdefinelanguage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{WASM}{
  keywords=[1]{module, type, func, table, memory, export, param, result},
  keywordstyle=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{gruv-green}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ttfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  frame=none,
  sensitive=true
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\lstset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;  basicstyle  = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\fontfamily&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{pcr}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\fontsize&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{10pt}{12pt}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\selectfont&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  numberstyle = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\small&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
  numbersep   = 10pt,
  frame=none,
}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%% behavior modifications

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\newenvironment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\itemize\addtolength&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\itemsep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}{10pt}}{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\enditemize&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\AtBeginSection&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[]
{
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;Journey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\tableofcontents&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[currentsection]
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%% metadata

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[WASM!]{Web Assembly: What does it do? Does it do things? Let&amp;#39;s find out!}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\author&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[]{Andrew Zah &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&amp;lt;zah@andrewzah.com&amp;gt;}}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\institute&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[Rust Meetup Seoul]{Rust Meetup Seoul}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\date&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{May 28, 2019}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%% preamble over

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{document}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\maketitle

\section*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Journey}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\tableofcontents
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%%%%%%%%%%%%%%%%%%%

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{What is WASM?}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;Web Assembly&amp;#39;s Definition&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{from webassembly.org (emphasis mine)}
    WebAssembly (abbreviated Wasm) is a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{binary instruction format} for a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{stack-based virtual machine}. Wasm is designed as a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{portable target} for compilation of high-level languages like C&#x2F;C++&#x2F;Rust, enabling &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{deployment on the web} for client and server applications.
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;What WASM is not&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM is not a programming language, though you can write by hand
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; WASM isn&amp;#39;t standalone: it needs a host
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; WASM is not intended to replace javascript
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;what is it actually, though?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM&amp;#39;s format isn&amp;#39;t coupled to any OS or architecture
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; Very similar to Java&amp;#39;s bytecode or C&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\#&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;#39;s CLR
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; Name and definition is a misnomer
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; It can run &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{anywhere} you can build a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{host}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;WASM&amp;#39;s specification&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{stack-based}, not register-based
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; WASM 1.0 only has 4 primitives
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &#96;i32&#96;, &#96;i64&#96;, &#96;f32&#96;, &#96;f64&#96; 
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; No arrays
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;5-&amp;gt; no &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{jmp} instruction
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\note&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[item]{Forth and retro are just about the only somewhat-mainline language that are stack-based.}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\note&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[item]{RPL also exists but&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ldots&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;memory&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
      &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM has no &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{new::()} operator or &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{heap}
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; There are no objects or or garbage collection
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; Instead, WASM has &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{linear memory}
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; this causes a need for linearization and bitmasking, etc
      &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
      &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{center}
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\uncover&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; {
          &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{tikzpicture}
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\draw&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; [gray] (0,0) rectangle (4,1) node[pos=.5] {unused};
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\draw&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; [teal] (0,1) rectangle (4,2) node[pos=.5] {var3 [80&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ldots&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;119]};
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\draw&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; [gray] (0,2) rectangle (4,3) node[pos=.5] {var2 [40&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ldots&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;79]};
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\draw&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; [teal] (0,3) rectangle (4,4) node[pos=.5] {var1 [0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\ldots&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;39]};
          &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{tikzpicture}
        }
      &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{center}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;anyone can be a WASM host!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{alertblock}{The Host needs to:}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{enumerate}
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Load and validate the WASM binary (the file, not the logic)
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; Expose Exports
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; Satisfy Imports
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; Interpret &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Execute Modules
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;5-&amp;gt; Isolate Modules
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{enumerate}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{alertblock}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;infinity and beyond?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WebAssembly modules are hotswappable
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; PLCs (Programmable Logic Controllers) could adhere to a well-known contract
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; This would let us program for hardware controllers in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{any language}!
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasmi} is an rust open-source wasm interpreter
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{serverless-wasm} does indeed exist
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;security&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM binaries can always be converted back to plaintext
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; Do not put secrets in WASM modules
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Message handoffs} are not always secure!
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; Accordingly, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{sign} and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{encrypt} modules!
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;add example: rust side&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.rs}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=rust]
#[no_mangle]
pub extern &amp;quot;C&amp;quot; fn add_one(x: i32) -&amp;gt; i32 {
    x + 1
}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;add example: generated WASM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.wasm}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=wasm]
(module
  (type $t0 (func (param i32) (result i32)))
  (func $add_one
      (export &amp;quot;add_one&amp;quot;) (type $t0) (param $p0 i32) (result i32)
    get_local $p0
    i32.const 1
    i32.add)
  (table $T0 1 1 anyfunc)
  (memory $memory (export &amp;quot;memory&amp;quot;) 17))
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM is simply a instruction format that&amp;#39;s portable
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; WASM can run anywhere so long as a host exists
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Just because you can write WASM doesn&amp;#39;t mean you should
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%%%%%%%%%%%%%%%%%%%

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Applications of WASM in Rust}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;wasm-bindgen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; CLI tool to generate bindings for the wasm code to work
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; can be run manually but &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-pack} simplifies things
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{automates} linearization, strings, complex types bindings
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;configuring cargo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{Cargo.toml}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
[lib]
crate-type = [&amp;quot;cdylib&amp;quot;]

[build]
target = &amp;quot;wasm32-unknown-unknown&amp;quot;

[dependencies]
wasm-bindgen = &amp;quot;0.2.45&amp;quot;

[dependencies.rand]
features = [&amp;quot;wasm-bindgen&amp;quot;]
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;rust wasm:  functions&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.rs}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=rust]
use wasm_bindgen::prelude::*;
#[wasm_bindgen]
extern &amp;quot;C&amp;quot; {
    #[wasm_bindgen(js_namespace = console)]
    fn log(s: &amp;amp;str);
    #[wasm_bindgen(method, structural, js_namespace = ROT)]
    fn draw(this: &amp;amp;Display, x: i32, y: i32, ch: &amp;amp;str);
}

#[wasm_bindgen]
pub fn greet(name: &amp;amp;str) {
    log(&amp;amp;format!(&amp;quot;Hello, {}!&amp;quot;, name));
}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;js\_sys and web\_sys provide bindings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.rs}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=rust]
use wasm_bindgen::prelude::*;
use wasm_bindgen::JsValue;
use web_sys::console::log_1;

#[wasm_bindgen]
pub fn hi() {
  log_1(JsValue::from_str(&amp;quot;hi&amp;quot;));
}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;rust wasm: structs and impls&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.rs}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=rust]
#[wasm_bindgen]
pub struct Counter { count: i32, }

#[wasm_bindgen]
impl Counter {
  pub fn get(&amp;amp;self) -&amp;gt; char {
    log(format!(&amp;quot;Count: {}&amp;quot;, self.count));
    self.count
  }
}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}


&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;wasm-pack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;1-&amp;gt; higher level wrapper for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-bindgen}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; commands: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{build}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{test}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{pack}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{publish}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{login}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-bindgen} is still a dependency
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;wasm-pack output in &#x2F;pkg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{exa -T -L1 pkg&#x2F;}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
pkg&#x2F;
  package.json
  wasm_pack_test.d.ts
  wasm_pack_test.js
  wasm_pack_test_bg.d.ts
  wasm_pack_test_bg.wasm
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;wasm-pack output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{main.js}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=javascript]
const wasm = import(&amp;#39;.&#x2F;pkg&#x2F;hello_world&amp;#39;);

wasm
  .then(m =&amp;gt; m.greet(&amp;#39;World!&amp;#39;))
  .catch(console.error);
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;extensions and alternatives&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{web-sys} and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{js-sys} provide raw js&#x2F;web API bindings
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{std-web} has a similar goal but provides more JS interop + APIs
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{rust-neon} (external tool) generates &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Node.js} modules
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{yew} is a web framework that compiles to WASM
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;optimizing the WASM output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
      &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-opt} can significantly reduce binary size 
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm2wat} can be used to confirm
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{twiggy} is a wasm profiler that analyzes call graphs
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;4-&amp;gt; set &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lto = true} in Cargo.toml, but limit to release only
      &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\uncover&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt;{
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\includegraphics&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[scale=0.34]{twiggy.png}
      }
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%%%%%%%%%%%%%%%%%%%

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{A Real, Non-Trivial WASM App}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;korean apps&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Initially I wrote a cargo crate, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{korean-numbers}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;2-&amp;gt; I wanted a way to use this logic in a webapp with React
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt;3-&amp;gt; I went with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-bindgen} calls in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{package.json} scripts
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wideitemize}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;project structure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{exa -T -L2 .}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
dist&#x2F;
frontend&#x2F;
native&#x2F;
node_modules&#x2F;
package.json
webpack.config.js
yarn.lock
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;why wasm-pack may be better&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{package.json}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
&amp;quot;scripts&amp;quot;: {
  &amp;quot;build-debug&amp;quot;: &amp;quot;cd native; cargo +nightly build
      --target wasm32-unknown-unknown
    &amp;amp;&amp;amp; wasm-bindgen
        target&#x2F;wasm32-unknown-unknown&#x2F;debug&#x2F;korean_wasm.wasm
      --out-dir ..&#x2F;frontend&#x2F;wasm; cd ..&amp;quot;
}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;rust side: glue code&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{native&#x2F;src&#x2F;lib.rs}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=rust]
use korean_nums::{ NumberSystem, ...}
#[wasm_bindgen]
struct KoreanInteger { number: i128, hangeul: String, }

#[wasm_bindgen]
pub fn random_korean_int(
  lower_str: &amp;amp;str, upper_str: &amp;amp;str, num_system: &amp;amp;str)
  -&amp;gt; KoreanInteger
{ ... }
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;frontend layout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{exa -T -L2 frontend&#x2F;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
components&#x2F;
  korean_numbers&#x2F;
index.html
index.js
wasm&#x2F;
  korean_wasm.d.ts
  korean_wasm.js
  korean_wasm_bg.d.ts
  korean_wasm_bg.wasm
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;calling code from the frontend&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{frontend&#x2F;components&#x2F;korean&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;numbers&#x2F;index.js}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}[language=javascript]
const { random_int } = require(&amp;quot;..&#x2F;..&#x2F;wasm&#x2F;korean_wasm&amp;quot;);

const res = random_korean_int(0, 10, &amp;quot;sino&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;non-trivial optimizations&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.45&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
      &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{ls -lah | rg wasm | awk &#96;{print &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;5, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;9}&amp;#39; | sort}
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
282K wasm-opt-Oz-flag.wasm
283K wasm-opt-Os-flag.wasm
306K wasm-opt-O3-flag.wasm
573K wasm-opt-default.wasm
695K bindgen-development.wasm
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}{0.45&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\textwidth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}&amp;lt;2-&amp;gt;
      &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{release mode versions}
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
126K wasm-opt-lto-Oz-flag.wasm
136K bindgen-release-lto.wasm
166K bindgen-release.wasm
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{column}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{columns}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;inspecting with twiggy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{twiggy top wasm-bindgen-default.wasm}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
Shallow Bytes │ Shallow &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% │ Item
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;124493 | 17.50&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | &amp;quot;function names&amp;quot; subsection
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;57598  |  8.10&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | rand_hc::hc128::Hc128Core::sixteen_steps
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;50394  |  7.09&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | &amp;lt;rand_hc::hc128::Hc128Core&amp;gt;...::generate
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;24781  |  3.48&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | data[1]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;22978  |  3.23&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | data[2]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; 7624  |  1.07&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | &amp;lt;rand::rngs::entropy::EntropyRng&amp;gt;...::try_fill_bytes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; 6928  |  0.97&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | korean_nums::parse::parse_hangeul_sino
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; 4918  |  0.69&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | core::num::flt2dec::strategy::dragon::mul_pow10
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[fragile]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;inspecting release mode with twiggy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}{twiggy top wasm-opt-Oz-release-lto.wasm}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
Shallow Bytes │ Shallow &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% │ Item
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;9753 | 7.55&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | data[0]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;8556 | 6.62&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | code[33]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;8457 | 6.54&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | data[1]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;7012 | 5.42&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | code[76]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;6156 | 4.76&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | code[127]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;6145 | 4.75&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;% | code[75]
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{lstlisting}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{block}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{center}
    {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\huge&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Thank you} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    Andrew Zah
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{center}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;%%%%%%%%%%%%%%%%%%%

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\section*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{Appendix}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}[plain]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\includegraphics&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[scale=0.34]{webassembly-studio.png}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;further reading&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{itemize}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{WASM Homepage} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2F;&#x2F;webassembly.org}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{WASM Spec} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2F;&#x2F;webassembly.github.io&#x2F;spec&#x2F;}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasm-bindgen docs} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2F;&#x2F;rustwasm.github.io&#x2F;docs&#x2F;wasm-bindgen&#x2F;}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{stdweb} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2F;&#x2F;github.com&#x2F;koute&#x2F;stdweb}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{twiggy profiler} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;twiggy}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wat2wasm, wasm2wat, and more} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2F;&#x2F;github.com&#x2F;WebAssembly&#x2F;wabt}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{websys} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2F;&#x2F;rustwasm.github.io&#x2F;wasm-bindgen&#x2F;api&#x2F;web&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;sys&#x2F;}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{neon-bindings} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2F;&#x2F;github.com&#x2F;neon-bindings&#x2F;neon}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{optimizing emscriptem} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2F;&#x2F;emscripten.org&#x2F;docs&#x2F;optimizing&#x2F;Optimizing-Code.html}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\item \alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{wasmi: rust wasm interpreter} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\texttt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{https:&#x2F;&#x2F;github.com&#x2F;paritytech&#x2F;wasmi}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{itemize}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\frametitle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;bibliography&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{thebibliography}{Dijkstra, 1982}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\bibitem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[Hoffman, 2019]{Hoffman2019}
      K.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;Hoffman.
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\newblock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Programming WebAssembly with Rust &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;\\
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\small&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Unified Development for Web, Mobile, and Embedded Applications }
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\newblock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{The Pragmatic Programmers, LLC}
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;\newblock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{ISBN-13: 978-1-68050-636-5}
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{thebibliography}
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{frame}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;{document}

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;</description>
            </item>
        
            <item>
                <title>Better Anki Usage Guide [2019]</title>
                <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/better-anki-usage-guide-2019/</link>
                <guid>andrewzah.com/posts/better-anki-usage-guide-2019/</guid>
                <description>&lt;p&gt;As you may or may not know, I love &lt;a href=&quot;https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;&quot;&gt;Anki&lt;&#x2F;a&gt;, the spaced repetition flash cards app. I&#x27;ve been using it in my Korean learning journey for almost one and a half years now and I&#x27;ve written about it before. It&#x27;s a good app, but you can have a much better experience by making some modifications to it.&lt;&#x2F;p&gt;
&lt;p&gt;If you don&#x27;t know what Anki is or why it&#x27;s compelling, I recommend you read &lt;a href=&quot;http:&#x2F;&#x2F;augmentingcognition.com&#x2F;ltm.html&quot;&gt;&lt;em&gt;Augmenting Long-term Memory&lt;&#x2F;em&gt;&lt;&#x2F;a&gt;, a blog post by Michael Nielsen. &lt;a href=&quot;https:&#x2F;&#x2F;senrigan.io&#x2F;blog&#x2F;everything-i-know-strategies-tips-and-tricks-for-spaced-repetition-anki&#x2F;&quot;&gt;&lt;em&gt;Everything I know: Tips and Tricks for Anki&lt;&#x2F;em&gt;&lt;&#x2F;a&gt; by Jeff Shek also has a beginner&#x27;s guide.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re new to Anki, the very first thing I recommend doing is &lt;a href=&quot;https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;docs&#x2F;manual.html&quot;&gt;reading the manual&lt;&#x2F;a&gt;, or at least &lt;a href=&quot;https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;docs&#x2F;manual.html#the-basics&quot;&gt;the basics&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I recommend using Anki for at least 2-3 weeks before reading the rest of this article.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;changing-default-settings&quot;&gt;Changing default settings&lt;&#x2F;h2&gt;
&lt;p&gt;Anki out of the box has two problematic defaults, and one default that I don&#x27;t recommend personally.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;resetting-card-progress&quot;&gt;Resetting card progress&lt;&#x2F;h3&gt;
&lt;p&gt;Let&#x27;s say you have learned a card, but when you review it you make a mistake in recalling it, for whatever reason. Call it a brain fart, or pressing too quickly, etc. Or you simply forgot!&lt;&#x2F;p&gt;
&lt;p&gt;By default, Anki resets your progress to that of a new card. So even if you had worked the card up to a ~4 month interval, now you have to see it in  1 day, 2 days, 4 days, all over again...&lt;&#x2F;p&gt;
&lt;p&gt;Even if you forget a card, you still had learned it at one point. Which means re-learning it is now significantly easier. By completely resetting the card&#x27;s intervals, Anki is wasting your time. It slowly conditions you to be unwilling to press &lt;code&gt;Again&lt;&#x2F;code&gt;, which is not desireable at all.&lt;a id=&quot;footnote-cite-0&quot; href=&quot;#footnote-0&quot;&gt;(0)&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;&#x2F;strong&gt;: In your deck&#x27;s options group under Lapses, change &lt;code&gt;New interval&lt;&#x2F;code&gt; to &lt;code&gt;70%&lt;&#x2F;code&gt;. This means if you forget a card, the new interval will be 70% of the old one. As for why I chose 70%, it just felt like an appropriate amount–feel free to play with different percentages to see what works best for you.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;taking-too-long-to-mark-leeches&quot;&gt;Taking too long to mark Leeches&lt;&#x2F;h3&gt;
&lt;p&gt;After you initially learn a card (the card reached  a 1 day interval in default anki), if you forget it 8 times, Anki marks it as a Leech and suspends the card, not showing it to you anymore.&lt;&#x2F;p&gt;
&lt;p&gt;A card being a leech generally means its too complicated, or you&#x27;re getting it confused with a similar one. 8 times means it&#x27;s going to take way too long to identify cards that are problematic.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;&#x2F;strong&gt;: In your deck&#x27;s options group under Lapses, change &lt;code&gt;Leech threshold&lt;&#x2F;code&gt; to &lt;code&gt;4&lt;&#x2F;code&gt;. You may also want to change &lt;code&gt;Leech action&lt;&#x2F;code&gt; to &lt;code&gt;tag only&lt;&#x2F;code&gt;. This way you can easily sort for leech cards and modify or delete them.&lt;&#x2F;p&gt;
&lt;p&gt;As for handling leech cards, you generally want to simplify the card, or delete it outright. With the time and energy that you wasted on trying to recall a leech you could have learned a bunch of other cards. If it&#x27;s a word that you don&#x27;t want to delete, you can suspend the card, and practice using that word outside of anki. When you feel more comfortable with it you can unsuspend it.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mixing-new-and-review-cards&quot;&gt;Mixing new and review cards&lt;&#x2F;h3&gt;
&lt;p&gt;By default, Anki mixes new and review cards. However, reviewing is vastly more important than learning new cards–it&#x27;s okay if you don&#x27;t memorize new cards every day, but missing reviews really hurts your memorization progress.&lt;&#x2F;p&gt;
&lt;p&gt;By putting reviews first, you can always do reviews daily and then choose to learn new words or not depending on how busy you are, how tired you are, etc. If the cards are mixed you can&#x27;t do this, making it likely you&#x27;ll just skip Anki for that day entirely, which can can quickly snowball into not using anki at all anymore. This happened to me.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;&#x2F;strong&gt;: In Anki&#x27;s preferences, change &lt;code&gt;Mix new cards and reviews&lt;&#x2F;code&gt; to &lt;code&gt;Show new cards after reviews&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;making-better-card-templates&quot;&gt;Making better card templates&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;strong&gt;Basic&lt;&#x2F;strong&gt; card template in Anki has two fields: &lt;code&gt;Front&lt;&#x2F;code&gt; and &lt;code&gt;Back&lt;&#x2F;code&gt;. This is the minimum for flashcards obviously, but as you make cards it&#x27;s likely you&#x27;ll want to have separate information.&lt;&#x2F;p&gt;
&lt;p&gt;Over time my personal &lt;strong&gt;Zah Korean&lt;&#x2F;strong&gt; card template has grown to eight fields: &lt;code&gt;english&lt;&#x2F;code&gt;, &lt;code&gt;korean&lt;&#x2F;code&gt;, &lt;code&gt;grammarType&lt;&#x2F;code&gt;, &lt;code&gt;samples&lt;&#x2F;code&gt;, &lt;code&gt;hanja&lt;&#x2F;code&gt;, &lt;code&gt;notes&lt;&#x2F;code&gt;, &lt;code&gt;image&lt;&#x2F;code&gt; and &lt;code&gt;sound&lt;&#x2F;code&gt;. On the front I show &lt;code&gt;english&lt;&#x2F;code&gt;, and &lt;code&gt;grammarType&lt;&#x2F;code&gt; as a hint. Some people put sample sentences but I find this leads to short-circuiting your recall; instead of recalling the word you recognize that sentence.&lt;&#x2F;p&gt;
&lt;p&gt;I also have a &lt;strong&gt;Zah Colorcard&lt;&#x2F;strong&gt; template which has a &lt;code&gt;hexColor&lt;&#x2F;code&gt; field. Because I initially tried to learn colors in Korean like regular vocabulary, which makes no sense. Anki lets you pull in values easily in the template&#x27;s html and css sections.&lt;&#x2F;p&gt;
&lt;p&gt;You can modify a card&#x27;s fields by going to Add or Edit, then clicking on &lt;code&gt;Fields...&lt;&#x2F;code&gt;. You can add a new card type by going to Add or Edit, then click on the type, and then click &lt;code&gt;Manage&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;better-styling-with-html-and-css&quot;&gt;Better styling with html and css&lt;&#x2F;h3&gt;
&lt;p&gt;Default anki&#x27;s styling is very plain. I recommend modifying it to show different fields in different colors. For example, my &lt;code&gt;grammarType&lt;&#x2F;code&gt; field is rendered in green while &lt;code&gt;hanja&lt;&#x2F;code&gt; is rendered in purple. I render my color card&#x27;s hex value dynamically. Here&#x27;s what my cards look like; the horizontal line denotes the front and back:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;templates.jpg&quot; data-lity data-lity-desc=&quot;How my templates look for sample cards&quot; alt=&quot;How my templates look for sample cards&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;templates.jpg&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can go to Browse, Add, or Edit and click on &lt;code&gt;Cards...&lt;&#x2F;code&gt; to get to the style dialogue. Some premade decks include nice styling for you, or default to a night mode. For more in-depth info, you can visit &lt;a href=&quot;https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;docs&#x2F;manual.html#card-styling&quot;&gt;styling in the anki manual&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;why-behavior-changing-plugins-are-needed&quot;&gt;Why behavior-changing plugins are needed&lt;&#x2F;h2&gt;
&lt;p&gt;Essentially, the way Anki treats cards is not intuitive, and actually hampers your memorization progress. Let&#x27;s say you&#x27;re reviewing a card–you have four options. &lt;code&gt;Again&lt;&#x2F;code&gt;, if you forget, and &lt;code&gt;Hard&lt;&#x2F;code&gt;, &lt;code&gt;Good&lt;&#x2F;code&gt;, or &lt;code&gt;Easy&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You would assume this means &amp;quot;I (the user) had a hard&#x2F;good&#x2F;easy time recalling this card today&amp;quot;, right? Well, Anki actually sees it as &amp;quot;this card is intrinsically more difficult; please modify it permanently&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Huh?&lt;&#x2F;p&gt;
&lt;p&gt;You see, every card in Anki has an individual &lt;code&gt;ease&lt;&#x2F;code&gt; percentage, starting at 250% by default. The algorithm that calculates a new interval goes like:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;NewInterval = OldInterval × CardEase × DeckIntervalModifier

Where:
  OldInterval: 1 day is the first default value
  CardEase: 250% by default
  DeckIntervalModifier: 1.0 by default, set on a per-deck basis
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When you hit &lt;code&gt;Again&lt;&#x2F;code&gt;, &lt;code&gt;Hard&lt;&#x2F;code&gt; or &lt;code&gt;Easy&lt;&#x2F;code&gt;, Anki modifies the ease by &lt;code&gt;-20%&lt;&#x2F;code&gt;, &lt;code&gt;-15%&lt;&#x2F;code&gt;, or &lt;code&gt;+15%&lt;&#x2F;code&gt;, respectively. A card&#x27;s ease can&#x27;t go lower than 130%. You can see now why people recommend not hitting &lt;code&gt;Easy&lt;&#x2F;code&gt; at all.. it quickly snowballs.&lt;&#x2F;p&gt;
&lt;img class=&quot;smol-img&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;wack.jpg&quot;&#x2F;&gt;
&lt;p&gt;So you might be saying, why is seeing cards too often, aka &amp;quot;overlearning&amp;quot;, an issue? Either way, I&#x27;m seeing more difficult cards more often.. Well, research suggests that after an initial period, the extra time spent doesn&#x27;t actually lead to better recall.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In one study (Rohrer, Taylor, Pashler, Wixted, &amp;amp; Cepeda, 2005), college students learned novel vocabulary (e.g., cicatrix–scar), cycling through a list of word–definition pairs either 5 or 10 times. &lt;strong&gt;The extra 5 cycles yielded a substantial benefit after 1 week, but the gain was no longer apparent after 4 weeks&lt;&#x2F;strong&gt; ... From a long-term perspective, overlearning appears to be inefficient almost to the point of wasting time.[0]&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Now take a look at what happens in Anki if you lower the ease too much:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;ease-example.jpg&quot; data-lity data-lity-desc=&quot;An image showing how a cards ease affects its intervals&quot; alt=&quot;An image showing how a cards ease affects its intervals&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;ease-example.jpg&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p class=&quot;image-desc&quot;&gt; Image taken from Guide to Anki Intervals and Learning Steps[1] &lt;&#x2F;p&gt;
&lt;p&gt;So even if you know a card enough to hit &lt;code&gt;Good&lt;&#x2F;code&gt;, if you had hit &lt;code&gt;Hard&lt;&#x2F;code&gt; 3-4 times prior, the interval growth rate is permanently stunted due to how Anki works. You would have to hit &lt;code&gt;Easy&lt;&#x2F;code&gt; to balance it which is counterintuitive.&lt;&#x2F;p&gt;
&lt;p&gt;Research also suggests that larger spacing is better in the long term.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In a 9-year longitudinal investigation, 4 subjects learned and relearned 300 English-foreign language word pairs. Either 13 or 26 relearning sessions were administered at intervals of 14, 28, or 56 days. Retention was tested for 1, 2, 3, or 5 years after training terminated. &lt;strong&gt;The longer intersession intervals slowed down acquisition slightly, but this disadvantage during training was offset hy substantially higher retention.&lt;&#x2F;strong&gt; Thirteen retraining sessions spaced at 56 days yielded retention comparable to 26 sessions spaced at 14 days.[2]&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Our results can be summarized as follows. We find that over substantial time periods, spacing has powerful (and typically nonmonotonic) effects on retention, with optimal memory occurring when spacing is some modest fraction of the final retention interval (perhaps about 10%–20%).[1]&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;With that out of the way, here are the plugins I use.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;utilizing-subdecks&quot;&gt;Utilizing subdecks&lt;&#x2F;h2&gt;
&lt;p&gt;If you review from multiple decks daily, you can use a parent deck with subdecks to mix reviews. This is my own personal opinion, but I think it&#x27;s better for recall if you change contexts. This is more like recall in real life.&lt;&#x2F;p&gt;
&lt;p&gt;Making subdecks in anki is really easy–just make a parent deck, and drag decks onto it. Or you can manually rename the deck in this format: &lt;code&gt;Parent Deck Name::Subdeck Name&lt;&#x2F;code&gt;. If done right, it should appear like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;subdecks.png&quot; data-lity data-lity-desc=&quot;A picture of anki open displaying how the interface shows subdecks&quot; alt=&quot;A picture of anki open displaying how the interface shows subdecks&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;subdecks.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The only issue is Anki will still do reviews one deck at a time. I tried using the experimental V2 scheduler, but it didn&#x27;t work for me. So now we have to turn to a plugin: &lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;1460733408&quot;&gt;HoochieMama: Randomize Rev Queue&lt;&#x2F;a&gt;. After you install this, open Anki&#x27;s preferences, and in the Muffins tab enable &lt;code&gt;Hoochie Mama! RandRevQ w&#x2F; subdeck limit&lt;&#x2F;code&gt;. &lt;strong&gt;Note&lt;&#x2F;strong&gt;: back up your anki before adding behavior modification plugins like this.&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s it! Now you can review from multiple subdecks, and new cards are still deck by deck. If you want to mix new cards as well, there&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;1173108619&quot;&gt;Hoochie Papa&lt;&#x2F;a&gt;. I personally don&#x27;t think that is as useful.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;utilizing-filter-decks&quot;&gt;Utilizing filter decks&lt;&#x2F;h2&gt;
&lt;h2 id=&quot;visual-plugins&quot;&gt;Visual Plugins&lt;&#x2F;h2&gt;
&lt;p&gt;These aren&#x27;t really necessary but I like seeing stats. Give me all the stats.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;true-retention-by-card-maturity&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;923360400&quot;&gt;True Retention by Card Maturity&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This is basically a fancy stats plugin. You can see a detailed breakdown by day, week, and month, and see your true retention rate. You want roughly 80-90% retention. [TODO]&lt;&#x2F;p&gt;
&lt;h3 id=&quot;more-decks-stats-and-time-left&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;1556734708&quot;&gt;More decks stats and time left&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&amp;quot;This addon shows extra information of the due cards and returns the expected time to finalize (Due+New).&amp;quot;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;enhance-main-window&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;877182321&quot;&gt;Enhance main window&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This adds more stats to the main window via columns. As you can see in that link, the default config adds quite a lot, so I &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;azah&#x2F;0391ce0fc3e90f3defea75ef518fd195&quot;&gt;modified my config&lt;&#x2F;a&gt; to pare it down, which looks like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;enhanced.png&quot; data-lity data-lity-desc=&quot;A picture displaying how the anki main window looks different with this plugin enabled&quot; alt=&quot;A picture displaying how the anki main window looks different with this plugin enabled&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;enhanced.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Note that the stats at the bottom are from the &lt;code&gt;More decks stats and time left&lt;&#x2F;code&gt; plugin.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;progress-graphs-and-stats-for-mature-and-learned-cards&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;266436365&quot;&gt;Progress graphs and stats for mature and learned cards&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Adds two new graphs to the stats window.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;button-colours-good-again&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;2494384865&quot;&gt;Button Colours (Good, Again)&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Simply colorizes Again to be red, Good to be green, etc. It&#x27;s a small but nice thing to have when reviewing. There&#x27;s also &lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;1829090218&quot;&gt;Large and Colorful Buttons&lt;&#x2F;a&gt; if you wanted even more colorful buttons.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kanji-grid&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;909972618&quot;&gt;Kanji Grid&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This is an awesome plugin that visually shows your kanji learning progress. Simply select a deck that has a &lt;code&gt;kanji&lt;&#x2F;code&gt; field, and run Tools &amp;gt; &lt;code&gt;Generate Kanji Grid&lt;&#x2F;code&gt;. It looks like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;kanji-grid.png&quot; data-lity data-lity-desc=&quot;A grid showing kanji characters with a color background based on how long the current interval is&quot; alt=&quot;A grid showing kanji characters with a color background based on how long the current interval is&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;017&amp;#x2F;kanji-grid.png&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This was generated from my deck with the default settings.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;behavior-plugins&quot;&gt;Behavior Plugins&lt;&#x2F;h2&gt;
&lt;p&gt;This is where things get fun. These plugins change the core functionality of Anki, so please, read about them and make sure you understand what they do before adding them.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Back up your Anki before installing these&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;search-in-add-card-dialogue&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;1781298089&quot;&gt;Search in Add Card Dialogue&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This adds a pane to the &lt;code&gt;Add Card&lt;&#x2F;code&gt; window, letting you quickly search through your Anki decks for keywords. It&#x27;s very useful for finding duplicates, or searching among sample sentences.&lt;&#x2F;p&gt;
&lt;p&gt;The only con is the search doesn&#x27;t work for non-ascii text. When I have time I plan on fixing this.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;resetez&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;massimmersionapproach.com&#x2F;table-of-contents&#x2F;anki&#x2F;low-key-anki&#x2F;low-key-anki-summary-and-installation&#x2F;&quot;&gt;ResetEZ&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This adds a command in your Tools menu called &lt;code&gt;Reset Ease + Force Sync After&lt;&#x2F;code&gt;. It resets &lt;strong&gt;all&lt;&#x2F;strong&gt; Anki cards to have the default ease value, 250%. You have to install it manually.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;no-penalties-or-boosting&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;massimmersionapproach.com&#x2F;table-of-contents&#x2F;anki&#x2F;low-key-anki&#x2F;low-key-anki-summary-and-installation&#x2F;&quot;&gt;No Penalties or Boosting&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This changes &lt;code&gt;Again&lt;&#x2F;code&gt;, &lt;code&gt;Hard&lt;&#x2F;code&gt;, and &lt;code&gt;Easy&lt;&#x2F;code&gt; to not change the card&#x27;s ease value. By default, Anki modifies it by -20%, -15%, or +15%, respectively. This is a bad idea, and I go into more detail [in my other anki post][TODO]. This goes hand in hand with ResetEZ. It also needs to be manually installed.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hoochie-mama-randomize-rev-queue&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;1460733408&quot;&gt;Hoochie Mama: Randomize Rev Queue&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;See &lt;a href=&quot;andrewzah.com&#x2F;posts&#x2F;better-anki-usage-guide-2019&#x2F;#utilizing-subdecks&quot;&gt;Making use of subdecks&lt;&#x2F;a&gt; above. This randomizes review cards in subdecks.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-plugins&quot;&gt;Other Plugins&lt;&#x2F;h2&gt;
&lt;p&gt;There may be plugins for the language that you&#x27;re learning. Japanese has several, for example. It&#x27;s worth searching &amp;quot;anki {language}&amp;quot; to see what&#x27;s available.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Considering that we end up using Anki for years, it&#x27;s worth taking some time to improve it and read the documentation closely. Is there a plugin or change that you feel like I missed? Let me know.&lt;&#x2F;p&gt;
&lt;p&gt;I have also written a post on &lt;a href=&quot;..&#x2F;posts&#x2F;things-to-avoid-with-anki&quot;&gt;general things to avoid while using Anki&lt;&#x2F;a&gt; that I recommend you check out.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Things to avoid with Anki</title>
                <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/things-to-avoid-with-anki/</link>
                <guid>andrewzah.com/posts/things-to-avoid-with-anki/</guid>
                <description>&lt;p&gt;For those unaware, &lt;a href=&quot;https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;&quot;&gt;Anki&lt;&#x2F;a&gt; is a free app that implements [active recall] with &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Spaced_repetition&quot;&gt;spaced repetition&lt;&#x2F;a&gt;. If you&#x27;re new to Anki, the very first thing I recommend doing is &lt;a href=&quot;https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;docs&#x2F;manual.html&quot;&gt;reading the manual&lt;&#x2F;a&gt;, or at least &lt;a href=&quot;https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;docs&#x2F;manual.html#the-basics&quot;&gt;the basics&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;There are some common mistakes people make when getting into flash cards and spaced repetition for the first time, as well as Anki. Considering that Anki is generally used for years, correcting bad habits pays large dividends in the long run.&lt;&#x2F;p&gt;
&lt;p&gt;So with that said, let&#x27;s get into it!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;not-doing-anki-daily&quot;&gt;Not doing Anki daily&lt;&#x2F;h2&gt;
&lt;p&gt;If you take away only one tip from this post, let it be this one. Nothing else here matters if you don&#x27;t consistently review cards daily.&lt;&#x2F;p&gt;
&lt;p&gt;The entire point of Anki is spaced repetition. Every time you skip a day&#x27;s reviews, the following session will become more difficult. For non-mature words (less than 30 day intervals) it&#x27;s crucial that you review. If you don&#x27;t review for a long time, you will soon have hundreds of reviews stacked up, which is super demotivating.&lt;&#x2F;p&gt;
&lt;p&gt;I used to do Anki before bed, but this sometimes led to me skipping it due to work, friends, or life just taking up more time and energy than expected. Now I consistently do anki either in the morning after I&#x27;ve fully woken up, or around lunch.&lt;&#x2F;p&gt;
&lt;p&gt;If you change your study time, make sure to update your Anki Preferences, under Basic &amp;gt; &lt;code&gt;Next day starts at&lt;&#x2F;code&gt;. This tip goes hand in hand with the next one.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;mixing-reviews-and-new-words&quot;&gt;Mixing reviews and new words&lt;&#x2F;h2&gt;
&lt;p&gt;This is Anki&#x27;s default behavior. I personally recommend against this as sometimes you don&#x27;t have the time or energy in a day to sit down and learn the new cards. It&#x27;s okay if you don&#x27;t learn new words, but missing reviews is really bad.&lt;&#x2F;p&gt;
&lt;p&gt;But you can&#x27;t only do the reviews, since they&#x27;re mixed in with the new cards! So guess what ends up happening? Both the reviews and new cards get skipped...&lt;&#x2F;p&gt;
&lt;p&gt;By changing Anki preferences to &lt;code&gt;Show new cards after reviews&lt;&#x2F;code&gt;, you can always do reviews without worry. After you wake up, while you commute, et cetera.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;studying-too-many-new-words&quot;&gt;Studying too many new words&lt;&#x2F;h2&gt;
&lt;p&gt;Do not go over 20 words&#x2F;day unless you are studying at least 1-2 hours every day. Initially it may be doable but reviews will pile up so fast it&#x27;s scary.&lt;&#x2F;p&gt;
&lt;p&gt;If you do 20 words a day, every day, for a year, you will learn 6,720 words. That is pretty darn good! For most, if not all, languages, 3-5k words will let you have basic conversations.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;having-the-foreign-word-on-the-front-side&quot;&gt;Having the foreign word on the front side&lt;&#x2F;h2&gt;
&lt;p&gt;If you&#x27;re using Anki to learn a foreign language, you want to speak that language with someone, right? Think about how a conversation goes as a beginner.  First, you think of the word &lt;em&gt;in your native language&lt;&#x2F;em&gt;, then you think of the equivalent foreign word.&lt;&#x2F;p&gt;
&lt;p&gt;If you put a foreign word on the front of your anki cards, then you&#x27;re doing it totally backward! That just trains you to recognize a foreign word when you see it; it doesn&#x27;t train you to remember a foreign word from your native word.&lt;&#x2F;p&gt;
&lt;p&gt;You can also make automatically make cards that go both ways if you use the &lt;code&gt;Basic (and reversed card)&lt;&#x2F;code&gt; template. So adding a card with [dog, 강아지] will make another card that&#x27;s [강아지, dog]. If you only want -some- cards to have a reverse, you can use the provided &lt;code&gt;Basic (optional reversed card)&lt;&#x2F;code&gt; template. This one only makes a reverse if you put something in the &lt;code&gt;Add Reverse&lt;&#x2F;code&gt; field (it can be any input, it doesn&#x27;t show anywhere).&lt;&#x2F;p&gt;
&lt;p&gt;See &lt;a href=&quot;https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;docs&#x2F;manual.html#reverse-cards&quot;&gt;the manual&lt;&#x2F;a&gt; for more information on reverse cards.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;only-using-premade-decks&quot;&gt;Only using premade decks&lt;&#x2F;h2&gt;
&lt;p&gt;If you&#x27;re a beginner to studying a language, using a premade deck is fine due to the sheer amount of time it takes to add words to a deck. However the longer you study, the more you need your own personal deck.&lt;&#x2F;p&gt;
&lt;p&gt;If you use someone else&#x27;s deck, it&#x27;s basically a random collection of words that you lack the context for. For your own personal deck you have to see the word somewhere first, giving you more of a feeling for the context.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re trying to mass-memorize words (say, for a language test), I recommend using Anki&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;docs&#x2F;manual.html#decks&quot;&gt;parent&#x2F;subdecks feature&lt;&#x2F;a&gt;. That way you can use a premade deck &lt;em&gt;and&lt;&#x2F;em&gt; your personal deck at the same time. Spiffy.&lt;&#x2F;p&gt;
&lt;p&gt;I explain subdecks a bit more in my &lt;a href=&quot;..&#x2F;better-anki-usage-guide-2019#utilizing-subdecks&quot;&gt;Better Anki Usage&lt;&#x2F;a&gt; post.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;not-including-sample-sentences&quot;&gt;Not including sample sentences&lt;&#x2F;h2&gt;
&lt;p&gt;A lot of language learning decks just have the word and its translation. For very basic words this can be fine, but for most words you really do need sample sentences so you can see the context as well.&lt;&#x2F;p&gt;
&lt;p&gt;I include 3 sample sentences in all the cards I make, as well as notes, common word pairings, and the grammar type.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;having-too-many-concepts-per-card&quot;&gt;Having too many concepts per card&lt;&#x2F;h2&gt;
&lt;p&gt;A good anki card should have one concept. Avoid memorizing lists if you really have to. If you do have to memorize a list, turn it into an enumeration (1. 2. 3...). If you have multiple concepts, make multiple cards.&lt;a id=&quot;refer-0&quot; href=&quot;#reference-0&quot;&gt;[0]&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;When memorizing foreign words it&#x27;s really tempting to put every definition into one card. Don&#x27;t do this. Putting related definitions together is fine, but if a word has multiple different meanings, it needs different cards.&lt;&#x2F;p&gt;
&lt;p&gt;I see this a lot in premade decks, with 1 card having 4 or 5 totally unrelated usages of a word–and no sentence samples either, of course.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pressing-easy-too-easily&quot;&gt;Pressing &#x27;easy&#x27; too easily&lt;&#x2F;h2&gt;
&lt;p&gt;It&#x27;s can be tempting to give a review card the &#x27;Easy&#x27; grade, quickly giving it large intervals. Don&#x27;t do this unless you know the word quite well (in which case, why even have the card at all?). Otherwise the interval will increase rapidly, and you&#x27;ll have forgotten it by then.&lt;&#x2F;p&gt;
&lt;p&gt;Actually, due to how Anki works, pressing &lt;code&gt;Easy&lt;&#x2F;code&gt; (or &lt;code&gt;Hard&lt;&#x2F;code&gt;) &lt;em&gt;permanently&lt;&#x2F;em&gt; modifies that card, giving it way longer intervals than what it should be. I go over this in detail in my &lt;a href=&quot;..&#x2F;better-anki-usage-guide-2019#why-behavior-changing-plugins-are-needed&quot;&gt;Better Anki Usage&lt;&#x2F;a&gt; post. Almost all long-term Anki users that I talk to do not press &lt;code&gt;Easy&lt;&#x2F;code&gt; often, or ever.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;not-syncing-all-the-time&quot;&gt;Not syncing all the time&lt;&#x2F;h2&gt;
&lt;p&gt;You should always sync after every session, especially if you edit anything.&lt;&#x2F;p&gt;
&lt;p&gt;Did you know &lt;code&gt;y&lt;&#x2F;code&gt; is the sync shortcut?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;not-memorizing-keyboard-shortcuts&quot;&gt;Not memorizing keyboard shortcuts&lt;&#x2F;h2&gt;
&lt;p&gt;Last but not least, learning a few shortcuts is useful since Anki is used so much.&lt;&#x2F;p&gt;
&lt;p&gt;When reviewing a card:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;undo -&amp;gt; ctrl&#x2F;cmd-z&lt;&#x2F;li&gt;
&lt;li&gt;Spacebar =&amp;gt; Flip the card&lt;&#x2F;li&gt;
&lt;li&gt;1,2,3,4 =&amp;gt; The numbers follow the order of the grading buttons. So for a review, which has &lt;code&gt;Again&lt;&#x2F;code&gt;, &lt;code&gt;Hard&lt;&#x2F;code&gt;, &lt;code&gt;Good&lt;&#x2F;code&gt;, &lt;code&gt;Easy&lt;&#x2F;code&gt;, those are 1,2,3,4 respectively. A new card has &lt;code&gt;Again&lt;&#x2F;code&gt;, &lt;code&gt;Good&lt;&#x2F;code&gt;, &lt;code&gt;Easy&lt;&#x2F;code&gt; by default, which are 1, 2, 3.&lt;&#x2F;li&gt;
&lt;li&gt;e =&amp;gt; edit card&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Other shortcuts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;r =&amp;gt; replay audio&lt;&#x2F;li&gt;
&lt;li&gt;@ =&amp;gt; suspend a card&lt;&#x2F;li&gt;
&lt;li&gt;m =&amp;gt; mark a card (adds a &lt;code&gt;marked&lt;&#x2F;code&gt; tag so you can find it easily later)&lt;&#x2F;li&gt;
&lt;li&gt;ctrl or cmd-1,2,3,4 =&amp;gt; flag a card with red, orange, green, or blue, respectively&lt;&#x2F;li&gt;
&lt;li&gt;- =&amp;gt; bury a card (hide it until tomorrow)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Window&#x2F;tool shortcuts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;y =&amp;gt; sync&lt;&#x2F;li&gt;
&lt;li&gt;d =&amp;gt; go to decks overview&lt;&#x2F;li&gt;
&lt;li&gt;b =&amp;gt; browse cards&lt;&#x2F;li&gt;
&lt;li&gt;a =&amp;gt; add card&lt;&#x2F;li&gt;
&lt;li&gt;t =&amp;gt; stats&lt;&#x2F;li&gt;
&lt;li&gt;&#x2F; =&amp;gt; custom study session&lt;&#x2F;li&gt;
&lt;li&gt;f =&amp;gt; create filter deck&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Overkill, you say? Well.. yeah, probably. Aside from spacebar, 1,2,3,4, r, and y, you don&#x27;t really need to know the rest unless you like being super duper efficient.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;These are some of the problems I&#x27;ve encountered while using Anki. Are there other ones you think I should talk about? Let me know.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re interested in Anki, I recommend reading my &lt;a href=&quot;..&#x2F;posts&#x2F;better-anki-usage-guide-2019&quot;&gt;Better Anki Usage&lt;&#x2F;a&gt; post to fix some of Anki&#x27;s wonky defaults and unintuitive behavior.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Nested Resource Forms Tutorial with Padrino or Rails</title>
                <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/nested-resource-forms-tutorial-with-padrino-rails/</link>
                <guid>andrewzah.com/posts/nested-resource-forms-tutorial-with-padrino-rails/</guid>
                <description>&lt;p&gt;This guide was written with Padrino and Sequel in mind, but should more or less work for Rails with minimal adaptations. Let&#x27;s get into it!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-goal&quot;&gt;The Goal&lt;&#x2F;h2&gt;
&lt;p&gt;I have two models: &lt;code&gt;Grammar&lt;&#x2F;code&gt; and &lt;code&gt;GrammarTranslation&lt;&#x2F;code&gt;. A &lt;code&gt;Grammar&lt;&#x2F;code&gt; has many &lt;code&gt;GrammarTranslations&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I want to have a form that lets me create a &lt;code&gt;Grammar&lt;&#x2F;code&gt; and one &lt;code&gt;GrammarTranslation&lt;&#x2F;code&gt; at the same time. Then, I want the &lt;code&gt;grammars&#x2F;edit&lt;&#x2F;code&gt; page to let me edit the &lt;code&gt;Grammar&lt;&#x2F;code&gt; and edit any of the existing &lt;code&gt;GrammarTranslation&lt;&#x2F;code&gt;s or create new ones.&lt;&#x2F;p&gt;
&lt;p&gt;Note: you can see a full example application that uses nested form objects &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Eandrewzah&#x2F;korean_grammar_data_entry&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;schema&quot;&gt;Schema&lt;&#x2F;h3&gt;
&lt;p&gt;This is what the migration schema looks like:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#0086b3;&quot;&gt;Sequel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.migration &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
  up &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    create_table &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammars &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      primary_key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;null: false
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:alternatives
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:verb_type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;null: false
      DateTime :created_at
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;

    create_table &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar_translations &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      primary_key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      foreign_key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar_id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammars
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:language_code&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;null: false
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:meanings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;null: false
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:notes
      DateTime :created_at
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
  end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;

  down &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    drop_table &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar_translations&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    drop_table &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammars
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You&#x27;ll want to run&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;color:#323232;&quot;&gt;padrino generate app &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;app_name&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# etc
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;padrino generate migration AddGrammarsAndTranslations
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# you might have to initialize the table manually if this doesn&amp;#39;t work
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;rake sq:create 
rake sq:migrate
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;models&quot;&gt;Models&lt;&#x2F;h3&gt;
&lt;p&gt;The main model &lt;code&gt;Grammar&lt;&#x2F;code&gt; needs a tag, which differs by which ORM you&#x27;re using. If it&#x27;s Sequel, use the &lt;code&gt;nested_attributes&lt;&#x2F;code&gt; tag.&lt;a id=&quot;refer-0&quot; href=&quot;#reference-0&quot;&gt;[0]&lt;&#x2F;a&gt; For ActiveRecord users, instead use &lt;code&gt;accepts_nested_attributes_for&lt;&#x2F;code&gt;.&lt;a id=&quot;refer-1&quot; href=&quot;#reference-1&quot;&gt;[1]&lt;&#x2F;a&gt; Both accept the &lt;code&gt;allow_destroy: true&lt;&#x2F;code&gt; option. Padrino also needs the plugin to explicitly be enabled.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# models&#x2F;grammar.rb

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;Sequel::Model&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
  one_to_many &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:translations&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;class: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:GrammarTranslation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;

  plugin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:nested_attributes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
  nested_attributes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:translations&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;destroy: true

  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# Replace ActiveRecord method.
  # (I had to add this to get padrino to stop complaining)
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed6a43;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;find_by_id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;(id)
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed6a43;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[id] &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;rescue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;nil
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# models&#x2F;grammar_translation.rb

&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;GrammarTranslation &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;Sequel::Model&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
  many_to_one &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar

  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# Replace ActiveRecord method.
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed6a43;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#795da3;&quot;&gt;find_by_id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;(id)
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed6a43;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[id] &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;rescue &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;nil
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;form-views&quot;&gt;Form Views&lt;&#x2F;h3&gt;
&lt;p&gt;We use the &lt;code&gt;new&lt;&#x2F;code&gt; and &lt;code&gt;edit&lt;&#x2F;code&gt; templates to initialize the form and pass it as a variable, &lt;code&gt;f&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&#x2F;&#x2F; app&#x2F;views&#x2F;grammar&#x2F;new.slim

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;h2
  New&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Grammar

= form_for @grammar, &amp;#39;&#x2F;grammar&#x2F;create&amp;#39; do |f|
  = partial &amp;#39;grammar&#x2F;form&amp;#39;, :locals =&amp;gt; { :f =&amp;gt; f }
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&#x2F;&#x2F; app&#x2F;views&#x2F;grammar&#x2F;edit.slim

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;h2
  Update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Grammar

= form_for :grammar, url(:grammar, :update, id: @grammar.id), method: :put do |f|
  = partial &amp;#39;grammar&#x2F;form&amp;#39;, :locals =&amp;gt; { :f =&amp;gt; f }
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Since we won&#x27;t always add a new translation, always marking the fields as required won&#x27;t work. Instead we can mark fields as required only for existing translations, not new ones.&lt;&#x2F;p&gt;
&lt;p&gt;We can iterate over nested resources with the &lt;code&gt;fields_for :model&lt;&#x2F;code&gt; tag now available to us.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Note1&lt;&#x2F;strong&gt;: Don&#x27;t forget to setup the &lt;code&gt;id&lt;&#x2F;code&gt; hidden field! Otherwise the orm won&#x27;t realize it&#x27;s an existing nested resource.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Note2&lt;&#x2F;strong&gt;: For the destroy checkbox, you must pass &lt;code&gt;:_delete&lt;&#x2F;code&gt;, Not &lt;code&gt;:_destroy&lt;&#x2F;code&gt;. The padrino docs are incorrect here! I had to do a bit of sleuthing to figure out the correct method to send.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&#x2F;&#x2F; app&#x2F;views&#x2F;grammar&#x2F;_form.slim

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;= f.label &amp;#39;Grammar&amp;#39;
= f.text_field :grammar, required: true

= f.label &amp;#39;Alternatives (comma separated)&amp;#39;
= f.text_field :alternatives, required: true

= f.label &amp;quot;Verb Type&amp;quot;
= f.select :verb_type, options: [&amp;quot;형용사&amp;quot;, &amp;quot;동사&amp;quot;, &amp;quot;Both&amp;quot;],
  required: true

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;h3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Translations

= f.fields_for :translations do |af|
  - unless af.object.new?
    = af.hidden_field :id, value: af.object.id

  = af.label &amp;quot;Language Code&amp;quot;
  - if af.object.new?
    = af.text_field :language_code
  - else
    = af.text_field :language_code, required: true

  = af.label &amp;quot;Meanings (comma separated)&amp;quot;
  - if af.object.new?
    = af.text_field :meanings
  - else
    = af.text_field :meanings, required: true

  = af.label &amp;quot;Notes&amp;quot;
  = af.text_area :notes

  - unless af.object.new?
    = af.label &amp;quot;Destroy&amp;quot;
    = af.check_box :_delete

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;hr

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;= submit_tag pat(:save)
= submit_tag pat(:save_and_continue), :name =&amp;gt; &amp;#39;save_and_continue&amp;#39;
= link_to pat(:cancel), url(:grammar, :index)
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;controller-and-routes&quot;&gt;Controller and Routes&lt;&#x2F;h3&gt;
&lt;p&gt;Lastly we need some basic controller and routing code. &lt;code&gt;index&lt;&#x2F;code&gt; is still simple:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# app&#x2F;controllers&#x2F;grammar.rb
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
get &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:index &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammars &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.all
  render &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;grammar&#x2F;index&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When it comes to new&#x2F;create, an empty &lt;code&gt;GrammarTranslation&lt;&#x2F;code&gt;s object needs to be initialized. In Padrino this is accomplished by initializing the &lt;code&gt;&amp;lt;model&amp;gt;_attributes&lt;&#x2F;code&gt; field, which comes from the &lt;code&gt;nested_attributes&lt;&#x2F;code&gt; tag.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# app&#x2F;controllers&#x2F;grammar.rb
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
get &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:new &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;translations_attributes: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[{}])
  render &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;new&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;

post &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:create &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;(params[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;])

  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;(grammar &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar.save)
    flash[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;Successfully saved grammar &amp;amp; translation.&amp;#39;

    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; params[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:save_and_continue&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]
      redirect url_for(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;id:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; grammar.id)
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      redirect url(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:new&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;)
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
  else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    flash[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;Error saving grammar: &amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;+
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar.errors.map(&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;).join(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;)
    render &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;new&amp;#39;
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;For the &lt;code&gt;edit&lt;&#x2F;code&gt; route, a new &lt;code&gt;GrammarTranslation&lt;&#x2F;code&gt; is appended because we want to be able to create new &lt;code&gt;GrammarTranslation&lt;&#x2F;code&gt;s from a &lt;code&gt;Grammar&lt;&#x2F;code&gt;&#x27;s edit page.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# app&#x2F;controllers&#x2F;grammar.rb
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
get &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:edit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;with: :id &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[params[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]]
  @grammar.translations &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;lt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;GrammarTranslation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;new

  if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar
    render &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;grammar&#x2F;edit&amp;#39;
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    flash[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:warning&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; pat(
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:create_error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;model: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;grammar&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;,
      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;id:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; params[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;to_s
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;)
    halt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;404
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;For &lt;code&gt;update&lt;&#x2F;code&gt;, since we added a blank &lt;code&gt;GrammarTranslation&lt;&#x2F;code&gt;, it&#x27;s necessary to filter it out if none of the fields were filled out in the form. Otherwise, every single time you upated a &lt;code&gt;Grammar&lt;&#x2F;code&gt;, a new &lt;code&gt;GrammarTranslation&lt;&#x2F;code&gt; would be created.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# app&#x2F;controllers&#x2F;grammar.rb
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
put &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;with: :id &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;do
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;Grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;[params[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]]

  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;# filter out the new translation
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;  params[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:translations_attributes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]
    .select!{ |_k, v| v[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:language_code&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;].present? &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;true &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;}

  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar.modified! &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar.update(params[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;])
    flash[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; pat(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:update_success&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;model: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;Grammar&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;id:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; params[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#62a35c;&quot;&gt;to_s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;)
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; params[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:save_and_continue&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;]
      redirect(url(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:new&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;))
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      redirect(url(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:grammar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:edit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;id: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;@grammar.id))
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
  else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
    flash.now[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; pat(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;:update_error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#0086b3;&quot;&gt;model: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;grammar&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;)
    render &lt;&#x2F;span&gt;&lt;span style=&quot;color:#183691;&quot;&gt;&amp;#39;accounts&#x2F;edit&amp;#39;
  &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#a71d5d;&quot;&gt;end
end
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;object-views&quot;&gt;Object Views&lt;&#x2F;h3&gt;
&lt;p&gt;Nothing complicated here. The nested resource is available under the main object, so we can use &lt;code&gt;@grammar.translations&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&#x2F;&#x2F; app&#x2F;views&#x2F;grammar&#x2F;index.slim

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;- @grammars.each do |g|
  = link_to g.grammar, &amp;quot;&#x2F;grammar&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;#{g.id}&amp;quot;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;br
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#ffffff;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#969896;&quot;&gt;&#x2F;&#x2F; app&#x2F;views&#x2F;grammar&#x2F;show.slim

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;h2
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;= @grammar.grammar
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
  | Alternatives:
  = @grammar.alternatives
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;h4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt; Translations
- @translations.each do |t|
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;div
    p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      | Lang:
      =&amp;lt; t.language_code
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#63a35c;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#323232;&quot;&gt;
      | Meaning:
      =&amp;lt; t.meanings
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h3&gt;
&lt;p&gt;I hope this short guide helped you. You should now be able to create a model and a nested object at the same time!&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Ultimate List of Resources for Learning Korean in 2019</title>
                <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/ultimate-list-of-resources-for-learning-korean-in-2019/</link>
                <guid>andrewzah.com/posts/ultimate-list-of-resources-for-learning-korean-in-2019/</guid>
                <description>&lt;p&gt;In the language servers I frequent, I often see newcomers asking about how they should start learning Korean, or what websites&#x2F;books&#x2F;apps to use, etc. I got tired of repeating myself, so I made this collection for people to easily copy&#x2F;paste.&lt;&#x2F;p&gt;
&lt;p&gt;The following resources are all either resources that I &lt;em&gt;personally&lt;&#x2F;em&gt; have used while studying Korean, or resources that I&#x27;ve heard very good things about from fellow learners.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;&#x2F;strong&gt;: &lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
&lt;em&gt;E&lt;&#x2F;em&gt;
&lt;&#x2F;span&gt; = Elementary, &lt;span class=&quot;hl hl-left hl-green&quot;&gt;
&lt;em&gt;B&lt;&#x2F;em&gt;
&lt;&#x2F;span&gt; = Beginner, &lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
&lt;em&gt;I&lt;&#x2F;em&gt;
&lt;&#x2F;span&gt; = Intermediate, &lt;span class=&quot;hl hl-left hl-red&quot;&gt;
&lt;em&gt;A&lt;&#x2F;em&gt;
&lt;&#x2F;span&gt; = Advanced.&lt;&#x2F;p&gt;
&lt;p&gt;I hope this is helpful, and let me know if I happened to leave out any good resources!&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;too-long-didn-t-read&quot;&gt;Too Long; Didn&#x27;t Read&lt;&#x2F;h3&gt;
&lt;p&gt;Just looking to get started and don&#x27;t wanna read this whole page? Here are some quick starting tips!&lt;&#x2F;p&gt;
&lt;p&gt;If you need to learn Hangeul, look at the Elementary section &lt;a href=&quot;andrewzah.com&#x2F;posts&#x2F;ultimate-list-of-resources-for-learning-korean-in-2019&#x2F;#elementary&quot;&gt;below&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;These folks have really good youtube channels and websites with PDFs for free:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gobillykorean.com&#x2F;&quot;&gt;GO! Billy Korean&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;talktomeinkorean.com&#x2F;&quot;&gt;TalkToMeInKorean&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This site has very detailed grammar explanations:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.howtostudykorean.com&quot;&gt;HowToStudyKorean&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These apps are great for beginners &#x2F; in general:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;세종 문법 초급 – Beginner lessons and grammar with audio: &lt;a href=&quot;https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;%EC%84%B8%EC%A2%85%ED%95%9C%EA%B5%AD%EC%96%B4-%EB%AC%B8%EB%B2%95-%EC%B4%88%EA%B8%89&#x2F;id1347807237?mt=8&quot;&gt;iOS&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=air.org.kingsejong.grammarbasic&amp;amp;hl=ko&quot;&gt;Android&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Naver Dictionary: &lt;a href=&quot;https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;naver-korean-dictionary&#x2F;id673085116?mt=8&quot;&gt;iOS&lt;&#x2F;a&gt; – &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nhn.android.naverdic&amp;amp;hl=en&quot;&gt;Android&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Best of luck! Continue reading for more detailed explanations about these resources.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;elementary&quot;&gt;Elementary&lt;&#x2F;h3&gt;
&lt;p&gt;If you know nothing or very little about Korean, the first thing you should do is learn how to read Hangeul! Don&#x27;t even bother learning romanization, or unlearn it if you already have learned it.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;em&gt;single&lt;&#x2F;em&gt; most important thing to learn here is that &lt;strong&gt;Korean letters do not map nicely to English letters&lt;&#x2F;strong&gt;. If you use romanization, you will seriously hinder your progress due to incorrectly learning how to pronounce things. You may see guides that say ㄷ is d, etc. Whenever you see this, you should mentally replace it with &amp;quot;ㄷ is &lt;em&gt;similar&lt;&#x2F;em&gt; to d, but is just ㄷ, not d&amp;quot;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;learn-hangeul-in-90-minutes-start-to-finish&quot;&gt;Learn Hangeul in 90 Minutes – Start to Finish&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;: https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=s5aobqyEaMQ
&lt;p&gt;Go! Billy Korean in general produces very high quality content for learning Korean, and is listed below.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;korean-word-structure-and-basic-letters&quot;&gt;Korean Word Structure and Basic Letters&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;: https:&#x2F;&#x2F;www.howtostudykorean.com&#x2F;unit0&#x2F;unit0lesson1&#x2F;
&lt;p&gt;I prefer text-based conent so I personally started with this. However when you learn Hangeul, make sure to listen to &lt;em&gt;something&lt;&#x2F;em&gt; so that you learn the sounds.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;how-to-read-and-write-in-korean&quot;&gt;How to Read and Write in Korean&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;: https:&#x2F;&#x2F;vimeo.com&#x2F;ondemand&#x2F;hangeul
&lt;p&gt;This is a video course from TalkToMeInKorean that breaks down Hangeul and the mouth shapes you should be making. I highly recommend this short video series.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;jenny-s-korean&quot;&gt;Jenny&#x27;s Korean&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;: https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=0ZhOeA0RD9o&amp;feature=youtu.be
&lt;p&gt;This video is really popular for Hangeul learners.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;websites&quot;&gt;Websites&lt;&#x2F;h2&gt;
&lt;h4 id=&quot;go-billy-korean-s-website&quot;&gt;GO! Billy Korean&#x27;s Website&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;: https:&#x2F;&#x2F;gobillykorean.com&#x2F;category&#x2F;full-lessons&#x2F;
&lt;p&gt;The website for GBK is basically a wrapper for Billy&#x27;s youtube channel. You can watch his videos and download the related PDFs for free. Here you can easily find his content as opposed to digging through all of the videos on his channel. See youtube channels below for a full review.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;talktomeinkorean-s-website&quot;&gt;TalkToMeInKorean&#x27;s Website&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;talktomeinkorean.com&#x2F;curriculum
&lt;p&gt;TTMiK is also a great learning resource, particularly for beginners. They provide much smaller, more digestible lessons, in a better order. It&#x27;s also free (you just need to make an account). The lessons have a podcast-like style and each lesson has a concise PDF.&lt;&#x2F;p&gt;
&lt;p&gt;Overall I think TTMiK is a great resource and it pairs well with How to Study Korean when you need a more detailed explanation. Sometimes the banter on the podcasts is slightly awkward but I still like the presenters.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;howtostudykorean&quot;&gt;HowToStudyKorean&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;www.howtostudykorean.com&#x2F;
&lt;p&gt;HtSK is an excellent resource born out of someone&#x27;s fastidious notes and research. When I started learning Korean I pretty much used only this. All of the lessons are in-depth, to the point of sometimes having almost &lt;em&gt;too&lt;&#x2F;em&gt; much information..&lt;&#x2F;p&gt;
&lt;p&gt;One downside is the arrangement of the lessons–to put it simply, the order is a bit wack. For example, &amp;quot;because&amp;quot; is so, so common in language, but &lt;code&gt;~어&#x2F;아서&lt;&#x2F;code&gt; isn&#x27;t discussed until lesson 37. ~(으)니까 is also common isn&#x27;t discussed until lesson 81. The concept of &lt;code&gt;~적&lt;&#x2F;code&gt; is discussed in lesson 16 but as a beginner&#x2F;intermediate you won&#x27;t be using ~적 words really.&lt;&#x2F;p&gt;
&lt;p&gt;I recommend following it linearly at least until lesson 32, but supplement it with searching naturally for grammar as you continue to speak in Korean. Lessons 26-32 are really important because they teach the &lt;code&gt;~는 것&lt;&#x2F;code&gt; principle.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;glossika&quot;&gt;Glossika&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;: https:&#x2F;&#x2F;glossika.com&#x2F;
&lt;p&gt;Glossika aims to provide fluency by giving you speaking exercises via spaced repetition. It&#x27;s very similar to Pimsleur, except more modern. They offer a good deal of languages including Korean (but not Romanian, sadly)... I have a few friends who highly praise it, but haven&#x27;t tried it yet. I think this month I&#x27;ll try it and see how it goes.&lt;&#x2F;p&gt;
&lt;p&gt;The drawback here is that it&#x27;s pricey, $30&#x2F;mo per month or $25&#x2F;mo yearly.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;r-korean&quot;&gt;&#x2F;r&#x2F;Korean&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;korean&#x2F;
&lt;p&gt;&#x2F;r&#x2F;Korean is a fairly high quality subreddit for asking questions about Korean. Occasionally people post guides or series, but it&#x27;s somewhat sporadic. There&#x27;s good content here, but it&#x27;s more useful if you already use reddit.&lt;&#x2F;p&gt;
&lt;p&gt;The level of the questions typically skews from beginner to intermediate.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;study-with-bee&quot;&gt;Study with Bee&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;studywithbee.com&#x2F;
&lt;p&gt;Bees is a regular in the LLK discord server who has been studying Korean for quite a while. She breaks down grammar well and provides good examples. She also occasionally writes about other things, like book reviews and studying different langauges. I recommend checking her blog out!&lt;&#x2F;p&gt;
&lt;h4 id=&quot;naver-english-dictionary&quot;&gt;Naver English Dictionary&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;endic.naver.com&#x2F;?sLn=en
&lt;p&gt;This is a very good, if a bit conservative dictionary sourced from Daum. I still use this all the time out of habit, but I should use the Korean Foundation Dictionary more.&lt;&#x2F;p&gt;
&lt;p&gt;One issue is that on the desktop website, searching for grammar points like ~마다, etc, either yields nothing, or it yields very basic information. Searching on the mobile app gives way more information. The desktop site also has daily words and conversation, but the mobile app has more detailed examples and explanations.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;korean-foundation-dictionary&quot;&gt;Korean Foundation Dictionary&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *I*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;krdict.korean.go.kr&#x2F;mainAction
&lt;p&gt;The definitions in this dictionary are better, but they&#x27;re in Korean. I recommend using this dictionary once you can read Korean definitions.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;naver-comic&quot;&gt;Naver Comic&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;comic.naver.com&#x2F;index.nhn
&lt;p&gt;Here you can read Korean webtoons and browse by category. The mobile app is a bit nicer to use though, in my opinion. See below.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;audio-clip&quot;&gt;Audio Clip&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;audioclip.naver.com&#x2F;
&lt;p&gt;A Korean podcast website. There is a complimentary app, see below.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;lang8-hinative-italki-etc&quot;&gt;Lang8, HiNative, iTalki, etc&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;hinative.com&#x2F;en-US, https:&#x2F;&#x2F;lang-8.com&#x2F;
&lt;p&gt;These are sites where people can ask questions and receive answers. You may see them when searching online about specific words or grammar points. They are generally okay, but I would take it with a grain of salt, because it really depends on who answers. Sometimes the questions and replies are only in Korean.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;youtube-channels&quot;&gt;Youtube Channels&lt;&#x2F;h2&gt;
&lt;p&gt;I&#x27;d say probably most of my Korean learning through youtube has been through content from GO! Billy Korean and TalkToMeInKorean. If you use no other learning resources, I would recommend these two channels.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;go-billy-korean&quot;&gt;GO! Billy Korean&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;GoBillyKorean
&lt;p&gt;Billy is probably the best Korean teacher that I have seen. He teaches well to all skill levels. The majority of his content is elementary to intermediate, however he occasionally dips in to advanced topics, especially in his weekly topic livestreams. Most of his videos are about Korean itself (i.e. grammar) but he also has some videos about culture, and some interviews with Koreans.&lt;&#x2F;p&gt;
&lt;p&gt;Because Billy is a foreigner who learned Korean, I think he has a really good perspective for teaching, moreso than TTMiK. If you watch his videos (particularly the older ones) you can see that he&#x27;s just extremely passionate about Korean, and teaching it.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;talktomeinkorean&quot;&gt;TalkToMeInKorean&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;talktomeinkorean
Billy is probably the best Korean teacher that I have seen. He teaches well to all skill levels, but the majority of his content is elementary to intermediate.
&lt;h4 id=&quot;spongemind&quot;&gt;SpongeMind&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-right hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UCrOP1_DfcuWWPuCQpGsVD-w
&lt;p&gt;Spongemind sporadically uploads short 1-2 minute &amp;quot;inspiration videos&amp;quot;. You can watch these to learn some new vocabulary words, and then repeat 10-20 times to practice saying the sentences. They also upload longer conversations &#x2F; interviews with English and Korean subtitles.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;apps&quot;&gt;Apps&lt;&#x2F;h2&gt;
&lt;h4 id=&quot;sejjon-munbbeo-coggeu&quot;&gt;세종 문법 초급&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;011&amp;#x2F;sejongapp.jpg&quot; data-lity data-lity-desc=&quot;Sejong Beginner Gramar app interface pictures.&quot; alt=&quot;Sejong Beginner Gramar app interface pictures.&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;011&amp;#x2F;sejongapp.jpg&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;+: Apple&#x2F;Android App Store
&lt;p&gt;Sejong Beginner Grammar is a fantastic (and adorable) app that is geared towards beginners. You make a little avatar and get guided through beginner Korean conversations. There are grammar explanations and short drills afterwards. Once you know how to read Hangeul I recommend using this (and listening along, of course). Try to listen without looking first and see how much you can understand!&lt;&#x2F;p&gt;
&lt;h4 id=&quot;lingodeer&quot;&gt;LingoDeer&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;+: Apple&#x2F;Android App Store
&lt;p&gt;LingoDeer has guided lessons tailored to learning Asian languages. I have not used this personally, but many beginners seem to like it. LingoDeer is miles ahead of DuoLingo (which should absolutely not be used for Japanese or Korean, yet). The lessons also have audio, which is important.&lt;&#x2F;p&gt;
&lt;p&gt;The only issue I&#x27;ve seen here is due to the UI, it doesn&#x27;t teach proper spacing sometimes, but that&#x27;s a relatively minor issue.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;anki-flashcards&quot;&gt;Anki Flashcards&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;apps.ankiweb.net&#x2F;docs&#x2F;AnkiMobile.html
&lt;p&gt;Note that there is a competitor who has a similar name (AnkiApp). Use the above link for the correct Anki.&lt;&#x2F;p&gt;
&lt;p&gt;I cannot praise Anki highly enough. It&#x27;s a spaced repetition flash card app, so as you master a word, it shows up less and less frequently. You can (and should) make custom decks but beginners can use &lt;a href=&quot;https:&#x2F;&#x2F;ankiweb.net&#x2F;shared&#x2F;info&#x2F;4066961604&quot;&gt;Evita&#x27;s premade deck&lt;&#x2F;a&gt; with 5k words. The author set words to appear in a specific order based on their usage. I recommend using this for 4-6 months, and then as you start consuming Korean content like webtoons&#x2F;tv shows&#x2F;etc, I suggest moving to your own deck with words that you saw.&lt;&#x2F;p&gt;
&lt;p&gt;Also, I &lt;em&gt;strongly&lt;&#x2F;em&gt; recommend making a deck with a field for sample sentences. Decks like Evita&#x27;s just show the word.. but not &lt;em&gt;how&lt;&#x2F;em&gt; it&#x27;s used. For beginner words like &lt;code&gt;mom&lt;&#x2F;code&gt; this is adequate, but as you learn more advanced words it quickly grows frustrating.&lt;&#x2F;p&gt;
&lt;p&gt;My personal deck has fields for: word type (noun, adverb, etc), sample sentences, hanja, and notes. Some people also use audio and images, but it already takes me long enough to sit down and add words without having to download those as well. I also use custom CSS styling to give those fields different colors.&lt;&#x2F;p&gt;
&lt;p&gt;One final warning: If you add 20 words a day, you will burn out eventually. I recommend limiting it to 10 new words per day, and 100 reviews per day, or less. Unless you can commit to doing Anki 45-60 minutes a day, every day, it will be very hard with the default settings. &lt;&#x2F;p&gt;
&lt;p&gt;I use Anki so much that I&#x27;m planning on doing a writeup on it and its intricacies.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;naver-english-dictionary-1&quot;&gt;Naver English Dictionary&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;011&amp;#x2F;naverdicapp.jpg&quot; data-lity data-lity-desc=&quot;naver endic app interface pictures&quot; alt=&quot;naver endic app interface pictures&quot;&gt;
&lt;img class=&quot;full&quot; async-src=&quot;https:&amp;#x2F;&amp;#x2F;s3.amazonaws.com&amp;#x2F;andrewzah.com&amp;#x2F;posts&amp;#x2F;011&amp;#x2F;naverdicapp.jpg&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;+: Apple&#x2F;Android App Store
&lt;p&gt;This app is indispensable. When you study Korean you&#x27;re gonna be looking words up a LOT, so having a good dictionary app helps. You can quickly switch between the Korean, Chinese, and Hanja dictionaries as well.&lt;&#x2F;p&gt;
&lt;p&gt;I can&#x27;t vouch for the quality of the other Korean dictionary apps since I don&#x27;t know what source they&#x27;re using.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;papago&quot;&gt;Papago&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;+: Apple&#x2F;Android App Store
&lt;p&gt;Translator app that&#x27;s usually better than google translate. Do not rely on this. It can work with simple sentences but should only be a last resort. It almost always fails on non-basic sentences. They also added an honorific mode, but I&#x27;ve seen it fail. Rely on this at your own peril.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;naver-webtoon&quot;&gt;Naver Webtoon&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: 네이버 웹툰 in the iOS&#x2F;Android app stores
&lt;p&gt;This app lets you easily browse webtoons from comic.naver.com. Here, you leave educational Korean territory and go into real Korean territory. These webtoons are written by and consumed by Koreans, after all. You&#x27;ll see not only real Korean but slang and dialect as well, so it can be quite tough.&lt;&#x2F;p&gt;
&lt;p&gt;There may(?) be more simplistic webtoons aimed at foreigners, but I&#x27;m not aware of any so far. If you need a recommendation, 마음의 소리 (Sound of Your Heart) got turned into a netflix original series. Currently I&#x27;m reading &lt;a href=&quot;https:&#x2F;&#x2F;comic.naver.com&#x2F;bestChallenge&#x2F;detail.nhn?titleId=709889&amp;amp;no=1&amp;amp;week=mon&quot;&gt;뚜벅뚜벅&lt;&#x2F;a&gt;. If you use the app you can easily pick random ones.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;audio-clip-1&quot;&gt;Audio Clip&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: 오디오 클립 in the iOS&#x2F;Android app stores
&lt;p&gt;A Korean podcast app. I have attempted to use this but I&#x27;m nowhere near advanced enough to listen to a full length podcast without getting frustrated.&lt;&#x2F;p&gt;
&lt;p&gt;You can filter by categories and download podcasts for offline listening.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;hellotalk&quot;&gt;HelloTalk&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: Apple&#x2F;Android app stores
&lt;p&gt;I hesitate to suggest this app. On one hand, you can talk with people via text or voice and receive corrections easily. On the other hand, I&#x27;ve heard of people kinda being creepy (despite HelloTalk explicitly prohibiting using it as a dating app).&lt;&#x2F;p&gt;
&lt;p&gt;I personally have used this app with no problems. You can post on your own wall and receive corrections, or you can message people directly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;community-servers&quot;&gt;Community Servers&lt;&#x2F;h2&gt;
&lt;h4 id=&quot;let-s-learn-korean&quot;&gt;Let&#x27;s Learn Korean!&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;discord.gg&#x2F;e3H9Pde
&lt;p&gt;LLK is a very active Discord server for learning about and practicing Korean! You can ask questions, post Korean sentences to be corrected, and otherwise chat with other learners about Korean and general topics! LLK has good moderation despite its size, so the conversations remain high quality in the learning channels.&lt;&#x2F;p&gt;
&lt;p&gt;I love this server because my questions are &lt;em&gt;always&lt;&#x2F;em&gt; answered promptly. The most I&#x27;ve had to wait is 7-9 hours or so. There are many advanced and native speakers.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;go-billy-korean-s-server&quot;&gt;GO! Billy Korean&#x27;s Server&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;discordapp.com&#x2F;invite&#x2F;tJmt6zm
&lt;p&gt;GBK also has a server, so if you watch a lot of his videos I recommend checking out this server. You can discuss in Korean and ask questions here too, but there are less people so it can take longer to get questions answered. Billy actually answers questions both here and in LLK.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;r-korean-s-server&quot;&gt;&#x2F;r&#x2F;Korean&#x27;s Server&lt;&#x2F;h4&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: http:&#x2F;&#x2F;discord.gg&#x2F;rjjaNWN
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;korean&quot;&gt;&#x2F;r&#x2F;Korean&lt;&#x2F;a&gt; subreddit also has its own discord server, but it too is small currently. If you use reddit and &#x2F;r&#x2F;Korean a lot, I recommend checking this one out.&lt;&#x2F;p&gt;
&lt;p&gt;Honestly, regular users from LLK (like me) are in all 3 servers. There are more discord servers for sure, but I can&#x27;t personally vouch for them or their quality.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;textbooks&quot;&gt;Textbooks&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;korean-made-simple-series&quot;&gt;Korean Made Simple (Series)&lt;&#x2F;h3&gt;
&lt;span class=&quot;hl hl-left hl-purple&quot;&gt;
  *E*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;gobillykorean.com&#x2F;korean-made-simple&#x2F;
&lt;p&gt;Not only does GO! Billy make videos, but he also recently has been publishing this learning book series! The books have vocabulary, grammar, examples, and practice sections with answer keys. I have not used them personally but I have heard good things from learners about it–I also just trust content coming from Billy.&lt;&#x2F;p&gt;
&lt;p&gt;An (optional) extra workbook is also available if you want even more practice.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;korean-grammar-in-use-series&quot;&gt;Korean Grammar in Use (Series)&lt;&#x2F;h3&gt;
&lt;span class=&quot;hl hl-left hl-green&quot;&gt;
  *B*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-blue&quot;&gt;
  *I*
&lt;&#x2F;span&gt;&lt;span class=&quot;hl hl-left hl-red&quot;&gt;
  *A*
&lt;&#x2F;span&gt;+: https:&#x2F;&#x2F;www.amazon.com&#x2F;gp&#x2F;bookseries&#x2F;B01M1S9ZK4
&lt;p&gt;KGiU comes in Beginner, Intermediate, and Advanced levels. It very strictly focuses on grammar only, mapping it TOPIK levels. (Beginner: TOPIK 1-2, Intermediate: 3-4, Advanced: 5-6). Each grammar point has detailed explanations and breakdowns, sample sentences, and practice sentences with an answer key.&lt;&#x2F;p&gt;
&lt;p&gt;These books are fantastic resources for looking up and referencing grammar, but you can also use websites like HowToStudyKorean for free. In fact, some other websites are basically direct rips from these textbooks, images and all.&lt;&#x2F;p&gt;
&lt;p&gt;I personally just used HowToStudyKorean, and by the time I bought the beginner textbook I realized I already knew nearly all of the grammar... When I start studying for the TOPIK more seriously, I&#x27;ll probably read the intermediate and advanced ones cover to cover.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Korean for Programmers</title>
                <pubDate>Sat, 16 Feb 2019 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/korean-for-programmers/</link>
                <guid>andrewzah.com/posts/korean-for-programmers/</guid>
                <description>&lt;p&gt;I was inspired to write this after reading &lt;em&gt;German for Programmers&lt;&#x2F;em&gt;.&lt;a id=&quot;refer-0&quot; href=&quot;#reference-0&quot;&gt;[0]&lt;&#x2F;a&gt; It&#x27;s quite likely that I&#x27;m just biased to see things a certain way because I work with programming languages for a living, but I often find myself drawing comparisons among Korean and programming.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Korean Food &amp; Cooking Vocabulary Reference</title>
                <pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/korean-cooking-eating-vocabulary-reference/</link>
                <guid>andrewzah.com/posts/korean-cooking-eating-vocabulary-reference/</guid>
                <description>&lt;p&gt;Here is a compiled list of Korean words related to food, cooking, eating (out), going out, and nutrition.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>My growth as a self-taught developer in 2018</title>
                <pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/my-growth-self-taught-software-developer-in-2018/</link>
                <guid>andrewzah.com/posts/my-growth-self-taught-software-developer-in-2018/</guid>
                <description>&lt;p&gt;Now that 2019 is almost here, I&#x27;ve been reflecting on my personal &amp;amp; professional journey as a self taught programmer so far.
Here&#x27;s my story of going from a media arts degree and no job to working fulltime remotely.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Selfhosting git with Gitea, Docker, Caddy</title>
                <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/selfhosting-git-with-gitea-docker-caddy/</link>
                <guid>andrewzah.com/posts/selfhosting-git-with-gitea-docker-caddy/</guid>
                <description>&lt;p&gt;Something I&#x27;ve been doing recently is starting to self-host as much as I can. I don&#x27;t like relying on businesses, since they can change their services on a whim. I host an &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;ZNC&quot;&gt;IRC network bouncer&lt;&#x2F;a&gt;, a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;miniflux&#x2F;miniflux&quot;&gt;feed reader&lt;&#x2F;a&gt;, and so on. But why not a git frontend?&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Making a Discord bot in Crystal: Intro</title>
                <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/making-a-discord-bot-in-crystal-intro/</link>
                <guid>andrewzah.com/posts/making-a-discord-bot-in-crystal-intro/</guid>
                <description>&lt;p&gt;Our goal today is simple: Get a bot up and running via a JSON configuration file, in Crystal, that responds to a &amp;quot;!ping&amp;quot; command.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>A new year, a new site</title>
                <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
                <link>andrewzah.com/posts/a-new-year-a-new-site/</link>
                <guid>andrewzah.com/posts/a-new-year-a-new-site/</guid>
                <description>&lt;p&gt;I&#x27;ve migrated my website. Again.&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>
